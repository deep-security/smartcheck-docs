swagger: '2.0'
info:
  version: '2018-05-01'
  title: Deep Security Smart Check
  description: |
    Deep Security Smart Check is a container image scanner from Trend Micro.
basePath: /api
schemes:
  - https
securityDefinitions:
  token:
    type: apiKey
    name: Authorization
    in: header
    description: >
      Deep Security Smart Check uses token-based authentication for API
      requests. See `Sessions` for APIs related to token management, then
      include the token in an `Authorization` header with the `Bearer` scheme:
      <pre>Authorization: Bearer {token}</pre>
security:
  - token: []
tags:
  - name: Roles
  - name: Users
  - name: Sessions
    description: Authenticated sessions
  - name: Scans
    description: |
      Ongoing and historical scans
  - name: Web hooks
    description: |
      Outgoing web hooks from the scanner
  - name: License
    description: |
      License information
  - name: Registries
  - name: Views
definitions:
  ChangeUserPasswordRequest: &ref_30
    type: object
    properties:
      oldPassword:
        type: string
        format: password
        example: ThIsIsNoTaGoOdPaSsWoRd!
        description: |
          The user's current password.
        maxLength: 1024
      newPassword:
        type: string
        format: password
        example: ThIsIsNoTaBeTtErPaSsWoRd!
        description: |
          The user's new password.
        maxLength: 1024
  UserRequest: &ref_29
    type: object
    properties:
      userID:
        type: string
        example: argus
        description: |
          A unique name for the user.
        maxLength: 64
      password:
        type: string
        format: password
        example: ThIsIsNoTaGoOdPaSsWoRd!
        description: |
          A password for the user.
        maxLength: 1024
      passwordChangeRequired:
        type: boolean
        example: false
        description: >
          If `true`, the user will not be able to perform any actions until they
          change their password.
      name:
        type: string
        description: |
          A display name for the user.
        example: Argus Panoptes
        maxLength: 128
      description:
        type: string
        example: Guardian of the heifer Io.
        description: |
          A description for the user.
        maxLength: 2048
      role:
        type: string
        example: 6552eebd-5172-411e-ac71-8c323e6ca0fe
        description: |
          The user's role ID.
    required: null
  User: &ref_2
    type: object
    properties:
      id:
        type: string
        example: 6552eebd-5172-411e-ac71-8c323e6ca0fe
        description: |
          The user's unique system identifier.
      href:
        type: string
        example: 'https://auth.example.com/users/6552eebd-5172-411e-ac71-8c323e6ca0fe'
        description: |
          The URL at which the user can be found.
      userID:
        type: string
        example: argus
        description: |
          A unique name for the user.
        maxLength: 64
      name:
        type: string
        description: |
          A display name for the user.
        example: Argus Panoptes
        maxLength: 128
      description:
        type: string
        example: Guardian of the heifer Io.
        description: |
          A description for the user.
        maxLength: 2048
      role:
        type: string
        example: 6552eebd-5172-411e-ac71-8c323e6ca0fe
        description: |
          The user's role identifier.
      passwordChangeRequired:
        type: boolean
        example: false
        description: >
          If `true`, the user will not be able to perform any actions until they
          change their password.
      created:
        type: string
        format: datetime
        example: '2018-05-01T00:00:00Z'
        description: |
          The time that the user was created.
      updated:
        type: string
        format: datetime
        example: '2018-05-01T00:00:00Z'
        description: |
          The time that the user was last modified.
    required:
      - id
      - href
      - userID
      - role
      - created
      - updated
  RoleRequest: &ref_25
    type: object
    properties:
      name:
        type: string
        example: Administrator
        description: |
          A name for the role.
        maxLength: 128
      description:
        type: string
        example: An administrator has full access to all operations.
        description: |
          A description for the role.
        maxLength: 2048
      policies:
        type: array
        description: >
          A list of policies for the role. The total size of the policy list
          must be less than 32768 bytes.
        items: &ref_0
          type: object
          properties:
            version:
              type: string
              example: '2018-05-01'
              enum:
                - '2018-05-01'
              description: |
                The policy format version.
            statements:
              description: |
                The list of statements in the policy.
              type: array
              items: &ref_1
                type: object
                properties:
                  effect:
                    type: string
                    example: allow
                    description: |
                      The policy effect if the statement matches.
                    enum:
                      - allow
                      - deny
                  actions:
                    type: array
                    description: >
                      A list of actions. Actions take the form
                      `resourceType:operation` and can have a wildcard in either
                      the `resourceType` or `operation` part. You can also use
                      `*` to match all actions. The required action is listed
                      with each API operation.
                    items:
                      type: string
                      example: '*'
    required:
      - name
      - policies
  Role: &ref_18
    type: object
    properties:
      id:
        type: string
        example: 6552eebd-5172-411e-ac71-8c323e6ca0fe
        description: |
          The role's unique system identifier.
      href:
        type: string
        example: 'https://auth.example.com/roles/6552eebd-5172-411e-ac71-8c323e6ca0fe'
        description: |
          The URL at which the role can be found.
      name:
        type: string
        example: Administrator
        description: |
          A name for the role.
        maxLength: 128
      description:
        type: string
        example: An administrator has full access to all operations.
        description: |
          A description for the role.
        maxLength: 2048
      policies:
        type: array
        description: >
          A list of policies for the role. The total size of the policy list
          must be less than 32768 bytes.
        items: *ref_0
      created:
        type: string
        format: datetime
        example: '2018-05-01T00:00:00Z'
        description: |
          The time that the role was created.
      updated:
        type: string
        format: datetime
        example: '2018-05-01T00:00:00Z'
        description: |
          The time that the role was last modified.
    required:
      - href
      - name
      - policies
      - created
      - updated
  Policy: *ref_0
  Statement: *ref_1
  SessionRequest: &ref_32
    type: object
    properties:
      user:
        type: object
        description: |
          The user to create a session for.
        properties:
          userID:
            type: string
            example: argus
            description: |
              The user's ID.
            maxLength: 64
          password:
            type: string
            format: password
            example: ThIsIsNoTaGoOdPaSsWoRd!
            description: |
              The user's password.
            maxLength: 1024
        required:
          - userID
          - password
    required:
      - user
  Session: &ref_31
    type: object
    properties:
      id:
        type: string
        example: 6552eebd-5172-411e-ac71-8c323e6ca0fe
        description: |
          The session's unique system identifier.
      href:
        type: string
        example: 'https://auth.example.com/sessions/6552eebd-5172-411e-ac71-8c323e6ca0fe'
        description: |
          The URL at which the session can be found.
      user: *ref_2
      token:
        type: string
        description: >
          The session token. Use the session token the `Authorization` header of
          subsequent requests: ```Authorization: Bearer
          SAMPLEeyJhbGciOiJSUz...```
        example: >-
          eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIn0.AzuEel-o9NFJyTvfHx49jMZ-iwU-4NqMQduhUFvWKXXL2ZmMD1Id2ePFU-0ut-esku2avobI7uVDtfEbO6C-Zrn2S4cwsRHnUBCqgzcGwAFr4lHSGi8eAkMSn7b_ceNQu4aGAtDAnCNv3An3U9JUeq29Lze5Md5TTMUSZkFUZR15bJmSKgnd3GvAsIFyIbORmhs2Fe5E9q8jnuSFaeTvvRnlW48Po6bKC09MEhelrES5nnA2tLBu_hMB8VVaDjG7veOtLXrgkH7_6SdBDFZ8Yma_rgA0AwrtYtfQyNunVKctjDq0BE1OPNCJ45n1Cyr7i2TosnYwQUm-v1tX2LZn6g
      created:
        type: string
        format: datetime
        example: '2018-05-01T00:00:00Z'
        description: |
          The time that the session was created.
      updated:
        type: string
        format: datetime
        example: '2018-05-01T00:00:00Z'
        description: |
          The time that the session was last modified.
      expires:
        type: string
        format: datetime
        example: '2018-05-01T00:00:00Z'
        description: |
          The time that the session will expire.
  Error: &ref_13
    type: object
    properties:
      message:
        type: string
        example: 'Something went wrong. To fix it, try ...'
        description: >
          The error message will explain what went wrong and will attempt to
          give some hints as to how to fix it.
      fields:
        description: >
          If present, the `fields` object will indicate which input fields had
          errors; the attribute name will be the name of the input field and the
          value will be an error message.
        type: object
        additionalProperties:
          type: string
          description: >-
            An error message describing the error in the field identified by the
            property name.
    required:
      - message
  WebhookRequest: &ref_5
    type: object
    properties:
      name:
        type: string
        description: |
          (optional) A descriptive name for the web hook.
        example: (optional) a descriptive string
        maxLength: 64
      hookURL:
        type: string
        example: 'https://target.example.com/'
        maxLength: 255
      headers:
        description: >
          (optional) You can include your own headers in the web hook request.
          Use these to provide additional context or authentication information
          to your web hook receiver.
        type: array
        items: &ref_3
          type: object
          properties:
            name:
              type: string
              example: Authorization
              maxLength: 128
            value:
              type: string
              example: >-
                Bearer
                9515e65f46cb737cd8c191db2fd80bbd05686e5992b241e8ad7727510b7142e6
              maxLength: 255
          required:
            - name
            - value
        maxLength: 10
      secret:
        description: >
          (optional) If you provide a `secret` value, then events sent over HTTP
          will include an `X-Scan-Event-Signature` header that is the SHA-256
          HMAC of the event body using your secret as the key.


          *This value is write-only: the API will not return the secret or show
          that it has been set.*
        type: string
        format: password
        maxLength: 64
      insecureSkipVerify:
        type: boolean
        example: false
        description: >
          (optional, default: `false`) If `true`, the web hook will not verify
          TLS connections to the web hook URL. Use this only in controlled
          environments where you know that connections between the Deep Security
          Smart Check scanner and the hook URL are secured by other means.
      rootCAs:
        type: string
        example: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCi4uLiBhbmQgc28gb24gLi4uCg==
        description: >
          (optional, default: `null`) If present, the web hook will use the
          provided root CAs as the trusted root CAs for HTTPS web hook requests.
          The value should be a base-64 encoded list of PEM-encoded
          certificates. If not present, the web hook will use a set of built-in
          trusted root CAs.

          If `insecureSkipVerify` is set to `true`, then the root CAs are not
          checked.
        maxLength: 32768
      active:
        type: boolean
        example: true
        description: >
          (optional, default: `false`). If `true`, the web hook will be invoked
          whenever a matching event occurs.
      events:
        type: array
        description: >
          (optional, default: `["*"]`) If present, this is a list of event types
          that will be checked before calling the web hook. If the event type
          matches one of the elements of the list, the web hook will be called.
          If the list is empty, *all* events will match.
        items:
          type: string
          enum:
            - scan-requested
            - scan-started
            - scan-completed
            - '*'
        maxLength: 10
    required:
      - hookURL
  WebhookHeaderRequest: *ref_3
  Webhook: &ref_38
    type: object
    properties:
      id:
        description: >
          (optional) If you provide a web hook ID, the scanner will check
          whether it has already received another request from you with the same
          ID. If it has, the scanner will return `409 Conflict`. If you don't
          provide a web hook ID, the scanner will create one for you.
        type: string
        example: (optional) any unique string
      href:
        type: string
        example: >-
          https://scanner.example.com/api/webhooks/7a2f1d8c-7780-41d2-821b-7230005d4be8
      name:
        type: string
        description: |
          (optional) A descriptive name for the web hook.
        example: (optional) a descriptive string
        maxLength: 64
      hookURL:
        type: string
        example: 'https://target.example.com/'
        maxLength: 255
      headers:
        type: array
        items: &ref_4
          type: object
          required:
            - id
            - href
            - name
            - value
          properties:
            id:
              type: string
              example: 6af2e0e1-bb7c-45b7-9a3f-152a80d154eb
            href:
              type: string
              example: >-
                https://scanner.example.com/api/webhooks/7a2f1d8c-7780-41d2-821b-7230005d4be8/headers/6af2e0e1-bb7c-45b7-9a3f-152a80d154eb
            name:
              type: string
              example: Authorization
              maxLength: 128
            value:
              type: string
              example: >-
                Bearer
                9515e65f46cb737cd8c191db2fd80bbd05686e5992b241e8ad7727510b7142e6
              maxLength: 255
      insecureSkipVerify:
        type: boolean
        example: false
        description: >
          (optional, default: `false`) If `true`, the web hook will not verify
          TLS connections to the web hook URL. Use this only in controlled
          environments where you know that connections between the Deep Security
          Smart Check scanner and the hook URL are secured by other means.
      rootCAs:
        type: string
        example: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCi4uLiBhbmQgc28gb24gLi4uCg==
        description: >
          (optional, default: `null`) If present, the web hook will use the
          provided root CAs as the trusted root CAs for HTTPS web hook requests.
          The value should be a base-64 encoded list of PEM-encoded
          certificates. If not present, the web hook will use a set of built-in
          trusted root CAs.

          If `insecureSkipVerify` is set to `true`, then the root CAs are not
          checked.
        maxLength: 32768
      active:
        type: boolean
        example: true
      events:
        type: array
        description: >
          (optional, default: `["*"]`) If present, this is a list of event types
          that will be checked before calling the web hook. If the event type
          matches one of the elements of the list, the web hook will be called.
          If the list is empty, *all* events will match.
        items:
          type: string
          enum:
            - scan-requested
            - scan-started
            - scan-completed
            - '*'
        maxLength: 10
      created:
        type: string
        format: date-time
        example: '2018-05-01T00:00:00Z'
      updated:
        type: string
        format: date-time
        example: '2018-05-01T00:00:00Z'
    required:
      - id
      - name
      - href
      - hookURL
      - headers
      - active
      - events
      - created
  WebhookHeader: *ref_4
  ScanRequest: &ref_34
    type: object
    properties:
      id:
        description: >
          (optional) If you provide a request ID, the scanner will check whether
          it has already received another request from you with the same ID. If
          it has, the scanner will return `409 Conflict`. If you don't provide a
          request ID, the scanner will create one for you.
        type: string
        example: (optional) any unique string
      name:
        type: string
        description: |
          (optional) A descriptive name for the scan.
        example: (optional) a descriptive string
        maxLength: 128
      source: &ref_6
        type: object
        properties:
          type:
            type: string
            enum:
              - docker
          registry:
            type: string
            description: |
              (for scan type `docker` only) The registry hostname or IP address.
            example: registry.example.com
            maxLength: 255
          repository:
            type: string
            description: |
              (for scan type `docker` only) The repository name.
            example: organization/project
            maxLength: 255
          tag:
            type: string
            description: |
              (for scan type `docker` only) The tag of the image to scan.
            example: latest
            maxLength: 255
          credentials: &ref_7
            type: object
            properties:
              token:
                type: string
                description: >
                  (optional) Use this if your source requires requests to be
                  authorized using a bearer token. Requests will include an
                  `Authorization: Bearer {token}` header.
                example: >-
                  9515e65f46cb737cd8c191db2fd80bbd05686e5992b241e8ad7727510b7142e6
                maxLength: 10000
              username:
                type: string
                description: >
                  (optional) Use this if your source requires requests to be
                  authorized using basic username + password authentication.
                  Requests will include an `Authorization: Basic {encoded
                  username + password}` header.
                example: username
                maxLength: 128
              password:
                type: string
                format: password
                description: >
                  (optional) Use this if your source requires requests to be
                  authorized using basic username + password authentication.
                  Requests will include an `Authorization: Basic {encoded
                  username + password}` header.
                example: '************'
                maxLength: 10000
              aws:
                type: object
                properties:
                  region:
                    type: string
                    description: >
                      The AWS region identifier for the region where the
                      registry is located.
                    example: us-east-1
                    maxLength: 64
                  accessKeyID:
                    type: string
                    description: >
                      The optional AWS IAM access key identifier to use when
                      requesting the registry authorization token. If `roleID`
                      is also set, then `accessKeyID` is the AWS IAM access key
                      ID used to authorize the AWS STS `AssumeRole` request to
                      assume the role. If `accessKeyID` is not set, then the
                      default credential chain is used.
                    example: AKIAIOSFODNN7EXAMPLE
                    maxLength: 64
                  secretAccessKey:
                    type: string
                    description: >
                      The optional AWS IAM secret access key to use when
                      requesting the registry authorization token. If `roleID`
                      is also set, then `secretAccessKey` is the AWS IAM secret
                      access key used to authorize the AWS STS `AssumeRole`
                      request to assume the role.
                    example: wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY
                    maxLength: 128
                  role:
                    type: string
                    description: >
                      The optional AWS IAM role to assume when requesting the
                      registry authorization token. If `accessKeyID` is also
                      set, then `accessKeyID` and `secretAccessKey` are used to
                      authorize the STS `AssumeRole` API request when assuming
                      this role. If AccessKeyID is not set, then the default
                      credential chain is used when assuming the role.
                    example: 'arn:aws:iam::account-id:role/role-name'
                    maxLength: 2048
                  externalID:
                    type: string
                    description: >
                      The optional "external ID" to use when calling the AWS STS
                      `AssumeRole` API to assume the role specified in `roleID`.
                      The external ID may be required by the trust policy on the
                      role being assumed.
                    example: myExternalID
                    maxLength: 1224
                  roleSessionName:
                    type: string
                    description: >
                      The optional "role session name" to use when calling the
                      AWS STS AssumeRole API to assume the role specified in
                      `roleID`. If `roleSessionName` is not provided, then
                      `DeepSecuritySmartCheck` will be used.
                    example: DeepSecuritySmartCheck
                    pattern: '^[\w+=,.@-]*$'
                    maxLength: 64
                  registry:
                    type: string
                    description: >
                      The optional registry ID to use to get the registry
                      authorization token. This can be used to access the
                      registry in another AWS account. If not provided, the
                      default registry will be used.
                    example: account-id
                    maxLength: 64
                required:
                  - region
          insecureSkipVerify:
            type: boolean
            example: false
            description: >
              (optional, default: `false`) If `true`, the scan will not verify
              TLS connections to the source URL. Use this only in controlled
              environments where you know that connections between the Deep
              Security Smart Check scanner and the source are secured by other
              means.
          rootCAs:
            type: string
            example: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCi4uLiBhbmQgc28gb24gLi4uCg==
            description: >
              (optional, default: `null`) If present, the web hook will use the
              provided root CAs as the trusted root CAs for HTTPS source
              requests. The value should be a base-64 encoded list of
              PEM-encoded certificates. If not present, source requests will use
              a set of built-in trusted root CAs.

              If `insecureSkipVerify` is set to `true`, then the root CAs are
              not checked.
            maxLength: 32768
        required:
          - type
      webhooks:
        description: >
          (optional) A list of web hooks to call when events happen for the
          scan.
        type: array
        items: *ref_5
    required:
      - source
  SourceRequest: *ref_6
  Source: &ref_8
    type: object
    properties:
      type:
        type: string
        enum:
          - docker
      registry:
        type: string
        description: |
          (for scan type `docker` only) The registry hostname or IP address.
        example: registry.example.com
        maxLength: 255
      repository:
        type: string
        description: |
          (for scan type `docker` only) The repository name.
        example: organization/project
        maxLength: 255
      tag:
        type: string
        description: |
          (for scan type `docker` only) The tag of the image to scan.
        example: latest
        maxLength: 255
      insecureSkipVerify:
        type: boolean
        example: false
        description: >
          (optional, default: `false`) If `true`, the scan will not verify TLS
          connections to the source URL. Use this only in controlled
          environments where you know that connections between the Deep Security
          Smart Check scanner and the source are secured by other means.
      rootCAs:
        type: string
        example: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCi4uLiBhbmQgc28gb24gLi4uCg==
        description: >
          (optional, default: `null`) If present, the web hook will use the
          provided root CAs as the trusted root CAs for HTTPS web hook requests.
          The value should be a base-64 encoded list of PEM-encoded
          certificates. If not present, the web hook will use a set of built-in
          trusted root CAs.

          If `insecureSkipVerify` is set to `true`, then the root CAs are not
          checked.
        maxLength: 32768
    required:
      - type
  Credentials: *ref_7
  Scan: &ref_33
    type: object
    properties:
      id:
        type: string
        description: |
          The unique ID assigned to this scan.
      href:
        type: string
        example: >-
          https://scanner.example.com/api/scans/60e53669-c8ef-4d0f-a8ff-3dbbb098d8ff
        description: |
          The URL to the scan resource.
      name:
        type: string
        description: |
          If you provided a name for the scan, it will be returned here.
        maxLength: 128
      source: *ref_8
      status:
        type: string
        enum:
          - pending
          - in-progress
          - completed-with-findings
          - completed-no-findings
          - failed
      details: &ref_10
        type: object
        properties:
          detail:
            type: string
            example: More details about the scan status
            description: |
              (optional) More details about the scan status.
          requested:
            type: string
            format: date-time
            example: '2018-05-01T00:00:00Z'
            description: |
              The time that the scan was requested.
          started:
            type: string
            format: date-time
            example: '2018-05-01T00:00:00Z'
            description: >
              The time that the scan started. This value will not be present if
              the scan has not yet started.
          updated:
            type: string
            format: date-time
            example: '2018-05-01T00:00:00Z'
            description: >
              The time that the scan was last updated. This value will not be
              present if the scan has not yet started.
          completed:
            type: string
            format: date-time
            example: '2018-05-01T00:00:00Z'
            description: >
              The time that the scan completed. This value will not be present
              if the scan has not yet completed.
          digest:
            type: string
            example: >-
              sha256:43ea500473edb96e079fe23aba62d60e09c11d4c4714ca284d50b80e064c05e3
            description: >
              The image digest for the scanned image. This value will only be
              present for Docker scans.
          os:
            type: string
            example: linux
            description: >
              The target operating system for the scanned image. This value will
              only be present for Docker scans.
          architecture:
            type: string
            example: amd64
            description: >
              The target architecture for the scanned image. This value will
              only be present for Docker scans.
          labels:
            type: object
            additionalProperties:
              type: string
            description: >-
              The labels associated with the scanned image. This value will only
              be present for Docker scans.
            example:
              key: value
          results:
            type: array
            items: &ref_11
              type: object
              properties:
                id:
                  type: string
                  example: >-
                    sha256:77beb64c6eca68574566d5b04b9f64c71d9b7757a446d562b7d0ae4b13b7c467
                  description: >
                    A layer identifier. For scans of type `docker`, this will be
                    the layer's `digest` value. This attribute will not be
                    present for scans of type `http`.
                createdAt:
                  type: string
                  format: date-time
                  example: '2018-05-01T00:00:00Z'
                  description: >
                    For scans of Docker images, this attribute will show the
                    time at which the layer was created.
                createdBy:
                  type: string
                  example: >-
                    /bin/sh -c #(nop) ADD
                    file:5d127078b2f213dbbf08ca35dafd027011606887a655f641024b14d93ee0de2f
                    in /run-httpd.sh
                  description: >
                    For scans of Docker images, this attribute will show the
                    Docker daemon command that ran to create this layer. This is
                    not an exact match to the `Dockerfile` line, but will help
                    to provide better context of the results.
                malware:
                  type: string
                  description: >
                    If present, a URL pointing to the list of malware that was
                    found. See <a
                    href="#listScanLayerMalware">listScanLayerMalware</a>.
                vulnerabilities:
                  type: string
                  description: >
                    If present, a URL pointing to the list of vulnerabilities
                    that were found. See <a
                    href="#listScanLayerVulnerabilities">listScanLayerVulnerabilities</a>.
                findings: &ref_9
                  type: object
                  properties:
                    scanners:
                      type: object
                      description: |
                        Metadata about the scanners that produced the results.
                      properties:
                        malware:
                          description: |
                            Metadata for the malware scanner.
                          type: object
                          properties:
                            status:
                              description: |
                                Availability of the malware scanner.
                              type: string
                              enum:
                                - ok
                                - unavailable
                            updated:
                              description: >
                                The time that the malware pattern database was
                                last updated.
                              type: string
                              format: date-time
                              example: '2018-05-01T00:00:00Z'
                            versions:
                              type: object
                              properties:
                                icrc:
                                  type: string
                                  description: |
                                    The ICRC pattern version.
                                trendX:
                                  type: string
                                  description: |
                                    The TrendX pattern version.
                                blacklist:
                                  type: string
                                  description: |
                                    The malware blacklist pattern version.
                        vulnerabilities:
                          description: |
                            Metadata for the vulnerability scanner.
                          type: object
                          properties:
                            status:
                              description: |
                                Availability of the vulnerability scanner.
                              type: string
                              enum:
                                - ok
                                - unavailable
                            updated:
                              description: >
                                The time that the vulnerabilities database was
                                last updated.
                              type: string
                              format: date-time
                              example: '2018-05-01T00:00:00Z'
                    malware:
                      type: integer
                      description: |
                        The number of malware items that were found.
                        high:
                    vulnerabilities:
                      type: object
                      description: |
                        The number of vulnerabilities found by severity.
                      properties:
                        total:
                          type: object
                          description: >
                            The total number of vulnerabilities that were found
                            by severity.
                          properties:
                            defcon1:
                              type: integer
                              description: >
                                The number of "Defcon1" vulnerabilities that
                                were found.
                            critical:
                              type: integer
                              description: >
                                The number of critical vulnerabilities that were
                                found.
                            high:
                              type: integer
                              description: >
                                The number of high-severity vulnerabilities that
                                were found.
                            medium:
                              type: integer
                              description: >
                                The number of medium-severity vulnerabilities
                                that were found.
                            low:
                              type: integer
                              description: >
                                The number of low-severity vulnerabilities that
                                were found.
                            negligible:
                              description: >
                                The number of negligible vulnerabilities that
                                were found.
                              type: integer
                            unknown:
                              type: integer
                              description: >
                                The number of vulnerabilities with unknown
                                severity that were found.
                        unresolved:
                          type: object
                          description: >
                            The number of unresolved vulnerabilities that were
                            found by severity. Unresolved vulnerabilities are
                            vulnerabilities that were found in a layer and were
                            not fixed by an update in a subsequent layer.
                          properties:
                            defcon1:
                              type: integer
                              description: >
                                The number of "Defcon1" vulnerabilities that
                                were found.
                            critical:
                              type: integer
                              description: >
                                The number of critical vulnerabilities that were
                                found.
                            high:
                              type: integer
                              description: >
                                The number of high-severity vulnerabilities that
                                were found.
                            medium:
                              type: integer
                              description: >
                                The number of medium-severity vulnerabilities
                                that were found.
                            low:
                              type: integer
                              description: >
                                The number of low-severity vulnerabilities that
                                were found.
                            negligible:
                              description: >
                                The number of negligible vulnerabilities that
                                were found.
                              type: integer
                            unknown:
                              type: integer
                              description: >
                                The number of vulnerabilities with unknown
                                severity that were found.
        required:
          - requested
          - results
      findings: *ref_9
    required:
      - id
      - href
      - name
      - status
  ResultsMetrics: *ref_9
  ScanStatusDetails: *ref_10
  LayerResults: *ref_11
  MalwareScanResult: &ref_36
    type: object
    properties:
      filename:
        type: string
        description: |
          The file where the malware was detected.
        example: path/to/file
      icrc:
        type: object
        properties:
          name:
            type: string
            description: |
              The name of the malware that was detected.
            example: Eicar_test_file
          url:
            type: string
            description: |
              A link to more information about the detected malware.
            example: >-
              https://www.trendmicro.com/vinfo/us/threat-encyclopedia/malware/eicar_test_file
        required:
          - name
          - url
      trendx:
        type: object
        properties:
          found:
            type: object
            properties:
              name:
                type: string
                description: |
                  The name of the malware that was detected.
                example: Eicar_test_file
              url:
                type: string
                description: |
                  A link to more information about the detected malware.
                example: >-
                  https://www.trendmicro.com/vinfo/us/threat-encyclopedia/malware/eicar_test_file
            required:
              - name
              - url
          confidence:
            type: integer
            example: 100
          related:
            type: array
            items:
              type: object
              properties:
                name:
                  type: string
                  description: |
                    The name of related malware that was detected.
                  example: Eicar_test_file
                url:
                  type: string
                  description: |
                    A link to more information about the detected malware.
                  example: >-
                    https://www.trendmicro.com/vinfo/us/threat-encyclopedia/malware/eicar_test_file
              required:
                - name
                - url
  VulnerabilityScanResult: &ref_37
    type: object
    properties:
      name:
        type: string
        description: |
          The name of an installed package with known vulnerabilities.
      namespaceName:
        type: string
        description: |
          ??? TODO ???
      version:
        type: string
        description: |
          The package version that was detected.
      versionFormat:
        type: string
        description: |
          The version format.
      vulnerabilities:
        type: array
        description: |
          A list of the known vulnerabilities in this package.
        items: &ref_12
          type: object
          properties:
            description:
              type: string
              description: |
                A description of the known vulnerability in this package.
            fixedBy:
              type: string
              description: >
                The version of the package where the vulnerability has been
                resolved.
            link:
              type: string
              description: |
                A link to more information about the vulnerability.
            name:
              type: string
              description: |
                The name of the vulnerability.
            namespaceName:
              type: string
              description: |
                ??? TODO ???
            severity:
              type: string
              example: High
              enum:
                - Defcon1
                - Critical
                - High
                - Medium
                - Low
                - Negligible
                - Unknown
              description: >
                The severity assigned to the vulnerability:

                * Defcon1: is a `Critical` problem which has been manually
                highlighted by the team. It requires immediate attention.

                * Critical: a world-burning problem, exploitable for nearly all
                people in a default installation of Linux. Includes remote root
                privilege escalations, or massive data loss.

                * High: a real problem, exploitable for many people in a default
                installation. Includes serious remote denial of services, local
                root privilege escalations, or data loss.

                * Medium: a real security problem, and is exploitable for many
                people. Includes network daemon denial of service attacks,
                cross-site scripting, and gaining user privileges. Updates
                should be made soon for this priority of issue.

                * Low: a security problem, but is hard to exploit due to
                environment, requires a user-assisted attack, a small install
                base, or does very little damage. These tend to be included in
                security updates only when higher-priority issues require an
                upgrade, or if many low-priority issues have built up.

                * Negligible: is technically a security problem, but is only
                theoretical in nature, requires a very special situation, has
                almost no install base, or does no real damage. These tend not
                to get backported from upstreams, and will likely not be
                included in security updates unless there is an easy fix and
                some other issue causes an update.
          required:
            - description
            - name
            - namespaceName
            - severity
      findings:
        type: object
        properties:
          defcon1:
            type: integer
            description: |
              The number of "Defcon1" vulnerabilities that were found.
          critical:
            type: integer
            description: |
              The number of critical vulnerabilities that were found.
          high:
            type: integer
            description: |
              The number of high-severity vulnerabilities that were found.
          medium:
            type: integer
            description: |
              The number of medium-severity vulnerabilities that were found.
          low:
            type: integer
            description: |
              The number of low-severity vulnerabilities that were found.
          negligible:
            description: |
              The number of negligible vulnerabilities that were found.
            type: integer
          unknown:
            type: integer
            description: >
              The number of vulnerabilities with unknown severity that were
              found.
    required:
      - name
      - namespaceName
      - version
      - versionFormat
      - vulnerabilities
  Vulnerability: *ref_12
  Image: &ref_44
    type: object
    properties:
      registry:
        type: string
        example: 'https://registry.example.com'
        description: |
          The registry URL where the image can be found.
        maximum: 255
      repository:
        type: string
        example: deepsecurity-smartcheck/example
        description: |
          The repository where the image can be found.
        maximum: 255
      tag:
        type: string
        example: latest
        description: |
          The tag assigned to the image.
        maximum: 255
      digest:
        type: string
        example: >-
          sha256:8476ee13937bfbf3ea2bce060448002a19c19c063b66583dae31cde64b2f2406
        description: |
          The image's hash digest.
      status:
        type: string
        description: |
          The image's last known scan status.
        enum:
          - ''
          - pending
          - in-progress
          - completed-no-findings
          - completed-with-findings
          - failed
      findings: *ref_9
      updated:
        type: string
        format: datetime
        example: '2017-04-01T00:00:00Z'
        description: |
          The time that the image status was last modified.
    required:
      - registry
      - repository
      - tag
      - digest
      - status
      - updated
  ViewRequest: &ref_43
    type: object
    properties:
      name:
        type: string
        description: |
          The name to display for the view.
        example: My View
        maxLength: 255
      description:
        type: string
        maxLength: 2048
        description: |
          A longer-form note to attach to the view.
        example: |
          This view is an example, and this description is similarly exemplary.
      filters:
        type: object
        description: >
          The filters that define the repositories and tags that will be shown
          in the view. Each key in the object should be a registry ID; the value
          is a filter indicating what to include / exclude. The maximum size of
          the filters for a view is 32768 bytes.
        additionalProperties:
          type: object
          properties:
            include:
              type: array
              description: >
                A pattern to use when determining which images to include in the
                view.
              items:
                type: string
                example: '*:latest'
              default:
                - '*'
            exclude:
              type: array
              description: >
                A pattern to use when determining which images to exclude from
                the view.
              items:
                type: string
                example: experimental/*
              default: []
          required:
            - include
            - exclude
        example:
          6552eebd-5172-411e-ac71-8c323e6ca0fe:
            include:
              - '*:latest'
            exclude:
              - experimental/*
      schedule:
        type: boolean
        description: |
          If `true`, this view will be scheduled for daily re-scan.
    required:
      - name
      - filters
  View: &ref_42
    type: object
    properties:
      id:
        type: string
        example: 6552eebd-5172-411e-ac71-8c323e6ca0fe
        description: |
          The view ID.
      href:
        type: string
        example: /api/views/6552eebd-5172-411e-ac71-8c323e6ca0fe
        description: |
          The URL at which the view can be found.
      name:
        type: string
        description: |
          The name to display for the view.
        example: My View
        maxLength: 255
      description:
        type: string
        maxLength: 2048
        description: |
          A longer-form note to attach to the view.
        example: |
          This view is an example, and this description is similarly exemplary.
      status:
        type: string
        description: |
          The status of the view.
        enum:
          - pending
          - ok
          - failed
      detail:
        type: string
        description: |
          More detail about the view status.
        enum:
          - ''
          - connection-failed
      filters:
        type: object
        description: >
          The filters that define the repositories and tags that will be shown
          in the view. Each key in the object should be a registry ID; the value
          is a filter indicating what to include / exclude. The maximum size of
          the filters for a view is 32768 bytes.
        additionalProperties:
          type: object
          properties:
            include:
              type: array
              description: >
                A pattern to use when determining which images to include in the
                view.
              items:
                type: string
                example: '*:latest'
              default:
                - '*'
            exclude:
              type: array
              description: >
                A pattern to use when determining which images to exclude from
                the view.
              items:
                type: string
                example: experimental/*
              default: []
          required:
            - include
            - exclude
        example:
          6552eebd-5172-411e-ac71-8c323e6ca0fe:
            include:
              - '*:latest'
            exclude:
              - experimental/*
      schedule:
        type: boolean
        description: |
          If `true`, this view will be scheduled for daily re-scan.
      metrics:
        type: object
        description: |
          View metrics.
        properties:
          content:
            description: |
              Metrics capturing information about the content of the view.
            type: object
            properties:
              registries:
                type: integer
                description: |
                  The number of registries referenced by the view.
              repositories:
                type: integer
                description: |
                  The number of repositories with content in the view.
              images:
                type: integer
                description: |
                  The number of images in the view.
          scans:
            type: object
            description: >
              Metrics capturing information about the scan status of images in
              the view.
            properties:
              pending:
                type: integer
                description: >
                  The number of images in the view that have not yet been
                  scanned.
              ok:
                type: integer
                description: >
                  The number of images in the view that have been scanned and
                  have had no findings.
              warnings:
                type: integer
                description: >
                  The number of images in the view that have been scanned and
                  have had findings.
              errors:
                type: integer
                description: >
                  The number of images in the view that have been scanned and
                  have encountered errors during the scan.
          findings: *ref_9
          history:
            type: object
            description: |
              Aggregate metrics over a period of time.
            properties:
              1d:
                type: object
                description: |
                  Metrics over the past 24 hours.
                properties:
                  scans:
                    type: integer
                    description: >
                      The number of scans performed on images in the view in the
                      time period. Will be `-1` if there was an error
                      calculating the value.
              1w:
                type: object
                description: |
                  Metrics over the past 7 days.
                properties:
                  scans:
                    type: integer
                    description: >
                      The number of scans performed on images in the view in the
                      time period. Will be `-1` if there was an error
                      calculating the value.
      created:
        type: string
        format: datetime
        example: '2017-04-01T00:00:00Z'
        description: |
          The time that the view was created.
      updated:
        type: string
        format: datetime
        example: '2017-04-01T00:00:00Z'
        description: |
          The time that the view was last modified.
    required:
      - name
      - filters
      - metrics
      - created
      - updated
  RegistryRequest: &ref_41
    type: object
    properties:
      name:
        type: string
        maxLength: 255
        description: >
          The name to display for the registry. If not specified, the registry
          `host` value will be used as the initial name.
        example: My Registry
      description:
        type: string
        maxLength: 2048
        description: |
          A longer-form note to attach to the registry.
        example: >
          This registry is an example, and this description is similarly
          exemplary.
      host:
        type: string
        maxLength: 255
        example: registry.example.com
        description: >
          The host where the registry can be found. Required except when using
          Amazon Elastic Container Registry.
      credentials:
        type: object
        description: |
          Credentials to use when accessing the registry.
        properties:
          username:
            type: string
            maxLength: 64
            description: >
              (optional) Use this if your source requires requests to be
              authorized using basic username + password authentication.
              Requests will include an `Authorization: Basic {encoded username +
              password}` header.
            example: username
          password:
            type: string
            maxLength: 4096
            format: password
            description: >
              (optional) Use this if your source requires requests to be
              authorized using basic username + password authentication.
              Requests will include an `Authorization: Basic {encoded username +
              password}` header.
            example: '************'
          aws:
            type: object
            properties:
              region:
                type: string
                description: >
                  The AWS region identifier for the region where the registry is
                  located.
                example: us-east-1
                maxLength: 64
              accessKeyID:
                type: string
                description: >
                  The optional AWS IAM access key identifier to use when
                  requesting the registry authorization token. If `roleID` is
                  also set, then `accessKeyID` is the AWS IAM access key ID used
                  to authorize the AWS STS `AssumeRole` request to assume the
                  role. If `accessKeyID` is not set, then the default credential
                  chain is used.
                example: AKIAIOSFODNN7EXAMPLE
                maxLength: 64
              secretAccessKey:
                type: string
                description: >
                  The optional AWS IAM secret access key to use when requesting
                  the registry authorization token. If `roleID` is also set,
                  then `secretAccessKey` is the AWS IAM secret access key used
                  to authorize the AWS STS `AssumeRole` request to assume the
                  role.
                example: wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY
                maxLength: 128
              role:
                type: string
                description: >
                  The optional AWS IAM role to assume when requesting the
                  registry authorization token. If `accessKeyID` is also set,
                  then `accessKeyID` and `secretAccessKey` are used to authorize
                  the STS `AssumeRole` API request when assuming this role. If
                  AccessKeyID is not set, then the default credential chain is
                  used when assuming the role.
                example: 'arn:aws:iam::account-id:role/role-name'
                maxLength: 2048
              externalID:
                type: string
                description: >
                  The optional "external ID" to use when calling the AWS STS
                  `AssumeRole` API to assume the role specified in `roleID`. The
                  external ID may be required by the trust policy on the role
                  being assumed.
                example: myExternalID
                maxLength: 1224
              roleSessionName:
                type: string
                description: >
                  The optional "role session name" to use when calling the AWS
                  STS AssumeRole API to assume the role specified in `roleID`.
                  If `roleSessionName` is not provided, then
                  `DeepSecuritySmartCheck` will be used.
                example: DeepSecuritySmartCheck
                pattern: '^[\w+=,.@-]*$'
                maxLength: 64
              registry:
                type: string
                description: >
                  The optional registry ID to use to get the registry
                  authorization token. This can be used to access the registry
                  in another AWS account. If not provided, the default registry
                  will be used.
                example: account-id
                maxLength: 64
            required:
              - region
      insecureSkipVerify:
        type: boolean
        example: false
        description: >
          If `true`, Deep Security Smart Check will not verify TLS connections
          to the registry. Use this only in controlled environments where you
          know that connections between the Deep Security Smart Check scanner
          and the registry are secured by other means.
      rootCAs:
        type: string
        example: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCi4uLiBhbmQgc28gb24gLi4uCg==
        description: >
          (optional, default: `null`) If present, the service will use the
          provided root CAs as the trusted root CAs for registry requests. The
          value should be a base-64 encoded list of PEM-encoded certificates. If
          not present, the service will use a set of built-in trusted root CAs.

          If `insecureSkipVerify` is set to `true`, then the root CAs are not
          checked.
        maxLength: 32768
  Registry: &ref_39
    type: object
    description: |
      The registry object. Credentials will not be included in this object.
    properties:
      id:
        type: string
        example: 6552eebd-5172-411e-ac71-8c323e6ca0fe
        description: |
          The registry ID.
      href:
        type: string
        example: /api/registries/6552eebd-5172-411e-ac71-8c323e6ca0fe
        description: |
          The URL at which the registry can be found.
      name:
        type: string
        description: |
          The name to display for the registry.
        example: My Registry
        maxLength: 255
      description:
        type: string
        description: |
          A longer-form note to attach to the registry.
        example: >
          This registry is an example, and this description is similarly
          exemplary.
        maxLength: 2048
      host:
        type: string
        example: registry.example.com
        description: |
          The host where the registry can be found.
        maxLength: 255
      insecureSkipVerify:
        type: boolean
        example: false
        description: >
          If `true`, Deep Security Smart Check will not verify TLS connections
          to the registry. Use this only in controlled environments where you
          know that connections between the Deep Security Smart Check scanner
          and the registry are secured by other means.
      rootCAs:
        type: string
        example: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCi4uLiBhbmQgc28gb24gLi4uCg==
        description: >
          (optional, default: `null`) If present, the service will use the
          provided root CAs as the trusted root CAs for registry requests. The
          value should be a base-64 encoded list of PEM-encoded certificates. If
          not present, the service will use a set of built-in trusted root CAs.

          If `insecureSkipVerify` is set to `true`, then the root CAs are not
          checked.
        maxLength: 32768
      status:
        type: string
        enum:
          - pending
          - ok
          - failed
        example: pending
        description: >
          Reports the status of the connection from Deep Security Smart Check to
          the registry.

          * `pending`: Deep Security Smart Check has not yet attempted to
          connect to the registry

          * `ok`: The last connection attempt to the registry was successful.

          * `failed`: The last connection attempt to the registry failed.
      statusDetail:
        type: string
        description: |
          Reports additional detail when the status is `failed`.
        example: ''
      created:
        type: string
        format: datetime
        example: '2017-04-01T00:00:00Z'
        description: |
          The time that the registry connection was created.
      updated:
        type: string
        format: datetime
        example: '2017-04-01T00:00:00Z'
        description: |
          The time that the registry connection was last modified.
    required:
      - name
      - status
      - created
      - updated
responses:
  '400': &ref_19
    description: >
      Something about your request didn't quite make sense. The error message
      should help you figure out what went wrong.
    headers:
      X-Request-Id:
        type: string
        description: |
          The request ID assigned to this request.
      X-Api-Version:
        type: string
        description: |
          The API version used in this request.
      X-Api-Notice:
        type: string
        description: >
          If present, this header will include important API information. We
          will use this header as one way to notify you that a new API version
          is available or that the API you are using is going to be removed.
    schema: *ref_13
  '401': &ref_20
    description: >
      Did you forget to include a session token in your request? You need to
      include

      ```

      Authorization: Bearer {token}

      ```

      in all requests. You can get a token from the `POST /sessions` API.
    headers:
      X-Request-Id:
        type: string
        description: |
          The request ID assigned to this request.
      X-Api-Version:
        type: string
        description: |
          The API version used in this request.
      X-Api-Notice:
        type: string
        description: >
          If present, this header will include important API information. We
          will use this header as one way to notify you that a new API version
          is available or that the API you are using is going to be removed.
    schema: *ref_13
  '403': &ref_21
    description: >
      You tried to do something that you're not allowed to do, you naughty
      scamp. Check your privileges to see what you're actually allowed to do.
      This could also mean that your token has expired.
    headers:
      X-Request-Id:
        type: string
        description: |
          The request ID assigned to this request.
      X-Api-Version:
        type: string
        description: |
          The API version used in this request.
      X-Api-Notice:
        type: string
        description: >
          If present, this header will include important API information. We
          will use this header as one way to notify you that a new API version
          is available or that the API you are using is going to be removed.
    schema: *ref_13
  '404': &ref_35
    description: |
      The resource you were looking for doesn't exist.
    headers:
      X-Request-Id:
        type: string
        description: |
          The request ID assigned to this request.
      X-Api-Version:
        type: string
        description: |
          The API version used in this request.
      X-Api-Notice:
        type: string
        description: >
          If present, this header will include important API information. We
          will use this header as one way to notify you that a new API version
          is available or that the API you are using is going to be removed.
    schema: *ref_13
  '409': &ref_40
    description: >
      The preconditions in the request you made could not be met. Check the
      `message` string in the response for help troubleshooting the problem.
    headers:
      X-Request-Id:
        type: string
        description: |
          The request ID assigned to this request.
      X-Api-Version:
        type: string
        description: |
          The API version used in this request.
      X-Api-Notice:
        type: string
        description: >
          If present, this header will include important API information. We
          will use this header as one way to notify you that a new API version
          is available or that the API you are using is going to be removed.
    schema: *ref_13
  '429': &ref_22
    description: >
      You have made too many requests too quickly. Check the `Retry-After`
      header for an indication of when you might be able to try again.
    headers:
      X-Request-Id:
        type: string
        description: |
          The request ID assigned to this request.
      X-Api-Version:
        type: string
        description: |
          The API version used in this request.
      X-Api-Notice:
        type: string
        description: >
          If present, this header will include important API information. We
          will use this header as one way to notify you that a new API version
          is available or that the API you are using is going to be removed.
      Retry-After:
        description: >
          The amount of time (in seconds) you should wait before trying this
          request again.
        type: integer
    schema: *ref_13
  '500': &ref_23
    description: >
      Something has gone terribly wrong. Sorry! The error message may help you
      figure out what went wrong, but it's unlikely that you'll be able to do
      anything about it unless you're the server administrator. It's possible
      that trying again will help, but it's more likely that you're out of luck
      for the moment.
    headers:
      X-Request-Id:
        type: string
        description: |
          The request ID assigned to this request.
      X-Api-Version:
        type: string
        description: |
          The API version used in this request.
      X-Api-Notice:
        type: string
        description: >
          If present, this header will include important API information. We
          will use this header as one way to notify you that a new API version
          is available or that the API you are using is going to be removed.
    schema: *ref_13
  '503': &ref_24
    description: >
      The service is temporarily unavailable, likely due to maintenance. It
      should be available soon, check the `Retry-After` header for an indication
      of when you might be able to try again.
    headers:
      X-Request-Id:
        type: string
        description: |
          The request ID assigned to this request.
      X-Api-Version:
        type: string
        description: |
          The API version used in this request.
      X-Api-Notice:
        type: string
        description: >
          If present, this header will include important API information. We
          will use this header as one way to notify you that a new API version
          is available or that the API you are using is going to be removed.
      Retry-After:
        description: >
          The amount of time (in seconds) you should wait before trying this
          request again.
        type: integer
    schema: *ref_13
parameters:
  expand: &ref_14
    name: expand
    in: query
    type: string
    enum:
      - all
      - none
    default: all
    description: |
      A comma-separated list of attributes to expand in the results.
  cursor: &ref_15
    name: cursor
    in: query
    type: string
    format: byte
    default: ''
    description: >
      An encoded value used to retrieve the next set of results for a query that
      returns more than `limit` results.
  limit: &ref_16
    name: limit
    in: query
    type: integer
    format: int64
    default: 25
    description: |
      The maximum number of records to return.
  query: &ref_17
    name: query
    in: query
    type: string
    default: ''
    description: |
      Space-separated strings to search for.
  dryrunCreate: &ref_26
    name: dryrun
    in: query
    type: boolean
    default: false
    description: >
      Use the `dryrun=true` query parameter to indicate that the request should
      only be tested for validity and should not actually create a record. The
      response code will indicate whether the request was OK (`200 OK`) or
      whether there was a problem in the request.
  dryrunUpdate: &ref_27
    name: dryrun
    in: query
    type: boolean
    default: false
    description: >
      Use the `dryrun=true` query parameter to indicate that the request should
      only be tested for validity and should not actually modify the record. The
      response code will indicate whether the request was OK (`200 OK`) or
      whether there was a problem in the request.
  dryrunDelete: &ref_28
    name: dryrun
    in: query
    type: boolean
    default: false
    description: >
      Use the `dryrun=true` query parameter to indicate that the request should
      only be tested for validity and should not actually delete the record. The
      response code will indicate whether the request was OK (`200 OK`) or
      whether there was a problem in the request.
paths:
  /roles:
    get:
      x-security:
        x-required-privileges:
          - 'roles:list'
      parameters:
        - *ref_14
        - *ref_15
        - *ref_16
        - *ref_17
      description: |
        Retrieve a list of roles.
      tags:
        - Roles
      produces:
        - application/json
      responses:
        '200':
          description: |
            The response body contains the roles.
          headers:
            Link:
              type: string
              description: >
                If more data exists, a `Link` header with the `next` relation
                type will be present as a pointer to the next page of data.
                Example: ```Link:
                </api/roles?cursor=dGhpcyB2YWx1ZSBpcyBvcGFxdWUsIGRlY29kaW5nIGl0IHdvbid0IGJlIHVzZWZ1bAo>;
                rel="next"```
            X-Request-Id:
              type: string
              description: |
                The request ID assigned to this request.
            X-Api-Version:
              type: string
              description: |
                The API version used in this request.
            X-Api-Notice:
              type: string
              description: >
                If present, this header will include important API information.
                We will use this header as one way to notify you that a new API
                version is available or that the API you are using is going to
                be removed.
          schema:
            type: object
            properties:
              roles:
                description: |
                  The list of roles.
                type: array
                items: *ref_18
              next:
                type: string
                format: byte
                example: >-
                  dGhpcyB2YWx1ZSBpcyBvcGFxdWUsIGRlY29kaW5nIGl0IHdvbid0IGJlIHVzZWZ1bAo=
                description: >
                  An encoded value that you can use to retrieve the next set of
                  results for a query. If `next` is not present, then there are
                  no more results available.
        '400': *ref_19
        '401': *ref_20
        '403': *ref_21
        '429': *ref_22
        '500': *ref_23
        '503': *ref_24
    post:
      x-security:
        x-required-privileges:
          - 'roles:create'
      description: |
        Create a role.
      tags:
        - Roles
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: request
          in: body
          schema: *ref_25
        - *ref_26
      responses:
        '200':
          description: >
            The response body contains the role details. This response will only
            be returned if the `dryrun=true` query parameter was sent.
          headers:
            X-Request-Id:
              type: string
              description: |
                The request ID assigned to this request.
            X-Api-Version:
              type: string
              description: |
                The API version used in this request.
            X-Api-Notice:
              type: string
              description: >
                If present, this header will include important API information.
                We will use this header as one way to notify you that a new API
                version is available or that the API you are using is going to
                be removed.
          schema: *ref_18
        '201':
          description: |
            The response body contains the role details.
          headers:
            Location:
              type: string
              description: |
                The URL at which the role can be found.
            X-Request-Id:
              type: string
              description: |
                The request ID assigned to this request.
            X-Api-Version:
              type: string
              description: |
                The API version used in this request.
            X-Api-Notice:
              type: string
              description: >
                If present, this header will include important API information.
                We will use this header as one way to notify you that a new API
                version is available or that the API you are using is going to
                be removed.
          schema: *ref_18
        '400': *ref_19
        '401': *ref_20
        '403': *ref_21
        '429': *ref_22
        '500': *ref_23
        '503': *ref_24
  '/roles/{id}':
    parameters:
      - name: id
        example: 6552eebd-5172-411e-ac71-8c323e6ca0fe
        in: path
        type: string
        description: |
          The system-assigned role ID.
    get:
      x-security:
        x-required-privileges:
          - 'roles:describe'
      description: |
        Retrieve details for a role.
      tags:
        - Roles
      parameters:
        - *ref_14
      produces:
        - application/json
      responses:
        '200':
          description: |
            The response body contains the role details.
          headers:
            X-Request-Id:
              type: string
              description: |
                The request ID assigned to this request.
            X-Api-Version:
              type: string
              description: |
                The API version used in this request.
            X-Api-Notice:
              type: string
              description: >
                If present, this header will include important API information.
                We will use this header as one way to notify you that a new API
                version is available or that the API you are using is going to
                be removed.
          schema: *ref_18
        '400': *ref_19
        '401': *ref_20
        '403': *ref_21
        '429': *ref_22
        '500': *ref_23
        '503': *ref_24
    post:
      x-security:
        x-required-privileges:
          - 'roles:modify'
      description: |
        Modify a role.
      tags:
        - Roles
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: request
          in: body
          schema: *ref_25
        - *ref_27
      responses:
        '200':
          description: |
            The response body contains the modified role details.
          headers:
            X-Request-Id:
              type: string
              description: |
                The request ID assigned to this request.
            X-Api-Version:
              type: string
              description: |
                The API version used in this request.
            X-Api-Notice:
              type: string
              description: >
                If present, this header will include important API information.
                We will use this header as one way to notify you that a new API
                version is available or that the API you are using is going to
                be removed.
          schema: *ref_18
        '400': *ref_19
        '401': *ref_20
        '403': *ref_21
        '429': *ref_22
        '500': *ref_23
        '503': *ref_24
    delete:
      x-security:
        x-required-privileges:
          - 'roles:delete'
      description: |
        Delete a role.
      tags:
        - Roles
      parameters:
        - *ref_28
      responses:
        '200':
          description: >
            The role would be deleted if the `dryrun=true` parameter was not
            present.
          headers:
            X-Request-Id:
              type: string
              description: |
                The request ID assigned to this request.
            X-Api-Version:
              type: string
              description: |
                The API version used in this request.
            X-Api-Notice:
              type: string
              description: >
                If present, this header will include important API information.
                We will use this header as one way to notify you that a new API
                version is available or that the API you are using is going to
                be removed.
        '204':
          description: |
            The role has been deleted.
          headers:
            X-Request-Id:
              type: string
              description: |
                The request ID assigned to this request.
            X-Api-Version:
              type: string
              description: |
                The API version used in this request.
            X-Api-Notice:
              type: string
              description: >
                If present, this header will include important API information.
                We will use this header as one way to notify you that a new API
                version is available or that the API you are using is going to
                be removed.
        '400': *ref_19
        '401': *ref_20
        '403': *ref_21
        '429': *ref_22
        '500': *ref_23
        '503': *ref_24
  /users:
    get:
      x-security:
        x-required-privileges:
          - 'users:list'
      parameters:
        - *ref_14
        - *ref_15
        - *ref_16
        - *ref_17
      description: |
        Retrieve a list of users.
      tags:
        - Users
      produces:
        - application/json
      responses:
        '200':
          description: |
            The response body contains the users.
          headers:
            Link:
              type: string
              description: >
                If more data exists, a `Link` header with the `next` relation
                type will be present as a pointer to the next page of data.
                Example: ```Link:
                </api/users?cursor=dGhpcyB2YWx1ZSBpcyBvcGFxdWUsIGRlY29kaW5nIGl0IHdvbid0IGJlIHVzZWZ1bAo>;
                rel="next"```
            X-Request-Id:
              type: string
              description: |
                The request ID assigned to this request.
            X-Api-Version:
              type: string
              description: |
                The API version used in this request.
            X-Api-Notice:
              type: string
              description: >
                If present, this header will include important API information.
                We will use this header as one way to notify you that a new API
                version is available or that the API you are using is going to
                be removed.
          schema:
            type: object
            properties:
              users:
                description: |
                  The list of users.
                type: array
                items: *ref_2
              next:
                type: string
                format: byte
                example: >-
                  dGhpcyB2YWx1ZSBpcyBvcGFxdWUsIGRlY29kaW5nIGl0IHdvbid0IGJlIHVzZWZ1bAo=
                description: >
                  An encoded value that you can use to retrieve the next set of
                  results for a query. If `next` is not present, then there are
                  no more results available.
        '400': *ref_19
        '401': *ref_20
        '403': *ref_21
        '429': *ref_22
        '500': *ref_23
        '503': *ref_24
    post:
      x-security:
        x-required-privileges:
          - 'users:create'
      description: |
        Create a user.
      tags:
        - Users
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: request
          in: body
          schema: *ref_29
        - *ref_26
      responses:
        '200':
          description: >
            The response body contains the user details. This response will only
            be returned if the `dryrun=true` query parameter was sent.
          headers:
            X-Request-Id:
              type: string
              description: |
                The request ID assigned to this request.
            X-Api-Version:
              type: string
              description: |
                The API version used in this request.
            X-Api-Notice:
              type: string
              description: >
                If present, this header will include important API information.
                We will use this header as one way to notify you that a new API
                version is available or that the API you are using is going to
                be removed.
          schema: *ref_2
        '201':
          description: |
            The response body contains the user details.
          headers:
            Location:
              type: string
              description: |
                The URL at which the user can be found.
            X-Request-Id:
              type: string
              description: |
                The request ID assigned to this request.
            X-Api-Version:
              type: string
              description: |
                The API version used in this request.
            X-Api-Notice:
              type: string
              description: >
                If present, this header will include important API information.
                We will use this header as one way to notify you that a new API
                version is available or that the API you are using is going to
                be removed.
          schema: *ref_2
        '400': *ref_19
        '401': *ref_20
        '403': *ref_21
        '429': *ref_22
        '500': *ref_23
        '503': *ref_24
  '/users/{id}':
    parameters:
      - name: id
        example: 6552eebd-5172-411e-ac71-8c323e6ca0fe
        in: path
        type: string
        description: |
          The system-assigned user ID.
    get:
      x-security:
        x-required-privileges:
          - 'users:describe'
      description: |
        Retrieve details for a user.
      tags:
        - Users
      parameters:
        - *ref_14
      produces:
        - application/json
      responses:
        '200':
          description: |
            The response body contains the user details.
          headers:
            X-Request-Id:
              type: string
              description: |
                The request ID assigned to this request.
            X-Api-Version:
              type: string
              description: |
                The API version used in this request.
            X-Api-Notice:
              type: string
              description: >
                If present, this header will include important API information.
                We will use this header as one way to notify you that a new API
                version is available or that the API you are using is going to
                be removed.
          schema: *ref_2
        '400': *ref_19
        '401': *ref_20
        '403': *ref_21
        '429': *ref_22
        '500': *ref_23
        '503': *ref_24
    post:
      x-security:
        x-required-privileges:
          - 'users:modify'
      description: |
        Modify a user.
      tags:
        - Users
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: request
          in: body
          schema: *ref_29
        - *ref_27
      responses:
        '200':
          description: |
            The response body contains the user details.
          headers:
            Location:
              type: string
              description: |
                The URL at which the user can be found.
            X-Request-Id:
              type: string
              description: |
                The request ID assigned to this request.
            X-Api-Version:
              type: string
              description: |
                The API version used in this request.
            X-Api-Notice:
              type: string
              description: >
                If present, this header will include important API information.
                We will use this header as one way to notify you that a new API
                version is available or that the API you are using is going to
                be removed.
          schema: *ref_2
        '400': *ref_19
        '401': *ref_20
        '403': *ref_21
        '429': *ref_22
        '500': *ref_23
        '503': *ref_24
    delete:
      x-security:
        x-required-privileges:
          - 'users:delete'
      description: |
        Delete a user.
      tags:
        - Users
      parameters:
        - *ref_28
      responses:
        '200':
          description: >
            The user would be deleted if the `dryrun=true` parameter was not
            present.
          headers:
            X-Request-Id:
              type: string
              description: |
                The request ID assigned to this request.
            X-Api-Version:
              type: string
              description: |
                The API version used in this request.
            X-Api-Notice:
              type: string
              description: >
                If present, this header will include important API information.
                We will use this header as one way to notify you that a new API
                version is available or that the API you are using is going to
                be removed.
        '204':
          description: |
            The user has been deleted.
          headers:
            X-Request-Id:
              type: string
              description: |
                The request ID assigned to this request.
            X-Api-Version:
              type: string
              description: |
                The API version used in this request.
            X-Api-Notice:
              type: string
              description: >
                If present, this header will include important API information.
                We will use this header as one way to notify you that a new API
                version is available or that the API you are using is going to
                be removed.
        '400': *ref_19
        '401': *ref_20
        '403': *ref_21
        '429': *ref_22
        '500': *ref_23
        '503': *ref_24
  '/users/{id}/password':
    parameters:
      - name: id
        example: 6552eebd-5172-411e-ac71-8c323e6ca0fe
        in: path
        type: string
        description: |
          The system-assigned user ID.
    post:
      x-security:
        x-required-privileges:
          - 'users:changePassword'
      description: |
        Change the user's password.
      tags:
        - Users
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: request
          in: body
          schema: *ref_30
        - *ref_27
      responses:
        '200':
          description: |
            The response body contains the user details.
          headers:
            X-Request-Id:
              type: string
              description: |
                The request ID assigned to this request.
            X-Api-Version:
              type: string
              description: |
                The API version used in this request.
            X-Api-Notice:
              type: string
              description: >
                If present, this header will include important API information.
                We will use this header as one way to notify you that a new API
                version is available or that the API you are using is going to
                be removed.
          schema: *ref_2
        '400': *ref_19
        '401': *ref_20
        '403': *ref_21
        '429': *ref_22
        '500': *ref_23
        '503': *ref_24
  /sessions:
    get:
      x-security:
        x-required-privileges:
          - 'sessions:list'
      parameters:
        - *ref_14
        - *ref_15
        - *ref_16
        - *ref_17
      description: |
        Retrieve a list of sessions.
      tags:
        - Sessions
      produces:
        - application/json
      responses:
        '200':
          description: |
            The response body contains the sessions.
          headers:
            Link:
              type: string
              description: >
                If more data exists, a `Link` header with the `next` relation
                type will be present as a pointer to the next page of data.
                Example: ```Link:
                </api/sessions?cursor=dGhpcyB2YWx1ZSBpcyBvcGFxdWUsIGRlY29kaW5nIGl0IHdvbid0IGJlIHVzZWZ1bAo>;
                rel="next"```
            X-Request-Id:
              type: string
              description: |
                The request ID assigned to this request.
            X-Api-Version:
              type: string
              description: |
                The API version used in this request.
            X-Api-Notice:
              type: string
              description: >
                If present, this header will include important API information.
                We will use this header as one way to notify you that a new API
                version is available or that the API you are using is going to
                be removed.
          schema:
            type: object
            properties:
              sessions:
                description: |
                  The list of sessions.
                type: array
                items: *ref_31
              next:
                type: string
                format: byte
                example: >-
                  dGhpcyB2YWx1ZSBpcyBvcGFxdWUsIGRlY29kaW5nIGl0IHdvbid0IGJlIHVzZWZ1bAo=
                description: >
                  An encoded value that you can use to retrieve the next set of
                  results for a query. If `next` is not present, then there are
                  no more results available.
        '400': *ref_19
        '401': *ref_20
        '403': *ref_21
        '429': *ref_22
        '500': *ref_23
        '503': *ref_24
    post:
      x-security:
        x-required-privileges:
          - 'sessions:create'
      description: |
        Create a session.
      tags:
        - Sessions
      security: []
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: request
          in: body
          schema: *ref_32
        - *ref_26
      responses:
        '200':
          description: >
            The response body contains the session details. This response will
            only be returned if the `dryrun=true` query parameter was sent.
          headers:
            X-Request-Id:
              type: string
              description: |
                The request ID assigned to this request.
            X-Api-Version:
              type: string
              description: |
                The API version used in this request.
            X-Api-Notice:
              type: string
              description: >
                If present, this header will include important API information.
                We will use this header as one way to notify you that a new API
                version is available or that the API you are using is going to
                be removed.
          schema: *ref_31
        '201':
          description: |
            The response body contains the session details.
          headers:
            Location:
              type: string
              description: |
                The URL at which the session can be found.
            X-Request-Id:
              type: string
              description: |
                The request ID assigned to this request.
            X-Api-Version:
              type: string
              description: |
                The API version used in this request.
            X-Api-Notice:
              type: string
              description: >
                If present, this header will include important API information.
                We will use this header as one way to notify you that a new API
                version is available or that the API you are using is going to
                be removed.
          schema: *ref_31
        '400': *ref_19
        '401': *ref_20
        '403': *ref_21
        '429': *ref_22
        '500': *ref_23
        '503': *ref_24
  '/sessions/{id}':
    parameters:
      - name: id
        example: 6552eebd-5172-411e-ac71-8c323e6ca0fe
        in: path
        type: string
        description: |
          The system-assigned session ID.
    get:
      x-security:
        x-required-privileges:
          - 'sessions:describe'
      description: |
        Retrieve details for a session.
      tags:
        - Sessions
      parameters:
        - *ref_14
      produces:
        - application/json
      responses:
        '200':
          description: |
            The response body contains the session details.
          headers:
            X-Request-Id:
              type: string
              description: |
                The request ID assigned to this request.
            X-Api-Version:
              type: string
              description: |
                The API version used in this request.
            X-Api-Notice:
              type: string
              description: >
                If present, this header will include important API information.
                We will use this header as one way to notify you that a new API
                version is available or that the API you are using is going to
                be removed.
          schema: *ref_31
        '400': *ref_19
        '401': *ref_20
        '403': *ref_21
        '429': *ref_22
        '500': *ref_23
        '503': *ref_24
    post:
      x-security:
        x-required-privileges:
          - 'sessions:refresh'
      description: >
        Refresh a session. This request will refresh the session and return a
        new `token` value with a new expiry time.
      tags:
        - Sessions
      parameters:
        - *ref_27
      produces:
        - application/json
      responses:
        '200':
          description: |
            The response body contains the refreshed session details.
          headers:
            X-Request-Id:
              type: string
              description: |
                The request ID assigned to this request.
            X-Api-Version:
              type: string
              description: |
                The API version used in this request.
            X-Api-Notice:
              type: string
              description: >
                If present, this header will include important API information.
                We will use this header as one way to notify you that a new API
                version is available or that the API you are using is going to
                be removed.
          schema: *ref_31
        '400': *ref_19
        '401': *ref_20
        '403': *ref_21
        '429': *ref_22
        '500': *ref_23
        '503': *ref_24
    delete:
      x-security:
        x-required-privileges:
          - 'sessions:delete'
      description: |
        Delete a session.
      tags:
        - Sessions
      parameters:
        - *ref_28
      responses:
        '200':
          description: >
            The session would be deleted if the `dryrun=true` parameter was not
            present.
          headers:
            X-Request-Id:
              type: string
              description: |
                The request ID assigned to this request.
            X-Api-Version:
              type: string
              description: |
                The API version used in this request.
            X-Api-Notice:
              type: string
              description: >
                If present, this header will include important API information.
                We will use this header as one way to notify you that a new API
                version is available or that the API you are using is going to
                be removed.
        '204':
          description: |
            The session has been deleted.
          headers:
            X-Request-Id:
              type: string
              description: |
                The request ID assigned to this request.
            X-Api-Version:
              type: string
              description: |
                The API version used in this request.
            X-Api-Notice:
              type: string
              description: >
                If present, this header will include important API information.
                We will use this header as one way to notify you that a new API
                version is available or that the API you are using is going to
                be removed.
        '400': *ref_19
        '401': *ref_20
        '403': *ref_21
        '429': *ref_22
        '500': *ref_23
        '503': *ref_24
  /scans:
    get:
      description: |
        Retrieve a list of scans.
      tags:
        - Scans
      produces:
        - application/json
      parameters:
        - *ref_14
        - *ref_15
        - *ref_16
        - name: registry
          in: query
          type: string
          description: >
            When present, the `registry` query parameter will filter the list of
            scans to those scans where the `source.registry` contains the
            provided value. If the `exact` query parameter is also provided (and
            `true`), the filter will do an exact match on the value.
        - name: repository
          in: query
          type: string
          description: >
            When present, the `repository` query parameter will filter the list
            of scans to those scans where the `source.repository` contains the
            provided value. If the `exact` query parameter is also provided (and
            `true`), the filter will do an exact match on the value.
        - name: tag
          in: query
          type: string
          description: >
            When present, the `tag` query parameter will filter the list of
            scans to those scans where the `source.tag` contains the provided
            value. If the `exact` query parameter is also provided (and `true`),
            the filter will do an exact match on the value.
        - name: exact
          in: query
          type: boolean
          description: >
            When present (and true), any filtering done using the `registry`,
            `repository`, and `tag` query parameters will be done using exact
            matches.
        - name: status
          in: query
          type: string
          example: 'failed,completed-with-findings'
          description: >
            When present, the `status` query parameter will filter the list of
            scans to those scans where the `status` value contains one of the
            provided values. Valid values in the list are `pending`,
            `in-progress`, `completed-with-findings`, `completed-no-findings`,
            `failed`. Invalid values are ignored.
      responses:
        '200':
          description: |
            The response body contains the scan objects.
          schema:
            type: object
            properties:
              scans:
                type: array
                items: *ref_33
              next:
                type: string
                format: byte
                example: >-
                  dGhpcyB2YWx1ZSBpcyBvcGFxdWUsIGRlY29kaW5nIGl0IHdvbid0IGJlIHVzZWZ1bAo=
                description: >
                  An encoded value that you can use to retrieve the next set of
                  results for a query. If `next` is not present, then there are
                  no more results available.
        '401': *ref_20
        '403': *ref_21
        '429': *ref_22
        '500': *ref_23
        '503': *ref_24
      x-security:
        x-required-privileges:
          - 'scans:list'
    post:
      description: |
        Create a new scan.
      tags:
        - Scans
      consumes:
        - application/json
      produces:
        - application/json
        - application/json
      parameters:
        - name: request
          in: body
          schema: *ref_34
      responses:
        '201':
          description: >
            The scan request has been accepted, the scan has been created, and
            the system will begin processing it soon.
          headers:
            Location:
              description: |
                The scan URL.
              type: string
              example: '/api/scans/{id}'
          schema: *ref_33
        '400': *ref_19
        '401': *ref_20
        '403': *ref_21
        '429': *ref_22
        '500': *ref_23
        '503': *ref_24
      x-security:
        x-required-privileges:
          - 'scans:create'
  /scans/metrics:
    get:
      description: |
        Retrieve scan metrics.
      tags:
        - Scans
      produces:
        - application/json
      responses:
        '200':
          description: |
            The response body contains the scan metrics.
          schema:
            type: object
            properties:
              1d:
                type: object
                description: |
                  Metrics over the past 24 hours.
                properties:
                  scans:
                    type: integer
                    description: |
                      The number of scans performed in the time period.
              1w:
                type: object
                description: |
                  Metrics over the past 7 days.
                properties:
                  scans:
                    type: integer
                    description: |
                      The number of scans performed in the time period.
        '401': *ref_20
        '403': *ref_21
        '404': *ref_35
        '429': *ref_22
        '500': *ref_23
        '503': *ref_24
      x-security:
        x-required-privileges:
          - 'scans:list'
  '/scans/{id}':
    parameters:
      - name: id
        description: |
          The scan ID.
        in: path
        required: true
        type: string
    get:
      description: |
        Retrieve scan details.
      tags:
        - Scans
      produces:
        - application/json
      parameters:
        - name: expand
          in: query
          description: >
            The properties of each scan that should be expanded in the response.
            The default (`all`) causes all properties to be expanded.
          type: string
          default: all
          enum:
            - all
            - none
      responses:
        '200':
          description: |
            The response body contains the scan object.
          schema: *ref_33
        '400': *ref_19
        '401': *ref_20
        '403': *ref_21
        '404': *ref_35
        '429': *ref_22
        '500': *ref_23
        '503': *ref_24
      x-security:
        x-required-privileges:
          - 'scans:describe'
  '/scans/{id}/layers/{layerID}/malware':
    parameters:
      - name: id
        description: |
          The scan ID.
        in: path
        required: true
        type: string
      - name: layerID
        description: |
          The layer ID.
        in: path
        required: true
        type: string
    get:
      description: |
        List scan malware findings.
      tags:
        - Scans
      produces:
        - application/json
      parameters:
        - *ref_14
        - *ref_15
        - *ref_16
      responses:
        '200':
          description: |
            The response body contains the list of malware findings.
          schema:
            type: object
            properties:
              malware:
                type: array
                items: *ref_36
              next:
                type: string
                format: byte
                example: >-
                  dGhpcyB2YWx1ZSBpcyBvcGFxdWUsIGRlY29kaW5nIGl0IHdvbid0IGJlIHVzZWZ1bAo=
                description: >
                  An encoded value that you can use to retrieve the next set of
                  results for a query. If `next` is not present, then there are
                  no more results available.
        '400': *ref_19
        '401': *ref_20
        '403': *ref_21
        '404': *ref_35
        '429': *ref_22
        '500': *ref_23
        '503': *ref_24
      x-security:
        x-required-privileges:
          - 'scans:describe'
  '/scans/{id}/layers/{layerID}/vulnerabilities':
    parameters:
      - name: id
        description: |
          The scan ID.
        in: path
        required: true
        type: string
      - name: layerID
        description: |
          The layer ID.
        in: path
        required: true
        type: string
    get:
      description: |
        List scan vulnerability findings.
      tags:
        - Scans
      produces:
        - application/json
      parameters:
        - *ref_14
        - *ref_15
        - *ref_16
      responses:
        '200':
          description: |
            The response body contains the list of vulnerability findings.
          schema:
            type: object
            properties:
              vulnerabilities:
                type: array
                items: *ref_37
              next:
                type: string
                format: byte
                example: >-
                  dGhpcyB2YWx1ZSBpcyBvcGFxdWUsIGRlY29kaW5nIGl0IHdvbid0IGJlIHVzZWZ1bAo=
                description: >
                  An encoded value that you can use to retrieve the next set of
                  results for a query. If `next` is not present, then there are
                  no more results available.
        '400': *ref_19
        '401': *ref_20
        '403': *ref_21
        '404': *ref_35
        '429': *ref_22
        '500': *ref_23
        '503': *ref_24
      x-security:
        x-required-privileges:
          - 'scans:describe'
  /webhooks:
    get:
      parameters:
        - *ref_14
        - *ref_15
        - *ref_16
      description: |
        Retrieve a list of web hooks.
      tags:
        - Web hooks
      produces:
        - application/json
      responses:
        '200':
          description: |
            The response body contains the web hook objects.
          schema:
            type: object
            properties:
              webhooks:
                type: array
                items: *ref_38
              next:
                type: string
                format: byte
                example: >-
                  dGhpcyB2YWx1ZSBpcyBvcGFxdWUsIGRlY29kaW5nIGl0IHdvbid0IGJlIHVzZWZ1bAo=
                description: >
                  An encoded value that you can use to retrieve the next set of
                  results for a query. If `next` is not present, then there are
                  no more results available.
        '401': *ref_20
        '403': *ref_21
        '429': *ref_22
        '500': *ref_23
        '503': *ref_24
      x-security:
        x-required-privileges:
          - 'webhooks:list'
    post:
      description: |
        Create a new web hook.
      tags:
        - Web hooks
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: request
          schema: *ref_5
      responses:
        '201':
          description: |
            The web hook has been created.
          headers:
            Location:
              description: |
                The webhook URL.
              type: string
              example: '/api/webhooks/{id}'
          schema: *ref_38
        '401': *ref_20
        '403': *ref_21
        '429': *ref_22
        '500': *ref_23
        '503': *ref_24
      x-security:
        x-required-privileges:
          - 'webhooks:create'
  '/webhooks/{id}':
    parameters:
      - name: id
        description: |
          The web hook ID.
        in: path
        required: true
        type: string
    get:
      description: |
        Retrieve web hook details.
      produces:
        - application/json
      tags:
        - Web hooks
      responses:
        '200':
          description: |
            The response body contains the web hook object.
          schema: *ref_38
        '401': *ref_20
        '403': *ref_21
        '429': *ref_22
        '500': *ref_23
        '503': *ref_24
      x-security:
        x-required-privileges:
          - 'webhooks:describe'
    post:
      description: |
        Modify a web hook.
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        - Web hooks
      responses:
        '200':
          description: >
            The web hook has been modified. Future calls to the web hook will
            contain the modified values. The response body contains the modified
            web hook object.
          schema: *ref_38
        '401': *ref_20
        '403': *ref_21
        '429': *ref_22
        '500': *ref_23
        '503': *ref_24
      x-security:
        x-required-privileges:
          - 'webhooks:modify'
    delete:
      description: |
        Delete a web hook.
      tags:
        - Web hooks
      responses:
        '204':
          description: |
            The web hook has been deleted.
        '401': *ref_20
        '403': *ref_21
        '429': *ref_22
        '500': *ref_23
        '503': *ref_24
      x-security:
        x-required-privileges:
          - 'webhooks:delete'
  '/webhooks/{id}/ping':
    parameters:
      - name: id
        description: |
          The web hook ID.
        in: path
        required: true
        type: string
    post:
      description: |
        Send a `ping` event to the web hook to test connectivity.
      tags:
        - Web hooks
      responses:
        '204':
          description: |
            Invocation of the web hook was successful.
        '400':
          description: |
            Invocation of the web hook was not successful.
          schema: *ref_13
        '401': *ref_20
        '403': *ref_21
        '429': *ref_22
        '500': *ref_23
        '503': *ref_24
      x-security:
        x-required-privileges:
          - 'webhooks:describe'
  '/webhooks/{id}/headers':
    parameters:
      - name: id
        description: |
          The web hook ID.
        in: path
        required: true
        type: string
    get:
      description: >
        Get the list of user-defined headers to include in calls to the web
        hook.
      produces:
        - application/json
      tags:
        - Web hooks
      responses:
        '200':
          description: |
            The response body contains the list of web hook header objects.
          schema:
            type: object
            properties:
              headers:
                type: array
                items: *ref_4
              next:
                type: string
                format: byte
                example: >-
                  dGhpcyB2YWx1ZSBpcyBvcGFxdWUsIGRlY29kaW5nIGl0IHdvbid0IGJlIHVzZWZ1bAo=
                description: >
                  An encoded value that you can use to retrieve the next set of
                  results for a query. If `next` is not present, then there are
                  no more results available.
        '401': *ref_20
        '403': *ref_21
        '429': *ref_22
        '500': *ref_23
        '503': *ref_24
      x-security:
        x-required-privileges:
          - 'webhooks:describe'
    post:
      description: |
        Add a user-defined header to include in calls to the web hook.
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        - Web hooks
      responses:
        '201':
          description: |
            The web hook header has been created.
          headers:
            Location:
              description: |
                The web hook header URL.
              type: string
              example: '/api/webhooks/{id}/headers/{headerID}'
          schema: *ref_4
        '401': *ref_20
        '403': *ref_21
        '429': *ref_22
        '500': *ref_23
        '503': *ref_24
      x-security:
        x-required-privileges:
          - 'webhooks:modify'
  '/webhooks/{id}/headers/{headerID}':
    parameters:
      - name: id
        description: |
          The web hook ID.
        in: path
        required: true
        type: string
      - name: headerID
        description: |
          The web hook header ID.
        in: path
        required: true
        type: string
    get:
      description: |
        Retrieve web hook header details.
      produces:
        - application/json
      tags:
        - Web hooks
      responses:
        '200':
          description: |
            The response body contains the web hook header object.
          schema: *ref_38
        '401': *ref_20
        '403': *ref_21
        '429': *ref_22
        '500': *ref_23
        '503': *ref_24
      x-security:
        x-required-privileges:
          - 'webhooks:describe'
    post:
      description: |
        Update the web hook header.
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        - Web hooks
      responses:
        '200':
          description: >
            The web hook header has been updated. Future calls to the web hook
            will contain the updated values. The response body contains the
            updated web hook header object.
          schema: *ref_4
        '401': *ref_20
        '403': *ref_21
        '429': *ref_22
        '500': *ref_23
        '503': *ref_24
      x-security:
        x-required-privileges:
          - 'webhooks:modify'
    delete:
      description: |
        Delete the web hook header.
      tags:
        - Web hooks
      responses:
        '204':
          description: >
            The web hook header has been deleted and will no longer be included
            in future calls to the web hook.
        '401': *ref_20
        '403': *ref_21
        '429': *ref_22
        '500': *ref_23
        '503': *ref_24
      x-security:
        x-required-privileges:
          - 'webhooks:modify'
  /license:
    get:
      description: null
      produces:
        - application/json
      tags:
        - License
      responses:
        '200':
          description: |
            The response body contains license information.
          schema:
            type: object
            properties:
              type:
                description: |
                  The license type.
                type: string
                enum:
                  - full
                  - trial
                  - none
              expires:
                description: |
                  Timestamp when the license will expire.
                type: string
                format: date-time
                example: '2019-05-01T00:00:00Z'
              gracePeriod:
                description: >
                  Grace period after expiry (in days) when the product will
                  still update.
                type: integer
                example: 0
            required:
              - type
        '401': *ref_20
        '403': *ref_21
        '429': *ref_22
        '500': *ref_23
        '503':
          description: >
            The service is temporarily unavailable, likely due to maintenance.
            It should be available soon, check the `Retry-After` header for an
            indication of when you might be able to try again.
          headers:
            Retry-After:
              description: >
                The amount of time (in seconds) you should wait before trying
                this request again.
              type: integer
          schema: *ref_13
      x-security:
        x-required-privileges:
          - 'licenses:describe'
  /registries:
    get:
      x-security:
        x-required-privileges:
          - 'registries:list'
      description: |
        List registry connections.
      tags:
        - Registries
      parameters:
        - *ref_15
        - *ref_16
        - *ref_17
      produces:
        - application/json
      responses:
        '200':
          description: |
            The response body contains the registry records.
          headers:
            Link:
              type: string
              description: >
                If more data exists, a `Link` header with the `next` relation
                type will be present as a pointer to the next page of data.
                Example: ```Link:
                </api/registries?cursor=dGhpcyB2YWx1ZSBpcyBvcGFxdWUsIGRlY29kaW5nIGl0IHdvbid0IGJlIHVzZWZ1bAo>;
                rel="next"```
            X-Request-Id:
              type: string
              description: |
                The request ID assigned to this request.
            X-Api-Version:
              type: string
              description: |
                The API version used in this request.
            X-Api-Notice:
              type: string
              description: >
                If present, this header will include important API information.
                We will use this header as one way to notify you that a new API
                version is available or that the API you are using is going to
                be removed.
          schema:
            type: object
            properties:
              registries:
                type: array
                description: |
                  The list of registries.
                items: *ref_39
              next:
                type: string
                format: byte
                example: >-
                  dGhpcyB2YWx1ZSBpcyBvcGFxdWUsIGRlY29kaW5nIGl0IHdvbid0IGJlIHVzZWZ1bAo=
                description: >
                  An encoded value that you can use to retrieve the next set of
                  results for a query. If `next` is not present, then there are
                  no more results available.
        '400': *ref_19
        '401': *ref_20
        '403': *ref_21
        '404': *ref_35
        '409': *ref_40
        '429': *ref_22
        '500': *ref_23
        '503': *ref_24
    post:
      x-security:
        x-required-privileges:
          - 'registries:create'
      description: |
        Create a new registry connection.
      tags:
        - Registries
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: request
          in: body
          schema: *ref_41
        - *ref_26
        - name: ping
          in: query
          type: boolean
          default: true
          description: >
            Use `false` to disable automatic checking of the registry host and
            credentials during the update.
      responses:
        '200':
          description: >
            The response body contains the registry details. This response will
            only be returned if the `dryrun=true` query parameter was sent.
          headers:
            X-Request-Id:
              type: string
              description: |
                The request ID assigned to this request.
            X-Api-Version:
              type: string
              description: |
                The API version used in this request.
            X-Api-Notice:
              type: string
              description: >
                If present, this header will include important API information.
                We will use this header as one way to notify you that a new API
                version is available or that the API you are using is going to
                be removed.
          schema: *ref_39
        '201':
          description: |
            The response body contains the registry details.
          headers:
            X-Request-Id:
              type: string
              description: |
                The request ID assigned to this request.
            X-Api-Version:
              type: string
              description: |
                The API version used in this request.
            X-Api-Notice:
              type: string
              description: >
                If present, this header will include important API information.
                We will use this header as one way to notify you that a new API
                version is available or that the API you are using is going to
                be removed.
          schema: *ref_39
        '400': *ref_19
        '401': *ref_20
        '403': *ref_21
        '404': *ref_35
        '409': *ref_40
        '429': *ref_22
        '500': *ref_23
        '503': *ref_24
  '/registries/{id}':
    parameters:
      - name: id
        description: |
          The system-assigned registry ID.
        in: path
        required: true
        type: string
        example: 6552eebd-5172-411e-ac71-8c323e6ca0fe
    get:
      x-security:
        x-required-privileges:
          - 'registries:describe'
      description: |
        Get the details of a registry connection.
      tags:
        - Registries
      produces:
        - application/json
      responses:
        '200':
          description: |
            The response body contains the registry details.
          headers:
            X-Request-Id:
              type: string
              description: |
                The request ID assigned to this request.
            X-Api-Version:
              type: string
              description: |
                The API version used in this request.
            X-Api-Notice:
              type: string
              description: >
                If present, this header will include important API information.
                We will use this header as one way to notify you that a new API
                version is available or that the API you are using is going to
                be removed.
          schema: *ref_39
        '400': *ref_19
        '401': *ref_20
        '403': *ref_21
        '404': *ref_35
        '409': *ref_40
        '429': *ref_22
        '500': *ref_23
        '503': *ref_24
    post:
      x-security:
        x-required-privileges:
          - 'registries:modify'
      description: |
        Modify the details of a registry connection.
      tags:
        - Registries
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: request
          in: body
          schema: *ref_41
        - *ref_27
        - name: ping
          in: query
          type: boolean
          default: true
          description: >
            Use `false` to disable automatic checking of the registry host and
            credentials during the update.
      responses:
        '200':
          description: |
            The response body contains the registry details.
          headers:
            X-Request-Id:
              type: string
              description: |
                The request ID assigned to this request.
            X-Api-Version:
              type: string
              description: |
                The API version used in this request.
            X-Api-Notice:
              type: string
              description: >
                If present, this header will include important API information.
                We will use this header as one way to notify you that a new API
                version is available or that the API you are using is going to
                be removed.
          schema: *ref_39
        '400': *ref_19
        '401': *ref_20
        '403': *ref_21
        '404': *ref_35
        '409': *ref_40
        '429': *ref_22
        '500': *ref_23
        '503': *ref_24
    delete:
      x-security:
        x-required-privileges:
          - 'registries:delete'
      description: |
        Delete a registry connection.
      tags:
        - Registries
      parameters:
        - *ref_28
      responses:
        '200':
          description: >
            The registry connection would be deleted if the `dryrun=true`
            parameter was not present.
          headers:
            X-Request-Id:
              type: string
              description: |
                The request ID assigned to this request.
            X-Api-Version:
              type: string
              description: |
                The API version used in this request.
            X-Api-Notice:
              type: string
              description: >
                If present, this header will include important API information.
                We will use this header as one way to notify you that a new API
                version is available or that the API you are using is going to
                be removed.
        '204':
          description: |
            The registry connection has been deleted.
          headers:
            X-Request-Id:
              type: string
              description: |
                The request ID assigned to this request.
            X-Api-Version:
              type: string
              description: |
                The API version used in this request.
            X-Api-Notice:
              type: string
              description: >
                If present, this header will include important API information.
                We will use this header as one way to notify you that a new API
                version is available or that the API you are using is going to
                be removed.
        '400': *ref_19
        '401': *ref_20
        '403': *ref_21
        '404': *ref_35
        '409': *ref_40
        '429': *ref_22
        '500': *ref_23
        '503': *ref_24
  /views:
    get:
      x-security:
        x-required-privileges:
          - 'views:list'
      description: |
        List views.
      tags:
        - Views
      parameters:
        - *ref_15
        - *ref_16
        - *ref_17
      produces:
        - application/json
      responses:
        '200':
          description: |
            The response body contains the view records.
          headers:
            Link:
              type: string
              description: >
                If more data exists, a `Link` header with the `next` relation
                type will be present as a pointer to the next page of data.
                Example: ```Link:
                </api/views?cursor=dGhpcyB2YWx1ZSBpcyBvcGFxdWUsIGRlY29kaW5nIGl0IHdvbid0IGJlIHVzZWZ1bAo>;
                rel="next"```
            X-Request-Id:
              type: string
              description: |
                The request ID assigned to this request.
            X-Api-Version:
              type: string
              description: |
                The API version used in this request.
            X-Api-Notice:
              type: string
              description: >
                If present, this header will include important API information.
                We will use this header as one way to notify you that a new API
                version is available or that the API you are using is going to
                be removed.
          schema:
            type: object
            properties:
              views:
                type: array
                description: |
                  The list of views.
                items: *ref_42
              next:
                type: string
                format: byte
                example: >-
                  dGhpcyB2YWx1ZSBpcyBvcGFxdWUsIGRlY29kaW5nIGl0IHdvbid0IGJlIHVzZWZ1bAo=
                description: >
                  An encoded value that you can use to retrieve the next set of
                  results for a query. If `next` is not present, then there are
                  no more results available.
        '400': *ref_19
        '401': *ref_20
        '403': *ref_21
        '404': *ref_35
        '409': *ref_40
        '429': *ref_22
        '500': *ref_23
        '503': *ref_24
    post:
      x-security:
        x-required-privileges:
          - 'views:create'
      description: |
        Create a new view.
      tags:
        - Views
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: request
          in: body
          schema: *ref_43
        - name: scan
          in: query
          type: boolean
          default: false
          description: |
            If true, will trigger a scan on the images in the view.
        - *ref_26
      responses:
        '200':
          description: >
            The response body contains the view details. This response will only
            be returned if the `dryrun=true` query parameter was sent.
          headers:
            X-Request-Id:
              type: string
              description: |
                The request ID assigned to this request.
            X-Api-Version:
              type: string
              description: |
                The API version used in this request.
            X-Api-Notice:
              type: string
              description: >
                If present, this header will include important API information.
                We will use this header as one way to notify you that a new API
                version is available or that the API you are using is going to
                be removed.
          schema: *ref_42
        '201':
          description: |
            The response body contains the view details.
          headers:
            X-Request-Id:
              type: string
              description: |
                The request ID assigned to this request.
            X-Api-Version:
              type: string
              description: |
                The API version used in this request.
            X-Api-Notice:
              type: string
              description: >
                If present, this header will include important API information.
                We will use this header as one way to notify you that a new API
                version is available or that the API you are using is going to
                be removed.
          schema: *ref_42
        '400': *ref_19
        '401': *ref_20
        '403': *ref_21
        '404': *ref_35
        '409': *ref_40
        '429': *ref_22
        '500': *ref_23
        '503': *ref_24
  '/views/{id}':
    parameters:
      - name: id
        description: |
          The system-assigned view ID.
        in: path
        required: true
        type: string
        example: 6552eebd-5172-411e-ac71-8c323e6ca0fe
    get:
      x-security:
        x-required-privileges:
          - 'views:describe'
      description: |
        Get the details of a view.
      tags:
        - Views
      produces:
        - application/json
      responses:
        '200':
          description: |
            The response body contains the view details.
          headers:
            X-Request-Id:
              type: string
              description: |
                The request ID assigned to this request.
            X-Api-Version:
              type: string
              description: |
                The API version used in this request.
            X-Api-Notice:
              type: string
              description: >
                If present, this header will include important API information.
                We will use this header as one way to notify you that a new API
                version is available or that the API you are using is going to
                be removed.
          schema: *ref_42
        '400': *ref_19
        '401': *ref_20
        '403': *ref_21
        '404': *ref_35
        '409': *ref_40
        '429': *ref_22
        '500': *ref_23
        '503': *ref_24
    post:
      x-security:
        x-required-privileges:
          - 'views:modify'
      description: |
        Modify the details of a view.
      tags:
        - Views
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: request
          in: body
          schema: *ref_43
        - name: scan
          in: query
          type: boolean
          default: false
          description: |
            If true, will trigger a scan on the images in the view.
        - *ref_27
      responses:
        '200':
          description: |
            The response body contains the view details.
          headers:
            X-Request-Id:
              type: string
              description: |
                The request ID assigned to this request.
            X-Api-Version:
              type: string
              description: |
                The API version used in this request.
            X-Api-Notice:
              type: string
              description: >
                If present, this header will include important API information.
                We will use this header as one way to notify you that a new API
                version is available or that the API you are using is going to
                be removed.
          schema: *ref_42
        '400': *ref_19
        '401': *ref_20
        '403': *ref_21
        '404': *ref_35
        '409': *ref_40
        '429': *ref_22
        '500': *ref_23
        '503': *ref_24
    delete:
      x-security:
        x-required-privileges:
          - 'views:delete'
      description: |
        Delete a view.
      tags:
        - Views
      parameters:
        - *ref_28
      responses:
        '200':
          description: >
            The view would be deleted if the `dryrun=true` parameter was not
            present.
          headers:
            X-Request-Id:
              type: string
              description: |
                The request ID assigned to this request.
            X-Api-Version:
              type: string
              description: |
                The API version used in this request.
            X-Api-Notice:
              type: string
              description: >
                If present, this header will include important API information.
                We will use this header as one way to notify you that a new API
                version is available or that the API you are using is going to
                be removed.
        '204':
          description: |
            The view has been deleted.
          headers:
            X-Request-Id:
              type: string
              description: |
                The request ID assigned to this request.
            X-Api-Version:
              type: string
              description: |
                The API version used in this request.
            X-Api-Notice:
              type: string
              description: >
                If present, this header will include important API information.
                We will use this header as one way to notify you that a new API
                version is available or that the API you are using is going to
                be removed.
        '400': *ref_19
        '401': *ref_20
        '403': *ref_21
        '404': *ref_35
        '409': *ref_40
        '429': *ref_22
        '500': *ref_23
        '503': *ref_24
  '/views/{id}/images':
    parameters:
      - name: id
        description: |
          The system-assigned view ID.
        in: path
        required: true
        type: string
        example: 6552eebd-5172-411e-ac71-8c323e6ca0fe
    get:
      x-security:
        x-required-privileges:
          - 'views:describe'
      description: |
        List images in the view.
      tags:
        - Views
      parameters:
        - *ref_15
        - *ref_16
        - *ref_17
      produces:
        - application/json
      responses:
        '200':
          description: |
            The response body contains the image records.
          headers:
            Link:
              type: string
              description: >
                If more data exists, a `Link` header with the `next` relation
                type will be present as a pointer to the next page of data.
                Example: ```Link:
                </api/views/{id}/images?cursor=dGhpcyB2YWx1ZSBpcyBvcGFxdWUsIGRlY29kaW5nIGl0IHdvbid0IGJlIHVzZWZ1bAo>;
                rel="next"```
            X-Request-Id:
              type: string
              description: |
                The request ID assigned to this request.
            X-Api-Version:
              type: string
              description: |
                The API version used in this request.
            X-Api-Notice:
              type: string
              description: >
                If present, this header will include important API information.
                We will use this header as one way to notify you that a new API
                version is available or that the API you are using is going to
                be removed.
          schema:
            type: object
            properties:
              images:
                type: array
                description: |
                  The list of images.
                items: *ref_44
              next:
                type: string
                format: byte
                example: >-
                  dGhpcyB2YWx1ZSBpcyBvcGFxdWUsIGRlY29kaW5nIGl0IHdvbid0IGJlIHVzZWZ1bAo=
                description: >
                  An encoded value that you can use to retrieve the next set of
                  results for a query. If `next` is not present, then there are
                  no more results available.
        '400': *ref_19
        '401': *ref_20
        '403': *ref_21
        '404': *ref_35
        '409': *ref_40
        '429': *ref_22
        '500': *ref_23
        '503': *ref_24
