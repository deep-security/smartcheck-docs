swagger: '2.0'
info:
  version: '2018-05-01'
  title: Deep Security Smart Check API
  description: |
    Deep Security Smart Check is a container image scanner from Trend Micro.
  contact:
    url: 'https://trendmicro.com/smartcheck'
basePath: /api
schemes:
  - https
securityDefinitions:
  token:
    type: apiKey
    name: Authorization
    in: header
    description: >
      Deep Security Smart Check uses token-based authentication for API
      requests. See `Sessions` for APIs related to token management, then
      include the token in an `Authorization` header with the `Bearer` scheme:
      <pre>Authorization: Bearer {token}</pre>
security:
  - token: []
tags:
  - name: Roles
  - name: Users
  - name: Sessions
    description: Authenticated sessions
  - name: Scans
    description: |
      Ongoing and historical scans
  - name: Web hooks
    description: |
      Outgoing web hooks from the scanner
  - name: License
    description: |
      License information
  - name: Content scan
    description: |
      Manage content scan rules
  - name: Registries
definitions:
  ChangeUserPasswordRequest: &ref_33
    type: object
    properties:
      oldPassword:
        type: string
        format: password
        example: ThIsIsNoTaGoOdPaSsWoRd!
        description: |
          The user's current password.
        maxLength: 1024
      newPassword:
        type: string
        format: password
        example: ThIsIsNoTaBeTtErPaSsWoRd!
        description: |
          The user's new password.
        maxLength: 1024
  UserRequest: &ref_32
    type: object
    properties:
      userID:
        type: string
        example: argus
        description: |
          A unique name for the user.
        maxLength: 64
      password:
        type: string
        format: password
        example: ThIsIsNoTaGoOdPaSsWoRd!
        description: |
          A password for the user.
        maxLength: 1024
      passwordChangeRequired:
        type: boolean
        example: false
        description: >
          If `true`, the user will not be able to perform any actions until they
          change their password.
      name:
        type: string
        description: |
          A display name for the user.
        example: Argus Panoptes
        maxLength: 128
      description:
        type: string
        example: Guardian of the heifer Io.
        description: |
          A description for the user.
        maxLength: 2048
      role:
        type: string
        example: 6552eebd-5172-411e-ac71-8c323e6ca0fe
        description: |
          The user's role ID.
  User: &ref_2
    type: object
    properties:
      id:
        type: string
        example: 6552eebd-5172-411e-ac71-8c323e6ca0fe
        description: |
          The user's unique system identifier.
      href:
        type: string
        example: /users/6552eebd-5172-411e-ac71-8c323e6ca0fe
        description: |
          The URL at which the user can be found.
      userID:
        type: string
        example: argus
        description: |
          A unique name for the user.
        maxLength: 64
      name:
        type: string
        description: |
          A display name for the user.
        example: Argus Panoptes
        maxLength: 128
      description:
        type: string
        example: Guardian of the heifer Io.
        description: |
          A description for the user.
        maxLength: 2048
      role:
        type: string
        example: 6552eebd-5172-411e-ac71-8c323e6ca0fe
        description: |
          The user's role identifier.
      passwordChangeRequired:
        type: boolean
        example: false
        description: >
          If `true`, the user will not be able to perform any actions until they
          change their password.
      created:
        type: string
        format: datetime
        example: '2018-05-01T00:00:00Z'
        description: |
          The time that the user was created.
      updated:
        type: string
        format: datetime
        example: '2018-05-01T00:00:00Z'
        description: |
          The time that the user was last modified.
    required:
      - id
      - href
      - userID
      - role
      - created
      - updated
  RoleRequest: &ref_28
    type: object
    properties:
      name:
        type: string
        example: Administrator
        description: |
          A name for the role.
        maxLength: 128
      description:
        type: string
        example: An administrator has full access to all operations.
        description: |
          A description for the role.
        maxLength: 2048
      policies:
        type: array
        description: >
          A list of policies for the role. The total size of the policy list
          must be less than 32768 bytes.
        items: &ref_0
          type: object
          properties:
            version:
              type: string
              example: '2018-05-01'
              enum:
                - '2018-05-01'
              description: |
                The policy format version.
            statements:
              description: |
                The list of statements in the policy.
              type: array
              items: &ref_1
                type: object
                properties:
                  effect:
                    type: string
                    example: allow
                    description: |
                      The policy effect if the statement matches.
                    enum:
                      - allow
                      - deny
                  actions:
                    type: array
                    description: >
                      A list of actions. Actions take the form
                      `resourceType:operation` and can have a wildcard in either
                      the `resourceType` or `operation` part. You can also use
                      `*` to match all actions. The required action is listed
                      with each API operation.
                    items:
                      type: string
                      example: '*'
    required:
      - name
      - policies
  Role: &ref_21
    type: object
    properties:
      id:
        type: string
        example: 6552eebd-5172-411e-ac71-8c323e6ca0fe
        description: |
          The role's unique system identifier.
      href:
        type: string
        example: /roles/6552eebd-5172-411e-ac71-8c323e6ca0fe
        description: |
          The URL at which the role can be found.
      name:
        type: string
        example: Administrator
        description: |
          A name for the role.
        maxLength: 128
      description:
        type: string
        example: An administrator has full access to all operations.
        description: |
          A description for the role.
        maxLength: 2048
      policies:
        type: array
        description: >
          A list of policies for the role. The total size of the policy list
          must be less than 32768 bytes.
        items: *ref_0
      created:
        type: string
        format: datetime
        example: '2018-05-01T00:00:00Z'
        description: |
          The time that the role was created.
      updated:
        type: string
        format: datetime
        example: '2018-05-01T00:00:00Z'
        description: |
          The time that the role was last modified.
    required:
      - href
      - name
      - policies
      - created
      - updated
  Policy: *ref_0
  Statement: *ref_1
  SessionRequest: &ref_35
    type: object
    properties:
      user:
        type: object
        description: |
          The user to create a session for.
        properties:
          userID:
            type: string
            example: argus
            description: |
              The user's ID.
            maxLength: 64
          password:
            type: string
            format: password
            example: ThIsIsNoTaGoOdPaSsWoRd!
            description: |
              The user's password.
            maxLength: 1024
        required:
          - userID
          - password
    required:
      - user
  Session: &ref_34
    type: object
    properties:
      id:
        type: string
        example: 6552eebd-5172-411e-ac71-8c323e6ca0fe
        description: |
          The session's unique system identifier.
      href:
        type: string
        example: /sessions/6552eebd-5172-411e-ac71-8c323e6ca0fe
        description: |
          The URL at which the session can be found.
      user: *ref_2
      token:
        type: string
        description: >
          The session token. Use the session token the `Authorization` header of
          subsequent requests: ```Authorization: Bearer
          SAMPLEeyJhbGciOiJSUz...```
        example: >-
          eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIn0.AzuEel-o9NFJyTvfHx49jMZ-iwU-4NqMQduhUFvWKXXL2ZmMD1Id2ePFU-0ut-esku2avobI7uVDtfEbO6C-Zrn2S4cwsRHnUBCqgzcGwAFr4lHSGi8eAkMSn7b_ceNQu4aGAtDAnCNv3An3U9JUeq29Lze5Md5TTMUSZkFUZR15bJmSKgnd3GvAsIFyIbORmhs2Fe5E9q8jnuSFaeTvvRnlW48Po6bKC09MEhelrES5nnA2tLBu_hMB8VVaDjG7veOtLXrgkH7_6SdBDFZ8Yma_rgA0AwrtYtfQyNunVKctjDq0BE1OPNCJ45n1Cyr7i2TosnYwQUm-v1tX2LZn6g
      created:
        type: string
        format: datetime
        example: '2018-05-01T00:00:00Z'
        description: |
          The time that the session was created.
      updated:
        type: string
        format: datetime
        example: '2018-05-01T00:00:00Z'
        description: |
          The time that the session was last modified.
      expires:
        type: string
        format: datetime
        example: '2018-05-01T00:00:00Z'
        description: |
          The time that the session will expire.
  Error: &ref_15
    type: object
    properties:
      message:
        type: string
        example: 'Something went wrong. To fix it, try ...'
        description: >
          The error message will explain what went wrong and will attempt to
          give some hints as to how to fix it.
      fields:
        description: >
          If present, the `fields` object will indicate which input fields had
          errors; the attribute name will be the name of the input field and the
          value will be an error message.
        type: object
        additionalProperties:
          type: string
          description: >-
            An error message describing the error in the field identified by the
            property name.
    required:
      - message
  WebhookRequest: &ref_7
    type: object
    properties:
      name:
        type: string
        description: |
          (optional) A descriptive name for the web hook.
        example: (optional) a descriptive string
        maxLength: 64
      hookURL:
        type: string
        example: 'https://target.example.com/'
        maxLength: 255
        description: >
          The URL that Deep Security Smart Check should `POST` the event payload
          to.
      headers:
        description: >
          (optional) You can include your own headers in the web hook request.
          Use these to provide additional context or authentication information
          to your web hook receiver.
        type: array
        items: &ref_3
          type: object
          properties:
            name:
              description: The header name.
              type: string
              example: Authorization
              maxLength: 128
            value:
              description: The header value.
              type: string
              example: >-
                Bearer
                9515e65f46cb737cd8c191db2fd80bbd05686e5992b241e8ad7727510b7142e6
              maxLength: 255
          required:
            - name
            - value
        maxLength: 10
      secret:
        description: >
          (optional) If you provide a `secret` value, then events sent over HTTP
          will include an `X-Scan-Event-Signature` header that is the SHA-256
          HMAC of the event body using your secret as the key.


          *This value is write-only: the API will not return the secret or show
          that it has been set.*
        type: string
        format: password
        maxLength: 64
        example: tHiSiSaBaDsEcReT
      insecureSkipVerify:
        type: boolean
        example: false
        description: >
          (optional, default: `false`) If `true`, the web hook will not verify
          TLS connections to the web hook URL. Use this only in controlled
          environments where you know that connections between the Deep Security
          Smart Check scanner and the hook URL are secured by other means.
      rootCAs:
        type: string
        example: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCi4uLiBhbmQgc28gb24gLi4uCg==
        description: >
          (optional, default: `null`) If present, the web hook will use the
          provided root CAs as the trusted root CAs for HTTPS web hook requests.
          The value should be a base-64 encoded list of PEM-encoded
          certificates. If not present, the web hook will use a set of built-in
          trusted root CAs.

          If `insecureSkipVerify` is set to `true`, then the root CAs are not
          checked.
        maxLength: 32768
      active:
        type: boolean
        example: true
        description: >
          (optional, default: `false`). If `true`, the web hook will be invoked
          whenever a matching event occurs.
      events:
        type: array
        description: >
          (optional, default: `["*"]`) If present, this is a list of event types
          that will be checked before calling the web hook. If the event type
          matches one of the elements of the list, the web hook will be called.
          If the list is empty, *all* events will match.
        items:
          type: string
          enum:
            - scan-requested
            - scan-started
            - scan-completed
            - '*'
        maxLength: 10
    required:
      - hookURL
  WebhookHeaderRequest: *ref_3
  Webhook: &ref_42
    type: object
    properties:
      id:
        description: >
          (optional) If you provide a web hook ID, the scanner will check
          whether it has already received another request from you with the same
          ID. If it has, the scanner will return `409 Conflict`. If you don't
          provide a web hook ID, the scanner will create one for you.
        type: string
        example: (optional) any unique string
      href:
        type: string
        example: /api/webhooks/7a2f1d8c-7780-41d2-821b-7230005d4be8
        description: |
          The URL at which the web hook can be found.
      name:
        type: string
        description: |
          (optional) A descriptive name for the web hook.
        example: (optional) a descriptive string
        maxLength: 64
      hookURL:
        type: string
        example: 'https://target.example.com/'
        maxLength: 255
      headers:
        type: array
        items: &ref_4
          type: object
          required:
            - id
            - href
            - name
            - value
          properties:
            id:
              type: string
              example: 6af2e0e1-bb7c-45b7-9a3f-152a80d154eb
            href:
              type: string
              example: >-
                /api/webhooks/7a2f1d8c-7780-41d2-821b-7230005d4be8/headers/6af2e0e1-bb7c-45b7-9a3f-152a80d154eb
              description: |
                The URL at which the web hook header can be found.
            name:
              type: string
              example: Authorization
              maxLength: 128
            value:
              type: string
              example: >-
                Bearer
                9515e65f46cb737cd8c191db2fd80bbd05686e5992b241e8ad7727510b7142e6
              maxLength: 255
      insecureSkipVerify:
        type: boolean
        example: false
        description: >
          (optional, default: `false`) If `true`, the web hook will not verify
          TLS connections to the web hook URL. Use this only in controlled
          environments where you know that connections between the Deep Security
          Smart Check scanner and the hook URL are secured by other means.
      rootCAs:
        type: string
        example: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCi4uLiBhbmQgc28gb24gLi4uCg==
        description: >
          (optional, default: `null`) If present, the web hook will use the
          provided root CAs as the trusted root CAs for HTTPS web hook requests.
          The value should be a base-64 encoded list of PEM-encoded
          certificates. If not present, the web hook will use a set of built-in
          trusted root CAs.

          If `insecureSkipVerify` is set to `true`, then the root CAs are not
          checked.
        maxLength: 32768
      active:
        type: boolean
        example: true
      events:
        type: array
        description: >
          (optional, default: `["*"]`) If present, this is a list of event types
          that will be checked before calling the web hook. If the event type
          matches one of the elements of the list, the web hook will be called.
          If the list is empty, *all* events will match.
        items:
          type: string
          enum:
            - scan-requested
            - scan-started
            - scan-completed
            - '*'
        maxLength: 10
      created:
        type: string
        format: date-time
        example: '2018-05-01T00:00:00Z'
      updated:
        type: string
        format: date-time
        example: '2018-05-01T00:00:00Z'
    required:
      - id
      - name
      - href
      - hookURL
      - headers
      - active
      - events
      - created
  WebhookHeader: *ref_4
  ContentScanRulesetRequest: &ref_5
    type: object
    required:
      - name
      - ruleset
    properties:
      name:
        type: string
        example: Scanning rule
        description: |
          The name of this ruleset.
        minLength: 1
        maxLength: 64
      ruleset:
        type: string
        example: cnVsZSBkZXRlY3RvciB7IAoJY29uZGl0aW9uOgoJCXRydWUKfQo=
        description: |
          Base64-encoded yara rules.
        maxLength: 8192
      disabled:
        type: boolean
        example: false
        description: |
          If set to true, this ruleset will not be used for scan.
  ContentScanRuleset: &ref_6
    type: object
    required:
      - id
      - name
      - href
    properties:
      id:
        type: string
        example: 6af2e0e1-bb7c-45b7-9a3f-152a80d154eb
        description: |
          The unique ID assigned to this content scan ruleset.
      name:
        type: string
        example: Scanning ruleset
        description: |
          The name of this ruleset.
      href:
        type: string
        example: >-
          /api/collections/60e53669-c8ef-4d0f-a8ff-3dbbb098d8ff/rulesets/6af2e0e1-bb7c-45b7-9a3f-152a80d154eb
        description: |
          The URL to the ruleset resource.
      ruleset:
        type: string
        example: cnVsZSBkZXRlY3RvciB7IAoJY29uZGl0aW9uOgoJCXRydWUKfQo=
        description: >
          Base64-encoded yara ruleset. In some special rulesets, it will not be
          displayed.
      disabled:
        type: boolean
        example: false
        description: |
          If set to true, this ruleset will not be used for scan.
  ContentScanCollectionRequestWithoutRulesets: &ref_45
    type: object
    required:
      - name
    properties:
      name:
        type: string
        example: Smart Check collection
        description: |
          The name of this ruleset collection.
        minLength: 1
        maxLength: 64
      default:
        type: boolean
        example: true
        description: >
          The global ruleset collection used for content scan. There can only be
          one default ruleset collection at all time. If this value is true, the
          value of other collection will be reset to false.
  ContentScanCollectionRequest: &ref_44
    type: object
    required:
      - name
    properties:
      name:
        type: string
        example: Smart Check collection
        description: |
          The name of this ruleset collection.
        minLength: 1
        maxLength: 64
      default:
        type: boolean
        example: true
        description: >
          The global ruleset collection used for content scan. There can only be
          one default ruleset collection at all time. If this value is true, the
          value of other collection will be reset to false.
      rulesets:
        type: array
        items: *ref_5
        description: |
          The rulesets belonging to this collection.
  ContentScanCollection: &ref_43
    type: object
    required:
      - id
      - href
      - default
    properties:
      id:
        type: string
        example: 6af2e0e1-bb7c-45b7-9a3f-152a80d154eb
        description: |
          The unique ID assigned to this content scan ruleset.
      href:
        type: string
        example: /api/collections/60e53669-c8ef-4d0f-a8ff-3dbbb098d8ff
        description: |
          The URL to the collection resource.
      name:
        type: string
        example: Deep Security Smart Check Collection
        description: |
          The name of this collection.
      default:
        type: boolean
        example: true
        description: >
          True if this is the default collection used for content scans. There
          can only be one default collection at all time.
      rulesets:
        type: array
        items: *ref_6
        description: |
          The rulesets belonging to this collection.
  ScanRequest: &ref_37
    type: object
    properties:
      id:
        description: >
          (optional) If you provide a request ID, the scanner will check whether
          it has already received another request from you with the same ID. If
          it has, the scanner will return `409 Conflict`. If you don't provide a
          request ID, the scanner will create one for you.
        type: string
        example: (optional) any unique string
      name:
        type: string
        description: |
          (optional) A descriptive name for the scan.
        example: (optional) a descriptive string
        maxLength: 128
      source: &ref_8
        description: |
          The source of the image to scan.
        type: object
        properties:
          type:
            type: string
            enum:
              - docker
          registry:
            type: string
            description: |
              (for scan type `docker` only) The registry hostname or IP address.
            example: registry.example.com
            maxLength: 255
          repository:
            type: string
            description: |
              (for scan type `docker` only) The repository name.
            example: organization/project
            maxLength: 255
          tag:
            type: string
            description: |
              (for scan type `docker` only) The tag of the image to scan.
            example: latest
            maxLength: 255
          credentials: &ref_9
            type: object
            properties:
              token:
                type: string
                description: >
                  (optional) Use this if your source requires requests to be
                  authorized using a bearer token. Requests will include an
                  `Authorization: Bearer {token}` header.
                example: >-
                  9515e65f46cb737cd8c191db2fd80bbd05686e5992b241e8ad7727510b7142e6
                maxLength: 10000
              username:
                type: string
                description: >
                  (optional) Use this if your source requires requests to be
                  authorized using basic username + password authentication.
                  Requests will include an `Authorization: Basic {encoded
                  username + password}` header.
                example: username
                maxLength: 128
              password:
                type: string
                format: password
                description: >
                  (optional) Use this if your source requires requests to be
                  authorized using basic username + password authentication.
                  Requests will include an `Authorization: Basic {encoded
                  username + password}` header.
                example: '************'
                maxLength: 10000
              aws:
                type: object
                description: >
                  The AWS-specific information for authenticating to the
                  registry.
                properties:
                  region:
                    type: string
                    description: >
                      The AWS region identifier for the region where the
                      registry is located.
                    example: us-east-1
                    maxLength: 64
                  accessKeyID:
                    type: string
                    description: >
                      The optional AWS IAM access key identifier to use when
                      requesting the registry authorization token. If `roleID`
                      is also set, then `accessKeyID` is the AWS IAM access key
                      ID used to authorize the AWS STS `AssumeRole` request to
                      assume the role. If `accessKeyID` is not set, then the
                      default credential chain is used.
                    example: AKIAIOSFODNN7EXAMPLE
                    maxLength: 64
                  secretAccessKey:
                    type: string
                    description: >
                      The optional AWS IAM secret access key to use when
                      requesting the registry authorization token. If `roleID`
                      is also set, then `secretAccessKey` is the AWS IAM secret
                      access key used to authorize the AWS STS `AssumeRole`
                      request to assume the role.
                    example: wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY
                    maxLength: 128
                  role:
                    type: string
                    description: >
                      The optional AWS IAM role to assume when requesting the
                      registry authorization token. If `accessKeyID` is also
                      set, then `accessKeyID` and `secretAccessKey` are used to
                      authorize the STS `AssumeRole` API request when assuming
                      this role. If AccessKeyID is not set, then the default
                      credential chain is used when assuming the role.
                    example: 'arn:aws:iam::account-id:role/role-name'
                    maxLength: 2048
                  externalID:
                    type: string
                    description: >
                      The optional "external ID" to use when calling the AWS STS
                      `AssumeRole` API to assume the role specified in `roleID`.
                      The external ID may be required by the trust policy on the
                      role being assumed.
                    example: myExternalID
                    maxLength: 1224
                  roleSessionName:
                    type: string
                    description: >
                      The optional "role session name" to use when calling the
                      AWS STS AssumeRole API to assume the role specified in
                      `roleID`. If `roleSessionName` is not provided, then
                      `DeepSecuritySmartCheck` will be used.
                    example: DeepSecuritySmartCheck
                    pattern: '^[\w+=,.@-]*$'
                    maxLength: 64
                  registry:
                    type: string
                    description: >
                      The optional registry ID to use to get the registry
                      authorization token. This can be used to access the
                      registry in another AWS account. If not provided, the
                      default registry will be used.
                    example: account-id
                    maxLength: 64
                required:
                  - region
          insecureSkipVerify:
            type: boolean
            example: false
            description: >
              (optional, default: `false`) If `true`, the scan will not verify
              TLS connections to the source URL. Use this only in controlled
              environments where you know that connections between the Deep
              Security Smart Check scanner and the source are secured by other
              means.
          rootCAs:
            type: string
            example: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCi4uLiBhbmQgc28gb24gLi4uCg==
            description: >
              (optional, default: `null`) If present, the web hook will use the
              provided root CAs as the trusted root CAs for HTTPS source
              requests. The value should be a base-64 encoded list of
              PEM-encoded certificates. If not present, source requests will use
              a set of built-in trusted root CAs.

              If `insecureSkipVerify` is set to `true`, then the root CAs are
              not checked.
            maxLength: 32768
        required:
          - type
      webhooks:
        description: >
          (optional) A list of web hooks to call when events happen for the
          scan.
        type: array
        items: *ref_7
    required:
      - source
  SourceRequest: *ref_8
  Source: &ref_10
    type: object
    properties:
      type:
        type: string
        enum:
          - docker
      registry:
        type: string
        description: |
          (for scan type `docker` only) The registry hostname or IP address.
        example: registry.example.com
        maxLength: 255
      repository:
        type: string
        description: |
          (for scan type `docker` only) The repository name.
        example: organization/project
        maxLength: 255
      tag:
        type: string
        description: |
          (for scan type `docker` only) The tag of the image to scan.
        example: latest
        maxLength: 255
      insecureSkipVerify:
        type: boolean
        example: false
        description: >
          (optional, default: `false`) If `true`, the scan will not verify TLS
          connections to the source URL. Use this only in controlled
          environments where you know that connections between the Deep Security
          Smart Check scanner and the source are secured by other means.
      rootCAs:
        type: string
        example: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCi4uLiBhbmQgc28gb24gLi4uCg==
        description: >
          (optional, default: `null`) If present, the web hook will use the
          provided root CAs as the trusted root CAs for HTTPS web hook requests.
          The value should be a base-64 encoded list of PEM-encoded
          certificates. If not present, the web hook will use a set of built-in
          trusted root CAs.

          If `insecureSkipVerify` is set to `true`, then the root CAs are not
          checked.
        maxLength: 32768
    required:
      - type
  Credentials: *ref_9
  Scan: &ref_36
    type: object
    properties:
      id:
        type: string
        description: |
          The unique ID assigned to this scan.
      href:
        type: string
        example: /api/scans/60e53669-c8ef-4d0f-a8ff-3dbbb098d8ff
        description: |
          The URL to the scan resource.
      name:
        type: string
        description: |
          If you provided a name for the scan, it will be returned here.
        maxLength: 128
      source: *ref_10
      status:
        type: string
        enum:
          - pending
          - in-progress
          - completed-with-findings
          - completed-no-findings
          - failed
      details: &ref_12
        type: object
        properties:
          detail:
            type: string
            example: More details about the scan status
            description: |
              (optional) More details about the scan status.
          requested:
            type: string
            format: date-time
            example: '2018-05-01T00:00:00Z'
            description: |
              The time that the scan was requested.
          started:
            type: string
            format: date-time
            example: '2018-05-01T00:00:00Z'
            description: >
              The time that the scan started. This value will not be present if
              the scan has not yet started.
          updated:
            type: string
            format: date-time
            example: '2018-05-01T00:00:00Z'
            description: >
              The time that the scan was last updated. This value will not be
              present if the scan has not yet started.
          completed:
            type: string
            format: date-time
            example: '2018-05-01T00:00:00Z'
            description: >
              The time that the scan completed. This value will not be present
              if the scan has not yet completed.
          digest:
            type: string
            example: >-
              sha256:43ea500473edb96e079fe23aba62d60e09c11d4c4714ca284d50b80e064c05e3
            description: >
              The image digest for the scanned image. This value will only be
              present for Docker scans.
          os:
            type: string
            example: linux
            description: >
              The target operating system for the scanned image. This value will
              only be present for Docker scans.
          architecture:
            type: string
            example: amd64
            description: >
              The target architecture for the scanned image. This value will
              only be present for Docker scans.
          labels:
            type: object
            additionalProperties:
              type: string
            description: >-
              The labels associated with the scanned image. This value will only
              be present for Docker scans.
            example:
              key: value
          results:
            type: array
            items: &ref_13
              type: object
              properties:
                id:
                  type: string
                  example: >-
                    sha256:77beb64c6eca68574566d5b04b9f64c71d9b7757a446d562b7d0ae4b13b7c467
                  description: >
                    A layer identifier. For scans of type `docker`, this will be
                    the layer's `digest` value. This attribute will not be
                    present for scans of type `http`.
                createdAt:
                  type: string
                  format: date-time
                  example: '2018-05-01T00:00:00Z'
                  description: >
                    For scans of Docker images, this attribute will show the
                    time at which the layer was created.
                createdBy:
                  type: string
                  example: >-
                    /bin/sh -c #(nop) ADD
                    file:5d127078b2f213dbbf08ca35dafd027011606887a655f641024b14d93ee0de2f
                    in /run-httpd.sh
                  description: >
                    For scans of Docker images, this attribute will show the
                    Docker daemon command that ran to create this layer. This is
                    not an exact match to the `Dockerfile` line, but will help
                    to provide better context of the results.
                malware:
                  type: string
                  description: >
                    If present, a URL pointing to the list of malware that was
                    found. See <a
                    href="#listScanLayerMalware">listScanLayerMalware</a>.
                vulnerabilities:
                  type: string
                  description: >
                    If present, a URL pointing to the list of vulnerabilities
                    that were found. See <a
                    href="#listScanLayerVulnerabilities">listScanLayerVulnerabilities</a>.
                contents:
                  type: string
                  description: >
                    If present, a URL pointing to the list of content scan
                    results that were found. See <a
                    href="#listScanLayerVulnerabilities">listScanLayerVulnerabilities</a>.
                findings: &ref_11
                  type: object
                  properties:
                    scanners:
                      type: object
                      description: |
                        Metadata about the scanners that produced the results.
                      properties:
                        malware:
                          description: |
                            Metadata for the malware scanner.
                          type: object
                          properties:
                            status:
                              description: |
                                Availability of the malware scanner.
                              type: string
                              enum:
                                - ok
                                - unavailable
                            updated:
                              description: >
                                The time that the malware pattern database was
                                last updated.
                              type: string
                              format: date-time
                              example: '2018-05-01T00:00:00Z'
                            versions:
                              type: object
                              properties:
                                icrc:
                                  type: string
                                  description: |
                                    The ICRC pattern version.
                                trendX:
                                  type: string
                                  description: |
                                    The TrendX pattern version.
                                blacklist:
                                  type: string
                                  description: |
                                    The malware blacklist pattern version.
                        vulnerabilities:
                          description: |
                            Metadata for the vulnerability scanner.
                          type: object
                          properties:
                            status:
                              description: |
                                Availability of the vulnerability scanner.
                              type: string
                              enum:
                                - ok
                                - unavailable
                            updated:
                              description: >
                                The time that the vulnerabilities database was
                                last updated.
                              type: string
                              format: date-time
                              example: '2018-05-01T00:00:00Z'
                        vulnerabilityPatterns:
                          description: |
                            Metadata for the vulnerability pattern scanner.
                          type: object
                          properties:
                            status:
                              description: >
                                Availability of the vulnerability pattern
                                scanner.
                              type: string
                              enum:
                                - ok
                                - unavailable
                            date:
                              description: >
                                The time that the vulnerability patterns were
                                last published.
                              type: string
                              format: date-time
                              example: '2018-05-01T00:00:00Z'
                            updated:
                              description: >
                                The time that the vulnerability patterns were
                                last synchronized from the vulnerability feed.
                              type: string
                              format: date-time
                              example: '2018-05-01T00:00:00Z'
                    malware:
                      type: integer
                      description: |
                        The number of malware items that were found.
                        high:
                    contents:
                      type: object
                      description: |
                        The number of content findings found by severity.
                      properties:
                        total:
                          type: object
                          description: >
                            The total number of content findings categorized by
                            severity.
                          properties:
                            defcon1:
                              type: integer
                              description: >
                                The number of "Defcon1" content findings that
                                were found.
                            critical:
                              type: integer
                              description: >
                                The number of critical content findings that
                                were found.
                            high:
                              type: integer
                              description: >
                                The number of high-severity content findings
                                that were found.
                            medium:
                              type: integer
                              description: >
                                The number of medium-severity content findings
                                that were found.
                            low:
                              type: integer
                              description: >
                                The number of low-severity content findings that
                                were found.
                            negligible:
                              description: >
                                The number of negligible content findings that
                                were found.
                              type: integer
                            unknown:
                              type: integer
                              description: >
                                The number of content findings with unknown
                                severity that were found.
                    vulnerabilities:
                      type: object
                      description: |
                        The number of vulnerabilities found by severity.
                      properties:
                        total:
                          type: object
                          description: >
                            The total number of vulnerabilities that were found
                            by severity.
                          properties:
                            defcon1:
                              type: integer
                              description: >
                                The number of "Defcon1" vulnerabilities that
                                were found.
                            critical:
                              type: integer
                              description: >
                                The number of critical vulnerabilities that were
                                found.
                            high:
                              type: integer
                              description: >
                                The number of high-severity vulnerabilities that
                                were found.
                            medium:
                              type: integer
                              description: >
                                The number of medium-severity vulnerabilities
                                that were found.
                            low:
                              type: integer
                              description: >
                                The number of low-severity vulnerabilities that
                                were found.
                            negligible:
                              description: >
                                The number of negligible vulnerabilities that
                                were found.
                              type: integer
                            unknown:
                              type: integer
                              description: >
                                The number of vulnerabilities with unknown
                                severity that were found.
                        unresolved:
                          type: object
                          description: >
                            The number of unresolved vulnerabilities that were
                            found by severity. Unresolved vulnerabilities are
                            vulnerabilities that were found in a layer and were
                            not fixed by an update in a subsequent layer.
                          properties:
                            defcon1:
                              type: integer
                              description: >
                                The number of "Defcon1" vulnerabilities that
                                were found.
                            critical:
                              type: integer
                              description: >
                                The number of critical vulnerabilities that were
                                found.
                            high:
                              type: integer
                              description: >
                                The number of high-severity vulnerabilities that
                                were found.
                            medium:
                              type: integer
                              description: >
                                The number of medium-severity vulnerabilities
                                that were found.
                            low:
                              type: integer
                              description: >
                                The number of low-severity vulnerabilities that
                                were found.
                            negligible:
                              description: >
                                The number of negligible vulnerabilities that
                                were found.
                              type: integer
                            unknown:
                              type: integer
                              description: >
                                The number of vulnerabilities with unknown
                                severity that were found.
        required:
          - requested
          - results
      findings: *ref_11
    required:
      - id
      - href
      - name
      - status
  ResultsMetrics: *ref_11
  ScanStatusDetails: *ref_12
  LayerResults: *ref_13
  MalwareScanResult: &ref_39
    type: object
    properties:
      filename:
        type: string
        description: |
          The file where the malware was detected.
        example: path/to/file
      icrc:
        type: object
        properties:
          name:
            type: string
            description: |
              The name of the malware that was detected.
            example: Eicar_test_file
          url:
            type: string
            description: |
              A link to more information about the detected malware.
            example: >-
              https://www.trendmicro.com/vinfo/us/threat-encyclopedia/malware/eicar_test_file
        required:
          - name
          - url
      trendx:
        type: object
        properties:
          found:
            type: object
            properties:
              name:
                type: string
                description: |
                  The name of the malware that was detected.
                example: Eicar_test_file
              url:
                type: string
                description: |
                  A link to more information about the detected malware.
                example: >-
                  https://www.trendmicro.com/vinfo/us/threat-encyclopedia/malware/eicar_test_file
            required:
              - name
              - url
          confidence:
            type: integer
            example: 100
          related:
            type: array
            items:
              type: object
              properties:
                name:
                  type: string
                  description: |
                    The name of related malware that was detected.
                  example: Eicar_test_file
                url:
                  type: string
                  description: |
                    A link to more information about the detected malware.
                  example: >-
                    https://www.trendmicro.com/vinfo/us/threat-encyclopedia/malware/eicar_test_file
              required:
                - name
                - url
  VulnerabilityScanResult: &ref_40
    type: object
    properties:
      name:
        type: string
        description: |
          The name of an installed package with known vulnerabilities.
      namespaceName:
        type: string
        description: |
          The namespace that the package `name` is unique within.
      version:
        type: string
        description: |
          The package version that was detected.
      versionFormat:
        type: string
        description: |
          The version format.
      vulnerabilities:
        type: array
        description: |
          A list of the known vulnerabilities in this package.
        items: &ref_14
          type: object
          properties:
            description:
              type: string
              description: |
                A description of the known vulnerability in this package.
            fixedBy:
              type: string
              description: >
                The version of the package where the vulnerability has been
                resolved.
            fixed:
              type: object
              description: >
                If present, this object will describe the fix and what layer the
                fix is present in.
              properties:
                name:
                  type: string
                  description: |
                    The name of the package.
                namespaceName:
                  type: string
                  description: |
                    The namespace that the package `name` is unique within.
                version:
                  type: string
                  description: |
                    The package version that was detected.
                versionFormat:
                  type: string
                  description: |
                    The version format.
                layer:
                  type: string
                  description: >
                    The layer identifier where the fixed package version was
                    detected.
            link:
              type: string
              description: |
                A link to more information about the vulnerability.
            name:
              type: string
              description: |
                The name of the vulnerability.
            namespaceName:
              type: string
              description: |
                The namespace that the package `name` is unique within.
            severity:
              type: string
              example: high
              enum:
                - defcon1
                - critical
                - high
                - medium
                - low
                - negligible
                - unknown
              description: >
                The severity assigned to the vulnerability:

                * `defcon1`: is a `critical` problem which has been manually
                highlighted by the team. It requires immediate attention.

                * `critical`: a world-burning problem, exploitable for nearly
                all people in a default installation of Linux. Includes remote
                root privilege escalations, or massive data loss.

                * `high`: a real problem, exploitable for many people in a
                default installation. Includes serious remote denial of
                services, local root privilege escalations, or data loss.

                * `medium`: a real security problem, and is exploitable for many
                people. Includes network daemon denial of service attacks,
                cross-site scripting, and gaining user privileges. Updates
                should be made soon for this priority of issue.

                * `low`: a security problem, but is hard to exploit due to
                environment, requires a user-assisted attack, a small install
                base, or does very little damage. These tend to be included in
                security updates only when higher-priority issues require an
                upgrade, or if many low-priority issues have built up.

                * `negligible`: is technically a security problem, but is only
                theoretical in nature, requires a very special situation, has
                almost no install base, or does no real damage. These tend not
                to get backported from upstreams, and will likely not be
                included in security updates unless there is an easy fix and
                some other issue causes an update.
          required:
            - description
            - name
            - severity
      findings:
        type: object
        properties:
          defcon1:
            type: integer
            description: |
              The number of "Defcon1" vulnerabilities that were found.
          critical:
            type: integer
            description: |
              The number of critical vulnerabilities that were found.
          high:
            type: integer
            description: |
              The number of high-severity vulnerabilities that were found.
          medium:
            type: integer
            description: |
              The number of medium-severity vulnerabilities that were found.
          low:
            type: integer
            description: |
              The number of low-severity vulnerabilities that were found.
          negligible:
            description: |
              The number of negligible vulnerabilities that were found.
            type: integer
          unknown:
            type: integer
            description: >
              The number of vulnerabilities with unknown severity that were
              found.
    required:
      - name
      - vulnerabilities
  ContentScanResult: &ref_41
    required:
      - filename
      - rule
      - ruleset
    type: object
    properties:
      filename:
        type: string
        description: |
          The file where the issue was detected by content scanner.
        example: path/to/file
      rule:
        type: string
        description: |
          The content scan name that matches the file content.
        example: ssh_key_search_rsa
      ruleset:
        type: string
        example: >-
          /api/collections/60e53669-c8ef-4d0f-a8ff-3dbbb098d8ff/rulesets/6af2e0e1-bb7c-45b7-9a3f-152a80d154eb
        description: |
          The URL to the ruleset resource.
      description:
        type: string
        example: This is a rule.
        description: |
          The description of the content scan rule.
      severity:
        type: string
        example: critical
        enum:
          - defcon1
          - critical
          - high
          - medium
          - low
          - negligible
          - unknown
      metadata:
        type: object
        description: |
          The metadata of the content scan rule.
        example:
          author: foo
          license: 'http://XXX.XXX.XXX'
      tags:
        type: array
        items:
          type: string
          example: config
        description: |
          The tags of the content scan rule.
  Vulnerability: *ref_14
  RegistryScanRequest: &ref_49
    type: object
    properties:
      name:
        type: string
        description: |
          (optional) A descriptive name for the scan.
        example: (optional) a descriptive string
        maxLength: 128
      source:
        description: |
          The source of the image to scan.
        type: object
        properties:
          repository:
            type: string
            description: |
              The repository name.
            example: organization/project
            maxLength: 255
          tag:
            type: string
            description: |
              The tag of the image to scan.
            example: latest
            maxLength: 255
      webhooks:
        description: >
          (optional) A list of web hooks to call when events happen for the
          scan.
        type: array
        items: *ref_7
  RegistriesDashboard: &ref_51
    type: object
    properties:
      content:
        description: |
          Metrics capturing information about the content of all registries.
        type: object
        properties:
          registries:
            type: integer
            description: |
              The number of registries.
          repositories:
            type: integer
            description: |
              The number of repositories with content in all registries.
          images:
            type: integer
            description: |
              The number of images in all registries.
      scans:
        type: object
        description: >
          Metrics capturing information about the scan status of images in all
          registries.
        properties:
          pending:
            type: integer
            description: >
              The number of images in all registries that have not yet been
              scanned.
          ok:
            type: integer
            description: >
              The number of images in all registries that have been scanned and
              have had no findings.
          warnings:
            type: integer
            description: >
              The number of images in all registries that have been scanned and
              have had findings.
          errors:
            type: integer
            description: >
              The number of images in all registries that have been scanned and
              have encountered errors during the scan.
      findings: *ref_11
      history:
        type: object
        description: |
          Aggregate metrics over a period of time.
        properties:
          1d:
            type: object
            description: |
              Metrics over the past 24 hours.
            properties:
              scans:
                type: integer
                description: >
                  The number of scans performed on images in all registries in
                  the time period. Will be `-1` if there was an error
                  calculating the value.
          1w:
            type: object
            description: |
              Metrics over the past 7 days.
            properties:
              scans:
                type: integer
                description: >
                  The number of scans performed on images in all registries in
                  the time period. Will be `-1` if there was an error
                  calculating the value.
  Image: &ref_50
    type: object
    properties:
      registry:
        type: string
        example: 'https://registry.example.com'
        description: |
          The registry URL where the image can be found.
        maximum: 255
      repository:
        type: string
        example: deepsecurity-smartcheck/example
        description: |
          The repository where the image can be found.
        maximum: 255
      tag:
        type: string
        example: latest
        description: |
          The tag assigned to the image.
        maximum: 255
      digest:
        type: string
        example: >-
          sha256:8476ee13937bfbf3ea2bce060448002a19c19c063b66583dae31cde64b2f2406
        description: |
          The image's hash digest.
      status:
        type: string
        description: |
          The image's last known scan status.
        enum:
          - ''
          - pending
          - in-progress
          - completed-no-findings
          - completed-with-findings
          - failed
      findings: *ref_11
      updated:
        type: string
        format: datetime
        example: '2017-04-01T00:00:00Z'
        description: |
          The time that the image status was last modified.
    required:
      - registry
      - repository
      - tag
      - digest
      - status
      - updated
  RegistryRequest: &ref_48
    type: object
    properties:
      name:
        type: string
        maxLength: 255
        description: >
          The name to display for the registry. If not specified, the registry
          `host` value will be used as the initial name.
        example: My Registry
      description:
        type: string
        maxLength: 2048
        description: |
          A longer-form note to attach to the registry.
        example: >
          This registry is an example, and this description is similarly
          exemplary.
      host:
        type: string
        maxLength: 255
        example: registry.example.com
        description: >
          The host where the registry can be found. Required except when using
          Amazon Elastic Container Registry.
      credentials:
        type: object
        description: |
          Credentials to use when accessing the registry.
        properties:
          username:
            type: string
            maxLength: 64
            description: >
              (optional) Use this if your source requires requests to be
              authorized using basic username + password authentication.
              Requests will include an `Authorization: Basic {encoded username +
              password}` header.
            example: username
          password:
            type: string
            maxLength: 4096
            format: password
            description: >
              (optional) Use this if your source requires requests to be
              authorized using basic username + password authentication.
              Requests will include an `Authorization: Basic {encoded username +
              password}` header.
            example: '************'
          aws:
            type: object
            description: |
              The AWS-specific information for authenticating to the registry.
            properties:
              region:
                type: string
                description: >
                  The AWS region identifier for the region where the registry is
                  located.
                example: us-east-1
                maxLength: 64
              accessKeyID:
                type: string
                description: >
                  The optional AWS IAM access key identifier to use when
                  requesting the registry authorization token. If `roleID` is
                  also set, then `accessKeyID` is the AWS IAM access key ID used
                  to authorize the AWS STS `AssumeRole` request to assume the
                  role. If `accessKeyID` is not set, then the default credential
                  chain is used.
                example: AKIAIOSFODNN7EXAMPLE
                maxLength: 64
              secretAccessKey:
                type: string
                description: >
                  The optional AWS IAM secret access key to use when requesting
                  the registry authorization token. If `roleID` is also set,
                  then `secretAccessKey` is the AWS IAM secret access key used
                  to authorize the AWS STS `AssumeRole` request to assume the
                  role.
                example: wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY
                maxLength: 128
              role:
                type: string
                description: >
                  The optional AWS IAM role to assume when requesting the
                  registry authorization token. If `accessKeyID` is also set,
                  then `accessKeyID` and `secretAccessKey` are used to authorize
                  the STS `AssumeRole` API request when assuming this role. If
                  AccessKeyID is not set, then the default credential chain is
                  used when assuming the role.
                example: 'arn:aws:iam::account-id:role/role-name'
                maxLength: 2048
              externalID:
                type: string
                description: >
                  The optional "external ID" to use when calling the AWS STS
                  `AssumeRole` API to assume the role specified in `roleID`. The
                  external ID may be required by the trust policy on the role
                  being assumed.
                example: myExternalID
                maxLength: 1224
              roleSessionName:
                type: string
                description: >
                  The optional "role session name" to use when calling the AWS
                  STS AssumeRole API to assume the role specified in `roleID`.
                  If `roleSessionName` is not provided, then
                  `DeepSecuritySmartCheck` will be used.
                example: DeepSecuritySmartCheck
                pattern: '^[\w+=,.@-]*$'
                maxLength: 64
              registry:
                type: string
                description: >
                  The optional registry ID to use to get the registry
                  authorization token. This can be used to access the registry
                  in another AWS account. If not provided, the default registry
                  will be used.
                example: account-id
                maxLength: 64
            required:
              - region
      insecureSkipVerify:
        type: boolean
        example: false
        description: >
          If `true`, Deep Security Smart Check will not verify TLS connections
          to the registry. Use this only in controlled environments where you
          know that connections between the Deep Security Smart Check scanner
          and the registry are secured by other means.
      rootCAs:
        type: string
        example: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCi4uLiBhbmQgc28gb24gLi4uCg==
        description: >
          (optional, default: `null`) If present, the service will use the
          provided root CAs as the trusted root CAs for registry requests. The
          value should be a base-64 encoded list of PEM-encoded certificates. If
          not present, the service will use a set of built-in trusted root CAs.

          If `insecureSkipVerify` is set to `true`, then the root CAs are not
          checked.
        maxLength: 32768
      filter:
        type: object
        description: >
          The filters that define the repositories and tags that will be
          synchronized from the registry. The maximum size of the filters for a
          registry is 32768 bytes.
        properties:
          include:
            type: array
            description: >
              A pattern to use when determining which images to synchronize
              (include) from the registry.
            items:
              type: string
              example: '*:latest'
            default:
              - '*'
          exclude:
            type: array
            description: >
              A pattern to use when determining which images to synchronize
              (exclude) from the registry.
            items:
              type: string
              example: experimental/*
            default: []
        required:
          - include
          - exclude
        example:
          include:
            - '*:latest'
          exclude:
            - experimental/*
      schedule:
        type: boolean
        description: |
          If `true`, this registry will be scheduled for daily re-scan.
  Registry: &ref_46
    type: object
    description: |
      The registry object. Credentials will not be included in this object.
    properties:
      id:
        type: string
        example: 6552eebd-5172-411e-ac71-8c323e6ca0fe
        description: |
          The registry ID.
      href:
        type: string
        example: /api/registries/6552eebd-5172-411e-ac71-8c323e6ca0fe
        description: |
          The URL at which the registry can be found.
      name:
        type: string
        description: |
          The name to display for the registry.
        example: My Registry
        maxLength: 255
      description:
        type: string
        description: |
          A longer-form note to attach to the registry.
        example: >
          This registry is an example, and this description is similarly
          exemplary.
        maxLength: 2048
      host:
        type: string
        example: registry.example.com
        description: |
          The host where the registry can be found.
        maxLength: 255
      insecureSkipVerify:
        type: boolean
        example: false
        description: >
          If `true`, Deep Security Smart Check will not verify TLS connections
          to the registry. Use this only in controlled environments where you
          know that connections between the Deep Security Smart Check scanner
          and the registry are secured by other means.
      rootCAs:
        type: string
        example: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCi4uLiBhbmQgc28gb24gLi4uCg==
        description: >
          (optional, default: `null`) If present, the service will use the
          provided root CAs as the trusted root CAs for registry requests. The
          value should be a base-64 encoded list of PEM-encoded certificates. If
          not present, the service will use a set of built-in trusted root CAs.

          If `insecureSkipVerify` is set to `true`, then the root CAs are not
          checked.
        maxLength: 32768
      filter:
        type: object
        description: >
          The filters that define the repositories and tags that will be
          synchronized from the registry. The maximum size of the filters for a
          registry is 32768 bytes.
        properties:
          include:
            type: array
            description: >
              A pattern to use when determining which images to synchronize
              (include) from the registry.
            items:
              type: string
              example: '*:latest'
            default:
              - '*'
          exclude:
            type: array
            description: >
              A pattern to use when determining which images to synchronize
              (exclude) from the registry.
            items:
              type: string
              example: experimental/*
            default: []
        required:
          - include
          - exclude
        example:
          include:
            - '*:latest'
          exclude:
            - experimental/*
      metrics:
        type: object
        description: |
          Registry metrics.
        properties:
          content:
            description: |
              Metrics capturing information about the content of the registry.
            type: object
            properties:
              repositories:
                type: integer
                description: |
                  The number of repositories with content in the registry.
              images:
                type: integer
                description: |
                  The number of images in the registry.
          scans:
            type: object
            description: >
              Metrics capturing information about the scan status of images in
              the registry.
            properties:
              pending:
                type: integer
                description: >
                  The number of images in the registry that have not yet been
                  scanned.
              ok:
                type: integer
                description: >
                  The number of images in the registry that have been scanned
                  and have had no findings.
              warnings:
                type: integer
                description: >
                  The number of images in the registry that have been scanned
                  and have had findings.
              errors:
                type: integer
                description: >
                  The number of images in the registry that have been scanned
                  and have encountered errors during the scan.
          findings: *ref_11
          history:
            type: object
            description: |
              Aggregate metrics over a period of time.
            properties:
              1d:
                type: object
                description: |
                  Metrics over the past 24 hours.
                properties:
                  scans:
                    type: integer
                    description: >
                      The number of scans performed on images in the registry in
                      the time period. Will be `-1` if there was an error
                      calculating the value.
              1w:
                type: object
                description: |
                  Metrics over the past 7 days.
                properties:
                  scans:
                    type: integer
                    description: >
                      The number of scans performed on images in the registry in
                      the time period. Will be `-1` if there was an error
                      calculating the value.
      schedule:
        type: boolean
        description: |
          If `true`, this registry will be scheduled for daily re-scan.
      status:
        type: string
        enum:
          - pending
          - ok
          - failed
        example: pending
        description: >
          Reports the status of the connection from Deep Security Smart Check to
          the registry.

          * `pending`: Deep Security Smart Check has not yet attempted to
          connect to the registry

          * `ok`: The last connection attempt to the registry was successful.

          * `failed`: The last connection attempt to the registry failed.
      statusDetail:
        type: string
        description: |
          Reports additional detail when the status is `failed`.
        example: ''
      created:
        type: string
        format: datetime
        example: '2017-04-01T00:00:00Z'
        description: |
          The time that the registry connection was created.
      updated:
        type: string
        format: datetime
        example: '2017-04-01T00:00:00Z'
        description: |
          The time that the registry connection was last modified.
    required:
      - name
      - status
      - created
      - updated
responses:
  '400': &ref_22
    description: >
      Something about your request didn't quite make sense. The error message
      should help you figure out what went wrong.
    headers:
      X-Request-Id:
        type: string
        description: |
          The request ID assigned to this request.
      X-Api-Version:
        type: string
        description: |
          The API version used in this request.
      X-Api-Notice:
        type: string
        description: >
          If present, this header will include important API information. We
          will use this header as one way to notify you that a new API version
          is available or that the API you are using is going to be removed.
      Sunset:
        type: string
        format: datetime
        description: >
          If present, this API endpoint has been deprecated and may be removed
          at any point after the reported date. The timestamp is an HTTP date
          string in the format `Fri, 11 Nov 2018 11:11:11 GMT`.
      Link:
        type: string
        description: >
          If this API endpoint has been deprecated, a `Link` header with the
          `sunset` relation type may be present with a link to human-readable
          article describing the API change.
    schema: *ref_15
  '401': &ref_23
    description: >
      Did you forget to include a session token in your request? You need to
      include

      ```

      Authorization: Bearer {token}

      ```

      in all requests. You can get a token from the `POST /sessions` API.
    headers:
      X-Request-Id:
        type: string
        description: |
          The request ID assigned to this request.
      X-Api-Version:
        type: string
        description: |
          The API version used in this request.
      X-Api-Notice:
        type: string
        description: >
          If present, this header will include important API information. We
          will use this header as one way to notify you that a new API version
          is available or that the API you are using is going to be removed.
      Sunset:
        type: string
        format: datetime
        description: >
          If present, this API endpoint has been deprecated and may be removed
          at any point after the reported date. The timestamp is an HTTP date
          string in the format `Fri, 11 Nov 2018 11:11:11 GMT`.
      Link:
        type: string
        description: >
          If this API endpoint has been deprecated, a `Link` header with the
          `sunset` relation type may be present with a link to human-readable
          article describing the API change.
    schema: *ref_15
  '403': &ref_24
    description: >
      You tried to do something that you're not allowed to do, you naughty
      scamp. Check your privileges to see what you're actually allowed to do.
      This could also mean that your token has expired.
    headers:
      X-Request-Id:
        type: string
        description: |
          The request ID assigned to this request.
      X-Api-Version:
        type: string
        description: |
          The API version used in this request.
      X-Api-Notice:
        type: string
        description: >
          If present, this header will include important API information. We
          will use this header as one way to notify you that a new API version
          is available or that the API you are using is going to be removed.
      Sunset:
        type: string
        format: datetime
        description: >
          If present, this API endpoint has been deprecated and may be removed
          at any point after the reported date. The timestamp is an HTTP date
          string in the format `Fri, 11 Nov 2018 11:11:11 GMT`.
      Link:
        type: string
        description: >
          If this API endpoint has been deprecated, a `Link` header with the
          `sunset` relation type may be present with a link to human-readable
          article describing the API change.
    schema: *ref_15
  '404': &ref_38
    description: |
      The resource you were looking for doesn't exist.
    headers:
      X-Request-Id:
        type: string
        description: |
          The request ID assigned to this request.
      X-Api-Version:
        type: string
        description: |
          The API version used in this request.
      X-Api-Notice:
        type: string
        description: >
          If present, this header will include important API information. We
          will use this header as one way to notify you that a new API version
          is available or that the API you are using is going to be removed.
      Sunset:
        type: string
        format: datetime
        description: >
          If present, this API endpoint has been deprecated and may be removed
          at any point after the reported date. The timestamp is an HTTP date
          string in the format `Fri, 11 Nov 2018 11:11:11 GMT`.
      Link:
        type: string
        description: >
          If this API endpoint has been deprecated, a `Link` header with the
          `sunset` relation type may be present with a link to human-readable
          article describing the API change.
    schema: *ref_15
  '409': &ref_47
    description: >
      The preconditions in the request you made could not be met. Check the
      `message` string in the response for help troubleshooting the problem.
    headers:
      X-Request-Id:
        type: string
        description: |
          The request ID assigned to this request.
      X-Api-Version:
        type: string
        description: |
          The API version used in this request.
      X-Api-Notice:
        type: string
        description: >
          If present, this header will include important API information. We
          will use this header as one way to notify you that a new API version
          is available or that the API you are using is going to be removed.
      Sunset:
        type: string
        format: datetime
        description: >
          If present, this API endpoint has been deprecated and may be removed
          at any point after the reported date. The timestamp is an HTTP date
          string in the format `Fri, 11 Nov 2018 11:11:11 GMT`.
      Link:
        type: string
        description: >
          If this API endpoint has been deprecated, a `Link` header with the
          `sunset` relation type may be present with a link to human-readable
          article describing the API change.
    schema: *ref_15
  '429': &ref_25
    description: >
      You have made too many requests too quickly. Check the `Retry-After`
      header for an indication of when you might be able to try again.
    headers:
      X-Request-Id:
        type: string
        description: |
          The request ID assigned to this request.
      X-Api-Version:
        type: string
        description: |
          The API version used in this request.
      X-Api-Notice:
        type: string
        description: >
          If present, this header will include important API information. We
          will use this header as one way to notify you that a new API version
          is available or that the API you are using is going to be removed.
      Retry-After:
        description: >
          The amount of time (in seconds) you should wait before trying this
          request again.
        type: integer
      Sunset:
        type: string
        format: datetime
        description: >
          If present, this API endpoint has been deprecated and may be removed
          at any point after the reported date. The timestamp is an HTTP date
          string in the format `Fri, 11 Nov 2018 11:11:11 GMT`.
      Link:
        type: string
        description: >
          If this API endpoint has been deprecated, a `Link` header with the
          `sunset` relation type may be present with a link to human-readable
          article describing the API change.
    schema: *ref_15
  '500': &ref_26
    description: >
      Something has gone terribly wrong. Sorry! The error message may help you
      figure out what went wrong, but it's unlikely that you'll be able to do
      anything about it unless you're the server administrator. It's possible
      that trying again will help, but it's more likely that you're out of luck
      for the moment.
    headers:
      X-Request-Id:
        type: string
        description: |
          The request ID assigned to this request.
      X-Api-Version:
        type: string
        description: |
          The API version used in this request.
      X-Api-Notice:
        type: string
        description: >
          If present, this header will include important API information. We
          will use this header as one way to notify you that a new API version
          is available or that the API you are using is going to be removed.
      Sunset:
        type: string
        format: datetime
        description: >
          If present, this API endpoint has been deprecated and may be removed
          at any point after the reported date. The timestamp is an HTTP date
          string in the format `Fri, 11 Nov 2018 11:11:11 GMT`.
      Link:
        type: string
        description: >
          If this API endpoint has been deprecated, a `Link` header with the
          `sunset` relation type may be present with a link to human-readable
          article describing the API change.
    schema: *ref_15
  '503': &ref_27
    description: >
      The service is temporarily unavailable, likely due to maintenance. It
      should be available soon, check the `Retry-After` header for an indication
      of when you might be able to try again.
    headers:
      X-Request-Id:
        type: string
        description: |
          The request ID assigned to this request.
      X-Api-Version:
        type: string
        description: |
          The API version used in this request.
      X-Api-Notice:
        type: string
        description: >
          If present, this header will include important API information. We
          will use this header as one way to notify you that a new API version
          is available or that the API you are using is going to be removed.
      Retry-After:
        description: >
          The amount of time (in seconds) you should wait before trying this
          request again.
        type: integer
      Sunset:
        type: string
        format: datetime
        description: >
          If present, this API endpoint has been deprecated and may be removed
          at any point after the reported date. The timestamp is an HTTP date
          string in the format `Fri, 11 Nov 2018 11:11:11 GMT`.
      Link:
        type: string
        description: >
          If this API endpoint has been deprecated, a `Link` header with the
          `sunset` relation type may be present with a link to human-readable
          article describing the API change.
    schema: *ref_15
parameters:
  apiversion: &ref_20
    name: X-Api-Version
    description: |
      The version of the API to use.
    in: header
    schema:
      type: string
      enum:
        - '2018-05-01'
    required: false
    default: '2018-05-01'
  expand: &ref_16
    name: expand
    in: query
    type: string
    enum:
      - all
      - none
    default: all
    description: |
      A comma-separated list of attributes to expand in the results.
  cursor: &ref_17
    name: cursor
    in: query
    type: string
    format: byte
    default: ''
    description: >
      An encoded value used to retrieve the next set of results for a query that
      returns more than `limit` results.
  limit: &ref_18
    name: limit
    in: query
    type: integer
    format: int64
    default: 25
    description: |
      The maximum number of records to return.
  query: &ref_19
    name: query
    in: query
    type: string
    default: ''
    description: |
      Space-separated strings to search for.
    maxLength: 64
  dryrunCreate: &ref_29
    name: dryrun
    in: query
    type: boolean
    default: false
    description: >
      Use the `dryrun=true` query parameter to indicate that the request should
      only be tested for validity and should not actually create a record. The
      response code will indicate whether the request was OK (`200 OK`) or
      whether there was a problem in the request.
  dryrunUpdate: &ref_30
    name: dryrun
    in: query
    type: boolean
    default: false
    description: >
      Use the `dryrun=true` query parameter to indicate that the request should
      only be tested for validity and should not actually modify the record. The
      response code will indicate whether the request was OK (`200 OK`) or
      whether there was a problem in the request.
  dryrunDelete: &ref_31
    name: dryrun
    in: query
    type: boolean
    default: false
    description: >
      Use the `dryrun=true` query parameter to indicate that the request should
      only be tested for validity and should not actually delete the record. The
      response code will indicate whether the request was OK (`200 OK`) or
      whether there was a problem in the request.
paths:
  /roles:
    get:
      operationId: listRoles
      summary: List roles
      x-security:
        x-required-privileges:
          - 'roles:list'
      parameters:
        - *ref_16
        - *ref_17
        - *ref_18
        - *ref_19
        - *ref_20
      description: |
        Retrieve a list of roles.
      tags:
        - Roles
      produces:
        - application/json
      responses:
        '200':
          description: |
            The response body contains the roles.
          headers:
            Link:
              type: string
              description: >
                If more data exists, a `Link` header with the `next` relation
                type will be present as a pointer to the next page of data.
                Example: ```Link:
                </api/roles?cursor=dGhpcyB2YWx1ZSBpcyBvcGFxdWUsIGRlY29kaW5nIGl0IHdvbid0IGJlIHVzZWZ1bAo>;
                rel="next"```
            X-Request-Id:
              type: string
              description: |
                The request ID assigned to this request.
            X-Api-Version:
              type: string
              description: |
                The API version used in this request.
            X-Api-Notice:
              type: string
              description: >
                If present, this header will include important API information.
                We will use this header as one way to notify you that a new API
                version is available or that the API you are using is going to
                be removed.
          schema:
            type: object
            properties:
              roles:
                description: |
                  The list of roles.
                type: array
                items: *ref_21
              next:
                type: string
                format: byte
                example: >-
                  dGhpcyB2YWx1ZSBpcyBvcGFxdWUsIGRlY29kaW5nIGl0IHdvbid0IGJlIHVzZWZ1bAo=
                description: >
                  An encoded value that you can use to retrieve the next set of
                  results for a query. If `next` is not present, then there are
                  no more results available.
        '400': *ref_22
        '401': *ref_23
        '403': *ref_24
        '429': *ref_25
        '500': *ref_26
        '503': *ref_27
    post:
      operationId: createRole
      summary: Create a role
      x-security:
        x-required-privileges:
          - 'roles:create'
      description: |
        Create a role.
      tags:
        - Roles
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: request
          in: body
          schema: *ref_28
        - *ref_29
        - *ref_20
      responses:
        '200':
          description: >
            The response body contains the role details. This response will only
            be returned if the `dryrun=true` query parameter was sent.
          headers:
            X-Request-Id:
              type: string
              description: |
                The request ID assigned to this request.
            X-Api-Version:
              type: string
              description: |
                The API version used in this request.
            X-Api-Notice:
              type: string
              description: >
                If present, this header will include important API information.
                We will use this header as one way to notify you that a new API
                version is available or that the API you are using is going to
                be removed.
          schema: *ref_21
        '201':
          description: |
            The response body contains the role details.
          headers:
            Location:
              type: string
              description: |
                The URL at which the role can be found.
            X-Request-Id:
              type: string
              description: |
                The request ID assigned to this request.
            X-Api-Version:
              type: string
              description: |
                The API version used in this request.
            X-Api-Notice:
              type: string
              description: >
                If present, this header will include important API information.
                We will use this header as one way to notify you that a new API
                version is available or that the API you are using is going to
                be removed.
          schema: *ref_21
        '400': *ref_22
        '401': *ref_23
        '403': *ref_24
        '429': *ref_25
        '500': *ref_26
        '503': *ref_27
  '/roles/{id}':
    parameters:
      - name: id
        example: 6552eebd-5172-411e-ac71-8c323e6ca0fe
        in: path
        type: string
        description: |
          The system-assigned role ID.
    get:
      operationId: describeRole
      summary: Describe a role
      x-security:
        x-required-privileges:
          - 'roles:describe'
      description: |
        Retrieve details for a role.
      tags:
        - Roles
      parameters:
        - *ref_16
        - *ref_20
      produces:
        - application/json
      responses:
        '200':
          description: |
            The response body contains the role details.
          headers:
            X-Request-Id:
              type: string
              description: |
                The request ID assigned to this request.
            X-Api-Version:
              type: string
              description: |
                The API version used in this request.
            X-Api-Notice:
              type: string
              description: >
                If present, this header will include important API information.
                We will use this header as one way to notify you that a new API
                version is available or that the API you are using is going to
                be removed.
          schema: *ref_21
        '400': *ref_22
        '401': *ref_23
        '403': *ref_24
        '429': *ref_25
        '500': *ref_26
        '503': *ref_27
    post:
      operationId: modifyRole
      summary: Modify a role
      x-security:
        x-required-privileges:
          - 'roles:modify'
      description: |
        Modify a role.
      tags:
        - Roles
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: request
          in: body
          schema: *ref_28
        - *ref_30
        - *ref_20
      responses:
        '200':
          description: |
            The response body contains the modified role details.
          headers:
            X-Request-Id:
              type: string
              description: |
                The request ID assigned to this request.
            X-Api-Version:
              type: string
              description: |
                The API version used in this request.
            X-Api-Notice:
              type: string
              description: >
                If present, this header will include important API information.
                We will use this header as one way to notify you that a new API
                version is available or that the API you are using is going to
                be removed.
          schema: *ref_21
        '400': *ref_22
        '401': *ref_23
        '403': *ref_24
        '429': *ref_25
        '500': *ref_26
        '503': *ref_27
    delete:
      operationId: deleteRole
      summary: Delete a role
      x-security:
        x-required-privileges:
          - 'roles:delete'
      description: |
        Delete a role.
      tags:
        - Roles
      parameters:
        - *ref_31
        - *ref_20
      responses:
        '200':
          description: >
            The role would be deleted if the `dryrun=true` parameter was not
            present.
          headers:
            X-Request-Id:
              type: string
              description: |
                The request ID assigned to this request.
            X-Api-Version:
              type: string
              description: |
                The API version used in this request.
            X-Api-Notice:
              type: string
              description: >
                If present, this header will include important API information.
                We will use this header as one way to notify you that a new API
                version is available or that the API you are using is going to
                be removed.
        '204':
          description: |
            The role has been deleted.
          headers:
            X-Request-Id:
              type: string
              description: |
                The request ID assigned to this request.
            X-Api-Version:
              type: string
              description: |
                The API version used in this request.
            X-Api-Notice:
              type: string
              description: >
                If present, this header will include important API information.
                We will use this header as one way to notify you that a new API
                version is available or that the API you are using is going to
                be removed.
        '400': *ref_22
        '401': *ref_23
        '403': *ref_24
        '429': *ref_25
        '500': *ref_26
        '503': *ref_27
  /users:
    get:
      operationId: listUsers
      summary: List users
      x-security:
        x-required-privileges:
          - 'users:list'
      parameters:
        - *ref_16
        - *ref_17
        - *ref_18
        - *ref_19
        - *ref_20
      description: |
        Retrieve a list of users.
      tags:
        - Users
      produces:
        - application/json
      responses:
        '200':
          description: |
            The response body contains the users.
          headers:
            Link:
              type: string
              description: >
                If more data exists, a `Link` header with the `next` relation
                type will be present as a pointer to the next page of data.
                Example: ```Link:
                </api/users?cursor=dGhpcyB2YWx1ZSBpcyBvcGFxdWUsIGRlY29kaW5nIGl0IHdvbid0IGJlIHVzZWZ1bAo>;
                rel="next"```
            X-Request-Id:
              type: string
              description: |
                The request ID assigned to this request.
            X-Api-Version:
              type: string
              description: |
                The API version used in this request.
            X-Api-Notice:
              type: string
              description: >
                If present, this header will include important API information.
                We will use this header as one way to notify you that a new API
                version is available or that the API you are using is going to
                be removed.
          schema:
            type: object
            properties:
              users:
                description: |
                  The list of users.
                type: array
                items: *ref_2
              next:
                type: string
                format: byte
                example: >-
                  dGhpcyB2YWx1ZSBpcyBvcGFxdWUsIGRlY29kaW5nIGl0IHdvbid0IGJlIHVzZWZ1bAo=
                description: >
                  An encoded value that you can use to retrieve the next set of
                  results for a query. If `next` is not present, then there are
                  no more results available.
        '400': *ref_22
        '401': *ref_23
        '403': *ref_24
        '429': *ref_25
        '500': *ref_26
        '503': *ref_27
    post:
      operationId: createUser
      summary: Create a user
      x-security:
        x-required-privileges:
          - 'users:create'
      description: |
        Create a user.
      tags:
        - Users
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: request
          in: body
          schema: *ref_32
        - *ref_29
        - *ref_20
      responses:
        '200':
          description: >
            The response body contains the user details. This response will only
            be returned if the `dryrun=true` query parameter was sent.
          headers:
            X-Request-Id:
              type: string
              description: |
                The request ID assigned to this request.
            X-Api-Version:
              type: string
              description: |
                The API version used in this request.
            X-Api-Notice:
              type: string
              description: >
                If present, this header will include important API information.
                We will use this header as one way to notify you that a new API
                version is available or that the API you are using is going to
                be removed.
          schema: *ref_2
        '201':
          description: |
            The response body contains the user details.
          headers:
            Location:
              type: string
              description: |
                The URL at which the user can be found.
            X-Request-Id:
              type: string
              description: |
                The request ID assigned to this request.
            X-Api-Version:
              type: string
              description: |
                The API version used in this request.
            X-Api-Notice:
              type: string
              description: >
                If present, this header will include important API information.
                We will use this header as one way to notify you that a new API
                version is available or that the API you are using is going to
                be removed.
          schema: *ref_2
        '400': *ref_22
        '401': *ref_23
        '403': *ref_24
        '429': *ref_25
        '500': *ref_26
        '503': *ref_27
  '/users/{id}':
    parameters:
      - name: id
        example: 6552eebd-5172-411e-ac71-8c323e6ca0fe
        in: path
        type: string
        description: |
          The system-assigned user ID.
    get:
      operationId: describeUser
      summary: Describe a user
      x-security:
        x-required-privileges:
          - 'users:describe'
      description: |
        Retrieve details for a user.
      tags:
        - Users
      parameters:
        - *ref_16
        - *ref_20
      produces:
        - application/json
      responses:
        '200':
          description: |
            The response body contains the user details.
          headers:
            X-Request-Id:
              type: string
              description: |
                The request ID assigned to this request.
            X-Api-Version:
              type: string
              description: |
                The API version used in this request.
            X-Api-Notice:
              type: string
              description: >
                If present, this header will include important API information.
                We will use this header as one way to notify you that a new API
                version is available or that the API you are using is going to
                be removed.
          schema: *ref_2
        '400': *ref_22
        '401': *ref_23
        '403': *ref_24
        '429': *ref_25
        '500': *ref_26
        '503': *ref_27
    post:
      operationId: modifyUser
      summary: Modify a user
      x-security:
        x-required-privileges:
          - 'users:modify'
      description: |
        Modify a user.
      tags:
        - Users
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: request
          in: body
          schema: *ref_32
        - *ref_30
        - *ref_20
      responses:
        '200':
          description: |
            The response body contains the user details.
          headers:
            Location:
              type: string
              description: |
                The URL at which the user can be found.
            X-Request-Id:
              type: string
              description: |
                The request ID assigned to this request.
            X-Api-Version:
              type: string
              description: |
                The API version used in this request.
            X-Api-Notice:
              type: string
              description: >
                If present, this header will include important API information.
                We will use this header as one way to notify you that a new API
                version is available or that the API you are using is going to
                be removed.
          schema: *ref_2
        '400': *ref_22
        '401': *ref_23
        '403': *ref_24
        '429': *ref_25
        '500': *ref_26
        '503': *ref_27
    delete:
      operationId: deleteUser
      summary: Delete a user
      x-security:
        x-required-privileges:
          - 'users:delete'
      description: |
        Delete a user.
      tags:
        - Users
      parameters:
        - *ref_31
        - *ref_20
      responses:
        '200':
          description: >
            The user would be deleted if the `dryrun=true` parameter was not
            present.
          headers:
            X-Request-Id:
              type: string
              description: |
                The request ID assigned to this request.
            X-Api-Version:
              type: string
              description: |
                The API version used in this request.
            X-Api-Notice:
              type: string
              description: >
                If present, this header will include important API information.
                We will use this header as one way to notify you that a new API
                version is available or that the API you are using is going to
                be removed.
        '204':
          description: |
            The user has been deleted.
          headers:
            X-Request-Id:
              type: string
              description: |
                The request ID assigned to this request.
            X-Api-Version:
              type: string
              description: |
                The API version used in this request.
            X-Api-Notice:
              type: string
              description: >
                If present, this header will include important API information.
                We will use this header as one way to notify you that a new API
                version is available or that the API you are using is going to
                be removed.
        '400': *ref_22
        '401': *ref_23
        '403': *ref_24
        '429': *ref_25
        '500': *ref_26
        '503': *ref_27
  '/users/{id}/password':
    parameters:
      - name: id
        example: 6552eebd-5172-411e-ac71-8c323e6ca0fe
        in: path
        type: string
        description: |
          The system-assigned user ID.
    post:
      operationId: changePassword
      summary: Change password
      x-security:
        x-required-privileges:
          - 'users:changePassword'
      description: |
        Change the user's password.
      tags:
        - Users
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: request
          in: body
          schema: *ref_33
        - *ref_30
        - *ref_20
      responses:
        '200':
          description: |
            The response body contains the user details.
          headers:
            X-Request-Id:
              type: string
              description: |
                The request ID assigned to this request.
            X-Api-Version:
              type: string
              description: |
                The API version used in this request.
            X-Api-Notice:
              type: string
              description: >
                If present, this header will include important API information.
                We will use this header as one way to notify you that a new API
                version is available or that the API you are using is going to
                be removed.
          schema: *ref_2
        '400': *ref_22
        '401': *ref_23
        '403': *ref_24
        '429': *ref_25
        '500': *ref_26
        '503': *ref_27
  /sessions:
    get:
      operationId: listSessions
      summary: List sessions
      x-security:
        x-required-privileges:
          - 'sessions:list'
      parameters:
        - *ref_16
        - *ref_17
        - *ref_18
        - *ref_19
        - *ref_20
      description: |
        Retrieve a list of sessions.
      tags:
        - Sessions
      produces:
        - application/json
      responses:
        '200':
          description: |
            The response body contains the sessions.
          headers:
            Link:
              type: string
              description: >
                If more data exists, a `Link` header with the `next` relation
                type will be present as a pointer to the next page of data.
                Example: ```Link:
                </api/sessions?cursor=dGhpcyB2YWx1ZSBpcyBvcGFxdWUsIGRlY29kaW5nIGl0IHdvbid0IGJlIHVzZWZ1bAo>;
                rel="next"```
            X-Request-Id:
              type: string
              description: |
                The request ID assigned to this request.
            X-Api-Version:
              type: string
              description: |
                The API version used in this request.
            X-Api-Notice:
              type: string
              description: >
                If present, this header will include important API information.
                We will use this header as one way to notify you that a new API
                version is available or that the API you are using is going to
                be removed.
          schema:
            type: object
            properties:
              sessions:
                description: |
                  The list of sessions.
                type: array
                items: *ref_34
              next:
                type: string
                format: byte
                example: >-
                  dGhpcyB2YWx1ZSBpcyBvcGFxdWUsIGRlY29kaW5nIGl0IHdvbid0IGJlIHVzZWZ1bAo=
                description: >
                  An encoded value that you can use to retrieve the next set of
                  results for a query. If `next` is not present, then there are
                  no more results available.
        '400': *ref_22
        '401': *ref_23
        '403': *ref_24
        '429': *ref_25
        '500': *ref_26
        '503': *ref_27
    post:
      operationId: createSession
      summary: Create a session
      x-security:
        x-required-privileges:
          - 'sessions:create'
      description: |
        Create a session.
      tags:
        - Sessions
      security: []
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: request
          in: body
          schema: *ref_35
        - *ref_29
        - *ref_20
      responses:
        '200':
          description: >
            The response body contains the session details. This response will
            only be returned if the `dryrun=true` query parameter was sent.
          headers:
            X-Request-Id:
              type: string
              description: |
                The request ID assigned to this request.
            X-Api-Version:
              type: string
              description: |
                The API version used in this request.
            X-Api-Notice:
              type: string
              description: >
                If present, this header will include important API information.
                We will use this header as one way to notify you that a new API
                version is available or that the API you are using is going to
                be removed.
          schema: *ref_34
        '201':
          description: |
            The response body contains the session details.
          headers:
            Location:
              type: string
              description: |
                The URL at which the session can be found.
            X-Request-Id:
              type: string
              description: |
                The request ID assigned to this request.
            X-Api-Version:
              type: string
              description: |
                The API version used in this request.
            X-Api-Notice:
              type: string
              description: >
                If present, this header will include important API information.
                We will use this header as one way to notify you that a new API
                version is available or that the API you are using is going to
                be removed.
          schema: *ref_34
        '400': *ref_22
        '401': *ref_23
        '403': *ref_24
        '429': *ref_25
        '500': *ref_26
        '503': *ref_27
  '/sessions/{id}':
    parameters:
      - name: id
        example: 6552eebd-5172-411e-ac71-8c323e6ca0fe
        in: path
        type: string
        description: |
          The system-assigned session ID.
    get:
      operationId: describeSession
      summary: Describe a session
      x-security:
        x-required-privileges:
          - 'sessions:describe'
      description: |
        Retrieve details for a session.
      tags:
        - Sessions
      parameters:
        - *ref_16
        - *ref_20
      produces:
        - application/json
      responses:
        '200':
          description: |
            The response body contains the session details.
          headers:
            X-Request-Id:
              type: string
              description: |
                The request ID assigned to this request.
            X-Api-Version:
              type: string
              description: |
                The API version used in this request.
            X-Api-Notice:
              type: string
              description: >
                If present, this header will include important API information.
                We will use this header as one way to notify you that a new API
                version is available or that the API you are using is going to
                be removed.
          schema: *ref_34
        '400': *ref_22
        '401': *ref_23
        '403': *ref_24
        '429': *ref_25
        '500': *ref_26
        '503': *ref_27
    post:
      operationId: refreshSession
      summary: Refresh a session
      x-security:
        x-required-privileges:
          - 'sessions:refresh'
      description: >
        Refresh a session. This request will refresh the session and return a
        new `token` value with a new expiry time.
      tags:
        - Sessions
      parameters:
        - *ref_30
        - *ref_20
      produces:
        - application/json
      responses:
        '200':
          description: |
            The response body contains the refreshed session details.
          headers:
            X-Request-Id:
              type: string
              description: |
                The request ID assigned to this request.
            X-Api-Version:
              type: string
              description: |
                The API version used in this request.
            X-Api-Notice:
              type: string
              description: >
                If present, this header will include important API information.
                We will use this header as one way to notify you that a new API
                version is available or that the API you are using is going to
                be removed.
          schema: *ref_34
        '400': *ref_22
        '401': *ref_23
        '403': *ref_24
        '429': *ref_25
        '500': *ref_26
        '503': *ref_27
    delete:
      operationId: deleteSession
      summary: Delete a session
      x-security:
        x-required-privileges:
          - 'sessions:delete'
      description: |
        Delete a session.
      tags:
        - Sessions
      parameters:
        - *ref_31
        - *ref_20
      responses:
        '200':
          description: >
            The session would be deleted if the `dryrun=true` parameter was not
            present.
          headers:
            X-Request-Id:
              type: string
              description: |
                The request ID assigned to this request.
            X-Api-Version:
              type: string
              description: |
                The API version used in this request.
            X-Api-Notice:
              type: string
              description: >
                If present, this header will include important API information.
                We will use this header as one way to notify you that a new API
                version is available or that the API you are using is going to
                be removed.
        '204':
          description: |
            The session has been deleted.
          headers:
            X-Request-Id:
              type: string
              description: |
                The request ID assigned to this request.
            X-Api-Version:
              type: string
              description: |
                The API version used in this request.
            X-Api-Notice:
              type: string
              description: >
                If present, this header will include important API information.
                We will use this header as one way to notify you that a new API
                version is available or that the API you are using is going to
                be removed.
        '400': *ref_22
        '401': *ref_23
        '403': *ref_24
        '429': *ref_25
        '500': *ref_26
        '503': *ref_27
  /scans:
    get:
      operationId: listScans
      summary: List scans
      description: >
        Retrieve a list of scans. Scans are returned in descending order of
        creation time, so the latest scan is returned first.
      tags:
        - Scans
      produces:
        - application/json
      parameters:
        - *ref_16
        - *ref_17
        - *ref_18
        - name: registry
          in: query
          type: string
          description: >
            When present, the `registry` query parameter will filter the list of
            scans to those scans where the `source.registry` contains the
            provided value. If the `exact` query parameter is also provided (and
            `true`), the filter will do an exact match on the value.
        - name: repository
          in: query
          type: string
          description: >
            When present, the `repository` query parameter will filter the list
            of scans to those scans where the `source.repository` contains the
            provided value. If the `exact` query parameter is also provided (and
            `true`), the filter will do an exact match on the value.
        - name: tag
          in: query
          type: string
          description: >
            When present, the `tag` query parameter will filter the list of
            scans to those scans where the `source.tag` contains the provided
            value. If the `exact` query parameter is also provided (and `true`),
            the filter will do an exact match on the value.
        - name: exact
          in: query
          type: boolean
          description: >
            When present (and true), any filtering done using the `registry`,
            `repository`, and `tag` query parameters will be done using exact
            matches.
        - name: status
          in: query
          type: string
          example: 'failed,completed-with-findings'
          description: >
            When present, the `status` query parameter will filter the list of
            scans to those scans where the `status` value contains one of the
            provided values. Valid values in the list are `pending`,
            `in-progress`, `completed-with-findings`, `completed-no-findings`,
            `failed`. Invalid values are ignored.
        - *ref_20
        - name: digest
          in: query
          type: string
          description: >
            When present, the `digest` query parameer will filter the list of
            scans to those scans where the image digest exactly matches the
            provided value.
      responses:
        '200':
          description: |
            The response body contains the scan objects.
          schema:
            type: object
            properties:
              scans:
                type: array
                items: *ref_36
              next:
                type: string
                format: byte
                example: >-
                  dGhpcyB2YWx1ZSBpcyBvcGFxdWUsIGRlY29kaW5nIGl0IHdvbid0IGJlIHVzZWZ1bAo=
                description: >
                  An encoded value that you can use to retrieve the next set of
                  results for a query. If `next` is not present, then there are
                  no more results available.
        '401': *ref_23
        '403': *ref_24
        '429': *ref_25
        '500': *ref_26
        '503': *ref_27
      x-security:
        x-required-privileges:
          - 'scans:list'
    post:
      operationId: createScan
      summary: Create a scan
      description: |
        Create a new scan.
      tags:
        - Scans
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: request
          in: body
          schema: *ref_37
        - *ref_20
      responses:
        '201':
          description: >
            The scan request has been accepted, the scan has been created, and
            the system will begin processing it soon.
          headers:
            Location:
              description: |
                The scan URL.
              type: string
              example: '/api/scans/{id}'
          schema: *ref_36
        '400': *ref_22
        '401': *ref_23
        '403': *ref_24
        '429': *ref_25
        '500': *ref_26
        '503': *ref_27
      x-security:
        x-required-privileges:
          - 'scans:create'
  /scans/metrics:
    get:
      operationId: describeScanMetrics
      summary: Describe scan metrics
      description: |
        Retrieve scan metrics.
      tags:
        - Scans
      parameters:
        - *ref_20
      produces:
        - application/json
      responses:
        '200':
          description: |
            The response body contains the scan metrics.
          schema:
            type: object
            properties:
              1d:
                type: object
                description: |
                  Metrics over the past 24 hours.
                properties:
                  scans:
                    type: integer
                    description: |
                      The number of scans performed in the time period.
              1w:
                type: object
                description: |
                  Metrics over the past 7 days.
                properties:
                  scans:
                    type: integer
                    description: |
                      The number of scans performed in the time period.
        '401': *ref_23
        '403': *ref_24
        '404': *ref_38
        '429': *ref_25
        '500': *ref_26
        '503': *ref_27
      x-security:
        x-required-privileges:
          - 'scans:list'
  '/scans/{id}':
    parameters:
      - name: id
        description: |
          The scan ID.
        in: path
        required: true
        type: string
    get:
      operationId: describeScan
      summary: Describe a scan
      description: |
        Retrieve scan details.
      tags:
        - Scans
      produces:
        - application/json
      parameters:
        - name: expand
          in: query
          description: >
            The properties of each scan that should be expanded in the response.
            The default (`all`) causes all properties to be expanded.
          type: string
          default: all
          enum:
            - all
            - none
        - *ref_20
      responses:
        '200':
          description: |
            The response body contains the scan object.
          schema: *ref_36
        '400': *ref_22
        '401': *ref_23
        '403': *ref_24
        '404': *ref_38
        '429': *ref_25
        '500': *ref_26
        '503': *ref_27
      x-security:
        x-required-privileges:
          - 'scans:describe'
  '/scans/{id}/layers/{layerID}/malware':
    parameters:
      - name: id
        description: |
          The scan ID.
        in: path
        required: true
        type: string
      - name: layerID
        description: |
          The layer ID.
        in: path
        required: true
        type: string
    get:
      operationId: listScanMalwareFindings
      summary: List scan malware findings
      description: |
        List scan malware findings.
      tags:
        - Scans
      produces:
        - application/json
      parameters:
        - *ref_16
        - *ref_17
        - *ref_18
        - *ref_20
      responses:
        '200':
          description: |
            The response body contains the list of malware findings.
          schema:
            type: object
            properties:
              malware:
                type: array
                items: *ref_39
              next:
                type: string
                format: byte
                example: >-
                  dGhpcyB2YWx1ZSBpcyBvcGFxdWUsIGRlY29kaW5nIGl0IHdvbid0IGJlIHVzZWZ1bAo=
                description: >
                  An encoded value that you can use to retrieve the next set of
                  results for a query. If `next` is not present, then there are
                  no more results available.
        '400': *ref_22
        '401': *ref_23
        '403': *ref_24
        '404': *ref_38
        '429': *ref_25
        '500': *ref_26
        '503': *ref_27
      x-security:
        x-required-privileges:
          - 'scans:describe'
  '/scans/{id}/layers/{layerID}/vulnerabilities':
    parameters:
      - name: id
        description: |
          The scan ID.
        in: path
        required: true
        type: string
      - name: layerID
        description: |
          The layer ID.
        in: path
        required: true
        type: string
    get:
      operationId: listScanVulnerabilityFindings
      summary: List scan vulnerability findings
      description: |
        List scan vulnerability findings.
      tags:
        - Scans
      produces:
        - application/json
      parameters:
        - *ref_16
        - *ref_17
        - *ref_18
        - *ref_20
      responses:
        '200':
          description: |
            The response body contains the list of vulnerability findings.
          schema:
            type: object
            properties:
              vulnerabilities:
                type: array
                items: *ref_40
              next:
                type: string
                format: byte
                example: >-
                  dGhpcyB2YWx1ZSBpcyBvcGFxdWUsIGRlY29kaW5nIGl0IHdvbid0IGJlIHVzZWZ1bAo=
                description: >
                  An encoded value that you can use to retrieve the next set of
                  results for a query. If `next` is not present, then there are
                  no more results available.
        '400': *ref_22
        '401': *ref_23
        '403': *ref_24
        '404': *ref_38
        '429': *ref_25
        '500': *ref_26
        '503': *ref_27
      x-security:
        x-required-privileges:
          - 'scans:describe'
  '/scans/{id}/layers/{layerID}/contents':
    parameters:
      - name: id
        description: |
          The scan ID.
        in: path
        required: true
        type: string
      - name: layerID
        description: |
          The layer ID.
        in: path
        required: true
        type: string
    get:
      operationId: listScanContentFindings
      summary: List scan content findings
      description: |
        List content scan findings.
      tags:
        - Scans
      produces:
        - application/json
      parameters:
        - *ref_16
        - *ref_17
        - *ref_18
        - *ref_20
      responses:
        '200':
          description: |
            The response body contains the list of content scan findings.
          schema:
            type: object
            properties:
              contents:
                type: array
                items: *ref_41
              next:
                type: string
                format: byte
                example: >-
                  dGhpcyB2YWx1ZSBpcyBvcGFxdWUsIGRlY29kaW5nIGl0IHdvbid0IGJlIHVzZWZ1bAo=
                description: >
                  An encoded value that you can use to retrieve the next set of
                  results for a query. If `next` is not present, then there are
                  no more results available.
        '400': *ref_22
        '401': *ref_23
        '403': *ref_24
        '404': *ref_38
        '429': *ref_25
        '500': *ref_26
        '503': *ref_27
      x-security:
        x-required-privileges:
          - 'scans:describe'
  /webhooks:
    get:
      operationId: listWebhooks
      summary: List web hooks
      parameters:
        - *ref_16
        - *ref_17
        - *ref_18
        - *ref_20
      description: |
        Retrieve a list of web hooks.
      tags:
        - Web hooks
      produces:
        - application/json
      responses:
        '200':
          description: |
            The response body contains the web hook objects.
          schema:
            type: object
            properties:
              webhooks:
                type: array
                items: *ref_42
              next:
                type: string
                format: byte
                example: >-
                  dGhpcyB2YWx1ZSBpcyBvcGFxdWUsIGRlY29kaW5nIGl0IHdvbid0IGJlIHVzZWZ1bAo=
                description: >
                  An encoded value that you can use to retrieve the next set of
                  results for a query. If `next` is not present, then there are
                  no more results available.
        '401': *ref_23
        '403': *ref_24
        '429': *ref_25
        '500': *ref_26
        '503': *ref_27
      x-security:
        x-required-privileges:
          - 'webhooks:list'
    post:
      operationId: createWebhook
      summary: Create a web hook
      description: |
        Create a new web hook.
      tags:
        - Web hooks
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: request
          schema: *ref_7
        - *ref_20
      responses:
        '201':
          description: |
            The web hook has been created.
          headers:
            Location:
              description: |
                The webhook URL.
              type: string
              example: '/api/webhooks/{id}'
          schema: *ref_42
        '401': *ref_23
        '403': *ref_24
        '429': *ref_25
        '500': *ref_26
        '503': *ref_27
      x-security:
        x-required-privileges:
          - 'webhooks:create'
  '/webhooks/{id}':
    parameters:
      - name: id
        description: |
          The web hook ID.
        in: path
        required: true
        type: string
    get:
      operationId: describeWebhook
      summary: Describe a web hook
      description: |
        Retrieve web hook details.
      produces:
        - application/json
      tags:
        - Web hooks
      parameters:
        - *ref_20
      responses:
        '200':
          description: |
            The response body contains the web hook object.
          schema: *ref_42
        '401': *ref_23
        '403': *ref_24
        '429': *ref_25
        '500': *ref_26
        '503': *ref_27
      x-security:
        x-required-privileges:
          - 'webhooks:describe'
    post:
      operationId: modifyWebhook
      summary: Modify a web hook
      description: |
        Modify a web hook.
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        - Web hooks
      parameters:
        - *ref_20
      responses:
        '200':
          description: >
            The web hook has been modified. Future calls to the web hook will
            contain the modified values. The response body contains the modified
            web hook object.
          schema: *ref_42
        '401': *ref_23
        '403': *ref_24
        '429': *ref_25
        '500': *ref_26
        '503': *ref_27
      x-security:
        x-required-privileges:
          - 'webhooks:modify'
    delete:
      operationId: deleteWebhook
      summary: Delete a web hook
      description: |
        Delete a web hook.
      tags:
        - Web hooks
      parameters:
        - *ref_20
      responses:
        '204':
          description: |
            The web hook has been deleted.
        '401': *ref_23
        '403': *ref_24
        '429': *ref_25
        '500': *ref_26
        '503': *ref_27
      x-security:
        x-required-privileges:
          - 'webhooks:delete'
  '/webhooks/{id}/ping':
    parameters:
      - name: id
        description: |
          The web hook ID.
        in: path
        required: true
        type: string
    post:
      operationId: pingWebhook
      summary: Ping a web hook
      description: |
        Send a `ping` event to the web hook to test connectivity.
      tags:
        - Web hooks
      parameters:
        - *ref_20
      responses:
        '204':
          description: |
            Invocation of the web hook was successful.
        '400':
          description: |
            Invocation of the web hook was not successful.
          schema: *ref_15
        '401': *ref_23
        '403': *ref_24
        '429': *ref_25
        '500': *ref_26
        '503': *ref_27
      x-security:
        x-required-privileges:
          - 'webhooks:describe'
  '/webhooks/{id}/headers':
    parameters:
      - name: id
        description: |
          The web hook ID.
        in: path
        required: true
        type: string
    get:
      operationId: listWebhookHeaders
      summary: List web hook headers
      description: >
        Get the list of user-defined headers to include in calls to the web
        hook.
      produces:
        - application/json
      tags:
        - Web hooks
      parameters:
        - *ref_20
      responses:
        '200':
          description: |
            The response body contains the list of web hook header objects.
          schema:
            type: object
            properties:
              headers:
                type: array
                items: *ref_4
              next:
                type: string
                format: byte
                example: >-
                  dGhpcyB2YWx1ZSBpcyBvcGFxdWUsIGRlY29kaW5nIGl0IHdvbid0IGJlIHVzZWZ1bAo=
                description: >
                  An encoded value that you can use to retrieve the next set of
                  results for a query. If `next` is not present, then there are
                  no more results available.
        '401': *ref_23
        '403': *ref_24
        '429': *ref_25
        '500': *ref_26
        '503': *ref_27
      x-security:
        x-required-privileges:
          - 'webhooks:describe'
    post:
      operationId: createWebhookHeader
      summary: Create a web hook header
      description: |
        Add a user-defined header to include in calls to the web hook.
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        - Web hooks
      parameters:
        - *ref_20
      responses:
        '201':
          description: |
            The web hook header has been created.
          headers:
            Location:
              description: |
                The web hook header URL.
              type: string
              example: '/api/webhooks/{id}/headers/{headerID}'
          schema: *ref_4
        '401': *ref_23
        '403': *ref_24
        '429': *ref_25
        '500': *ref_26
        '503': *ref_27
      x-security:
        x-required-privileges:
          - 'webhooks:modify'
  '/webhooks/{id}/headers/{headerID}':
    parameters:
      - name: id
        description: |
          The web hook ID.
        in: path
        required: true
        type: string
      - name: headerID
        description: |
          The web hook header ID.
        in: path
        required: true
        type: string
    get:
      operationId: describeWebhookHeader
      summary: Describe a web hook header
      description: |
        Retrieve web hook header details.
      produces:
        - application/json
      tags:
        - Web hooks
      parameters:
        - *ref_20
      responses:
        '200':
          description: |
            The response body contains the web hook header object.
          schema: *ref_42
        '401': *ref_23
        '403': *ref_24
        '429': *ref_25
        '500': *ref_26
        '503': *ref_27
      x-security:
        x-required-privileges:
          - 'webhooks:describe'
    post:
      operationId: modifyWebhookHeader
      summary: Modify a web hook header
      description: |
        Update the web hook header.
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        - Web hooks
      parameters:
        - *ref_20
      responses:
        '200':
          description: >
            The web hook header has been updated. Future calls to the web hook
            will contain the updated values. The response body contains the
            updated web hook header object.
          schema: *ref_4
        '401': *ref_23
        '403': *ref_24
        '429': *ref_25
        '500': *ref_26
        '503': *ref_27
      x-security:
        x-required-privileges:
          - 'webhooks:modify'
    delete:
      operationId: deleteWebhookHeader
      summary: Delete a web hook header
      description: |
        Delete the web hook header.
      tags:
        - Web hooks
      parameters:
        - *ref_20
      responses:
        '204':
          description: >
            The web hook header has been deleted and will no longer be included
            in future calls to the web hook.
        '401': *ref_23
        '403': *ref_24
        '429': *ref_25
        '500': *ref_26
        '503': *ref_27
      x-security:
        x-required-privileges:
          - 'webhooks:modify'
  /license:
    get:
      operationId: describeLicense
      summary: Describe license
      produces:
        - application/json
      tags:
        - License
      parameters:
        - *ref_20
      responses:
        '200':
          description: |
            The response body contains license information.
          schema:
            type: object
            properties:
              type:
                description: |
                  The license type.
                type: string
                enum:
                  - full
                  - trial
                  - none
              expires:
                description: |
                  Timestamp when the license will expire.
                type: string
                format: date-time
                example: '2019-05-01T00:00:00Z'
              gracePeriod:
                description: >
                  Grace period after expiry (in days) when the product will
                  still update.
                type: integer
                example: 0
            required:
              - type
        '401': *ref_23
        '403': *ref_24
        '429': *ref_25
        '500': *ref_26
        '503':
          description: >
            The service is temporarily unavailable, likely due to maintenance.
            It should be available soon, check the `Retry-After` header for an
            indication of when you might be able to try again.
          headers:
            Retry-After:
              description: >
                The amount of time (in seconds) you should wait before trying
                this request again.
              type: integer
          schema: *ref_15
      x-security:
        x-required-privileges:
          - 'licenses:describe'
  /collections:
    get:
      operationId: listCollections
      summary: List content scan ruleset collections
      description: |
        Get the list of content scan rulset collections.
      produces:
        - application/json
      parameters:
        - *ref_16
        - *ref_17
        - *ref_19
        - *ref_18
        - *ref_20
      tags:
        - Content scan
      responses:
        '200':
          description: |
            The response body contains the list of ruleset collection objects.
          schema:
            type: object
            properties:
              collections:
                type: array
                items: *ref_43
              next:
                type: string
                format: byte
                example: >-
                  dGhpcyB2YWx1ZSBpcyBvcGFxdWUsIGRlY29kaW5nIGl0IHdvbid0IGJlIHVzZWZ1bAo=
                description: >
                  An encoded value that you can use to retrieve the next set of
                  results for a query. If `next` is not present, then there are
                  no more results available.
        '400': *ref_22
        '401': *ref_23
        '403': *ref_24
        '429': *ref_25
        '500': *ref_26
        '503': *ref_27
      x-security:
        x-required-privileges:
          - 'collections:list'
    post:
      operationId: createCollection
      summary: Create a content scan ruleset collection
      description: >
        Add a content scan ruleset collection to manage rules. Default rules
        will be automatically inserted into the ruleset created.
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        - Content scan
      parameters:
        - in: body
          name: request
          schema: *ref_44
        - *ref_29
        - *ref_20
      responses:
        '200':
          description: >
            The response body contains the ruleset collection details. This
            response will only be returned if the `dryrun=true` query parameter
            was sent.
        '201':
          description: |
            The content scan ruleset has been created.
          schema: *ref_43
          headers:
            Location:
              description: |
                The content scan ruleset URL.
              type: string
        '400': *ref_22
        '401': *ref_23
        '403': *ref_24
        '429': *ref_25
        '500': *ref_26
        '503': *ref_27
      x-security:
        x-required-privileges:
          - 'collections:create'
  '/collections/{id}':
    parameters:
      - name: id
        description: |
          The collection ID.
        in: path
        required: true
        type: string
    get:
      operationId: describeCollection
      summary: Describe a content scan ruleset collection
      description: |
        Retrieve content scan ruleset collection details.
      produces:
        - application/json
      tags:
        - Content scan
      parameters:
        - *ref_20
      responses:
        '200':
          description: |
            The response body contains the collection object.
          schema:
            type: object
            properties:
              rulesets:
                type: array
                items: *ref_43
        '400': *ref_22
        '401': *ref_23
        '403': *ref_24
        '429': *ref_25
        '500': *ref_26
        '503': *ref_27
      x-security:
        x-required-privileges:
          - 'collections:describe'
    post:
      operationId: modifyCollection
      summary: Modify a content scan ruleset collection
      description: >
        Modify a content scan ruleset collection. Rulesets cannot be modifed
        with this API.
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        - Content scan
      parameters:
        - name: request
          in: body
          schema: *ref_45
        - *ref_30
        - *ref_20
      responses:
        '200':
          description: >
            The collection has been updated. The response body contains the
            updated content scan ruleset collection object.
          schema: *ref_43
          headers:
            Location:
              description: |
                The collection URL.
              type: string
        '400': *ref_22
        '401': *ref_23
        '403': *ref_24
        '429': *ref_25
        '500': *ref_26
        '503': *ref_27
      x-security:
        x-required-privileges:
          - 'collections:modify'
    delete:
      operationId: deleteCollection
      summary: Delete a content scan ruleset collection
      description: |
        Delete a ruleset collection and associated rulesets.
      tags:
        - Content scan
      parameters:
        - *ref_31
        - *ref_20
      responses:
        '200':
          description: >
            The ruleset collection would be deleted if the `dryrun=true`
            parameter was not present.
        '204':
          description: |
            The ruleset collection has been deleted.
        '400': *ref_22
        '401': *ref_23
        '403': *ref_24
        '429': *ref_25
        '500': *ref_26
        '503': *ref_27
      x-security:
        x-required-privileges:
          - 'collections:delete'
  '/collections/{id}/rulesets':
    parameters:
      - name: id
        description: |
          The ruleset ID.
        in: path
        required: true
        type: string
    get:
      operationId: listRulesets
      summary: List content scan rulesets
      description: >
        Get the list of content scan rulesets in the indicated ruleset
        collection.
      produces:
        - application/json
      parameters:
        - *ref_17
        - *ref_19
        - *ref_18
        - *ref_20
      tags:
        - Content scan
      responses:
        '200':
          description: |
            The response body contains the list of ruleset objects.
          schema:
            type: object
            properties:
              rulesets:
                type: array
                items: *ref_6
              next:
                type: string
                format: byte
                example: >-
                  dGhpcyB2YWx1ZSBpcyBvcGFxdWUsIGRlY29kaW5nIGl0IHdvbid0IGJlIHVzZWZ1bAo=
                description: >
                  An encoded value that you can use to retrieve the next set of
                  results for a query. If `next` is not present, then there are
                  no more results available.
        '400': *ref_22
        '401': *ref_23
        '403': *ref_24
        '429': *ref_25
        '500': *ref_26
        '503': *ref_27
      x-security:
        x-required-privileges:
          - 'collections:list'
    post:
      operationId: createRuleset
      summary: Create a content scan ruleset
      description: |
        Add a content scan ruleset to the indicated ruleset collection.
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        - Content scan
      parameters:
        - name: request
          in: body
          schema: *ref_5
        - *ref_29
        - *ref_20
      responses:
        '200':
          description: >
            The response body contains the ruleset details. This response will
            only be returned if the `dryrun=true` query parameter was sent.
        '201':
          description: |
            The content scan ruleset has been created.
          schema: *ref_6
          headers:
            Location:
              description: |
                The content scan ruleset URL.
              type: string
        '400': *ref_22
        '401': *ref_23
        '403': *ref_24
        '429': *ref_25
        '500': *ref_26
        '503': *ref_27
      x-security:
        x-required-privileges:
          - 'rulesets:create'
  '/collections/{id}/rulesets/{rulesetID}':
    parameters:
      - name: id
        description: |
          The ruleset collection ID.
        in: path
        required: true
        type: string
      - name: rulesetID
        description: |
          The ruleset ID.
        in: path
        required: true
        type: string
    get:
      operationId: describeRuleset
      summary: Describe a content scan ruleset
      description: |
        Retrieve content scan rule details.
      produces:
        - application/json
      parameters:
        - *ref_20
      tags:
        - Content scan
      responses:
        '200':
          description: |
            The response body contains the content scan rule object.
          schema: *ref_6
        '400': *ref_22
        '401': *ref_23
        '403': *ref_24
        '429': *ref_25
        '500': *ref_26
        '503': *ref_27
      x-security:
        x-required-privileges:
          - 'rulesets:describe'
    post:
      operationId: modifyRuleset
      summary: Modify a content scan ruleset
      description: >
        Update a content scan ruleset. Built-in rulesets are not allowed to be
        modified except disabling/enabling.
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        - Content scan
      parameters:
        - name: request
          in: body
          schema: *ref_5
        - *ref_30
        - *ref_20
      responses:
        '200':
          description: >
            The content scan ruleset has been updated. The response body
            contains the updated ruleset object.
          schema: *ref_6
          headers:
            Location:
              description: |
                The content scan ruleset URL.
              type: string
        '400': *ref_22
        '401': *ref_23
        '403': *ref_24
        '429': *ref_25
        '500': *ref_26
        '503': *ref_27
      x-security:
        x-required-privileges:
          - 'rulesets:modify'
    delete:
      operationId: deleteRuleset
      summary: Delete a content scan ruleset
      description: |
        Delete a content scan ruleset.
      tags:
        - Content scan
      parameters:
        - *ref_31
        - *ref_20
      responses:
        '200':
          description: >
            The ruleset would be deleted if the `dryrun=true` parameter was not
            present.
        '204':
          description: |
            The content scan ruleset has been deleted.
        '400': *ref_22
        '401': *ref_23
        '403': *ref_24
        '429': *ref_25
        '500': *ref_26
        '503': *ref_27
      x-security:
        x-required-privileges:
          - 'rulesets:delete'
  /registries:
    get:
      operationId: listRegistries
      summary: List registries
      x-security:
        x-required-privileges:
          - 'registries:list'
      description: |
        List registry connections.
      tags:
        - Registries
      parameters:
        - *ref_17
        - *ref_18
        - *ref_19
        - *ref_20
      produces:
        - application/json
      responses:
        '200':
          description: |
            The response body contains the registry records.
          headers:
            Link:
              type: string
              description: >
                If more data exists, a `Link` header with the `next` relation
                type will be present as a pointer to the next page of data.
                Example: ```Link:
                </api/registries?cursor=dGhpcyB2YWx1ZSBpcyBvcGFxdWUsIGRlY29kaW5nIGl0IHdvbid0IGJlIHVzZWZ1bAo>;
                rel="next"```
            X-Request-Id:
              type: string
              description: |
                The request ID assigned to this request.
            X-Api-Version:
              type: string
              description: |
                The API version used in this request.
            X-Api-Notice:
              type: string
              description: >
                If present, this header will include important API information.
                We will use this header as one way to notify you that a new API
                version is available or that the API you are using is going to
                be removed.
          schema:
            type: object
            properties:
              registries:
                type: array
                description: |
                  The list of registries.
                items: *ref_46
              next:
                type: string
                format: byte
                example: >-
                  dGhpcyB2YWx1ZSBpcyBvcGFxdWUsIGRlY29kaW5nIGl0IHdvbid0IGJlIHVzZWZ1bAo=
                description: >
                  An encoded value that you can use to retrieve the next set of
                  results for a query. If `next` is not present, then there are
                  no more results available.
        '400': *ref_22
        '401': *ref_23
        '403': *ref_24
        '404': *ref_38
        '409': *ref_47
        '429': *ref_25
        '500': *ref_26
        '503': *ref_27
    post:
      operationId: createRegistry
      summary: Create a registry
      x-security:
        x-required-privileges:
          - 'registries:create'
      description: |
        Create a new registry connection.
      tags:
        - Registries
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: request
          in: body
          schema: *ref_48
        - *ref_29
        - name: ping
          in: query
          type: boolean
          default: true
          description: >
            Use `false` to disable automatic checking of the registry host and
            credentials during the update.
        - *ref_20
      responses:
        '200':
          description: >
            The response body contains the registry details. This response will
            only be returned if the `dryrun=true` query parameter was sent.
          headers:
            X-Request-Id:
              type: string
              description: |
                The request ID assigned to this request.
            X-Api-Version:
              type: string
              description: |
                The API version used in this request.
            X-Api-Notice:
              type: string
              description: >
                If present, this header will include important API information.
                We will use this header as one way to notify you that a new API
                version is available or that the API you are using is going to
                be removed.
          schema: *ref_46
        '201':
          description: |
            The response body contains the registry details.
          headers:
            X-Request-Id:
              type: string
              description: |
                The request ID assigned to this request.
            X-Api-Version:
              type: string
              description: |
                The API version used in this request.
            X-Api-Notice:
              type: string
              description: >
                If present, this header will include important API information.
                We will use this header as one way to notify you that a new API
                version is available or that the API you are using is going to
                be removed.
          schema: *ref_46
        '400': *ref_22
        '401': *ref_23
        '403': *ref_24
        '404': *ref_38
        '409': *ref_47
        '429': *ref_25
        '500': *ref_26
        '503': *ref_27
  '/registries/{id}':
    parameters:
      - name: id
        description: |
          The system-assigned registry ID.
        in: path
        required: true
        type: string
        example: 6552eebd-5172-411e-ac71-8c323e6ca0fe
    get:
      operationId: describeRegistry
      summary: Describe a registry
      x-security:
        x-required-privileges:
          - 'registries:describe'
      description: |
        Get the details of a registry connection.
      tags:
        - Registries
      parameters:
        - *ref_20
      produces:
        - application/json
      responses:
        '200':
          description: |
            The response body contains the registry details.
          headers:
            X-Request-Id:
              type: string
              description: |
                The request ID assigned to this request.
            X-Api-Version:
              type: string
              description: |
                The API version used in this request.
            X-Api-Notice:
              type: string
              description: >
                If present, this header will include important API information.
                We will use this header as one way to notify you that a new API
                version is available or that the API you are using is going to
                be removed.
          schema: *ref_46
        '400': *ref_22
        '401': *ref_23
        '403': *ref_24
        '404': *ref_38
        '409': *ref_47
        '429': *ref_25
        '500': *ref_26
        '503': *ref_27
    post:
      operationId: modifyRegistry
      summary: Modify a registry
      x-security:
        x-required-privileges:
          - 'registries:modify'
      description: |
        Modify the details of a registry connection.
      tags:
        - Registries
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: request
          in: body
          schema: *ref_48
        - *ref_30
        - name: ping
          in: query
          type: boolean
          default: true
          description: >
            Use `false` to disable automatic checking of the registry host and
            credentials during the update.
        - *ref_20
      responses:
        '200':
          description: |
            The response body contains the registry details.
          headers:
            X-Request-Id:
              type: string
              description: |
                The request ID assigned to this request.
            X-Api-Version:
              type: string
              description: |
                The API version used in this request.
            X-Api-Notice:
              type: string
              description: >
                If present, this header will include important API information.
                We will use this header as one way to notify you that a new API
                version is available or that the API you are using is going to
                be removed.
          schema: *ref_46
        '400': *ref_22
        '401': *ref_23
        '403': *ref_24
        '404': *ref_38
        '409': *ref_47
        '429': *ref_25
        '500': *ref_26
        '503': *ref_27
    delete:
      operationId: deleteRegistry
      summary: Delete a registry
      x-security:
        x-required-privileges:
          - 'registries:delete'
      description: |
        Delete a registry connection.
      tags:
        - Registries
      parameters:
        - *ref_31
        - *ref_20
      responses:
        '200':
          description: >
            The registry connection would be deleted if the `dryrun=true`
            parameter was not present.
          headers:
            X-Request-Id:
              type: string
              description: |
                The request ID assigned to this request.
            X-Api-Version:
              type: string
              description: |
                The API version used in this request.
            X-Api-Notice:
              type: string
              description: >
                If present, this header will include important API information.
                We will use this header as one way to notify you that a new API
                version is available or that the API you are using is going to
                be removed.
        '204':
          description: |
            The registry connection has been deleted.
          headers:
            X-Request-Id:
              type: string
              description: |
                The request ID assigned to this request.
            X-Api-Version:
              type: string
              description: |
                The API version used in this request.
            X-Api-Notice:
              type: string
              description: >
                If present, this header will include important API information.
                We will use this header as one way to notify you that a new API
                version is available or that the API you are using is going to
                be removed.
        '400': *ref_22
        '401': *ref_23
        '403': *ref_24
        '404': *ref_38
        '409': *ref_47
        '429': *ref_25
        '500': *ref_26
        '503': *ref_27
  '/registries/{id}/scans':
    post:
      operationId: createScan
      summary: Create a scan
      x-security:
        x-required-privileges:
          - 'scans:create'
      description: |
        Create a scan using stored registry details.
      tags:
        - Registries
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: request
          in: body
          schema: *ref_49
        - *ref_29
        - *ref_20
      responses:
        '200':
          description: >
            The response body contains the scan details. This response will only
            be returned if the `dryrun=true` query parameter was sent.
          headers:
            X-Request-Id:
              type: string
              description: |
                The request ID assigned to this request.
            X-Api-Version:
              type: string
              description: |
                The API version used in this request.
            X-Api-Notice:
              type: string
              description: >
                If present, this header will include important API information.
                We will use this header as one way to notify you that a new API
                version is available or that the API you are using is going to
                be removed.
          schema: *ref_36
        '201':
          description: |
            The response body contains the scan details.
          headers:
            X-Request-Id:
              type: string
              description: |
                The request ID assigned to this request.
            X-Api-Version:
              type: string
              description: |
                The API version used in this request.
            X-Api-Notice:
              type: string
              description: >
                If present, this header will include important API information.
                We will use this header as one way to notify you that a new API
                version is available or that the API you are using is going to
                be removed.
          schema: *ref_36
        '400': *ref_22
        '401': *ref_23
        '403': *ref_24
        '404': *ref_38
        '409': *ref_47
        '429': *ref_25
        '500': *ref_26
        '503': *ref_27
  '/registries/{id}/images':
    parameters:
      - name: id
        description: |
          The system-assigned registry ID.
        in: path
        required: true
        type: string
        example: 6552eebd-5172-411e-ac71-8c323e6ca0fe
    get:
      operationId: listRegistryImages
      summary: List registry images
      x-security:
        x-required-privileges:
          - 'registries:describe'
      description: |
        Get the list of images synchronized from the registry.
      tags:
        - Registries
      parameters:
        - *ref_20
      produces:
        - application/json
      responses:
        '200':
          description: >
            The response body contains the list of images synchronized from the
            registry.
          headers:
            X-Request-Id:
              type: string
              description: |
                The request ID assigned to this request.
            X-Api-Version:
              type: string
              description: |
                The API version used in this request.
            X-Api-Notice:
              type: string
              description: >
                If present, this header will include important API information.
                We will use this header as one way to notify you that a new API
                version is available or that the API you are using is going to
                be removed.
          schema:
            type: array
            items: *ref_50
        '400': *ref_22
        '401': *ref_23
        '403': *ref_24
        '404': *ref_38
        '409': *ref_47
        '429': *ref_25
        '500': *ref_26
        '503': *ref_27
  '/registries/{id}/images/{imageID}':
    parameters:
      - name: id
        description: |
          The system-assigned registry ID.
        in: path
        required: true
        type: string
        example: 6552eebd-5172-411e-ac71-8c323e6ca0fe
      - name: imageID
        description: |
          The system-assigned image ID.
        in: path
        required: true
        type: string
        example: 6552eebd-5172-411e-ac71-8c323e6ca0fe
    get:
      operationId: describeRegistryImage
      summary: Describe a registry image
      x-security:
        x-required-privileges:
          - 'registries:describe'
      description: |
        Get image details.
      tags:
        - Registries
      parameters:
        - *ref_20
      produces:
        - application/json
      responses:
        '200':
          description: |
            The response body contains the image details.
          headers:
            X-Request-Id:
              type: string
              description: |
                The request ID assigned to this request.
            X-Api-Version:
              type: string
              description: |
                The API version used in this request.
            X-Api-Notice:
              type: string
              description: >
                If present, this header will include important API information.
                We will use this header as one way to notify you that a new API
                version is available or that the API you are using is going to
                be removed.
          schema: *ref_50
        '400': *ref_22
        '401': *ref_23
        '403': *ref_24
        '404': *ref_38
        '409': *ref_47
        '429': *ref_25
        '500': *ref_26
        '503': *ref_27
  /registries/dashboard:
    get:
      operationId: describeDashboard
      summary: Describe registries dashboard
      x-security:
        x-required-privileges:
          - 'dashboards:describe'
      description: |
        Get registry dashboard metrics.
      tags:
        - Registries
      parameters:
        - *ref_20
      produces:
        - application/json
      responses:
        '200':
          description: |
            The response body contains the dashboard metrics.
          headers:
            X-Request-Id:
              type: string
              description: |
                The request ID assigned to this request.
            X-Api-Version:
              type: string
              description: |
                The API version used in this request.
            X-Api-Notice:
              type: string
              description: >
                If present, this header will include important API information.
                We will use this header as one way to notify you that a new API
                version is available or that the API you are using is going to
                be removed.
          schema: *ref_51
        '400': *ref_22
        '401': *ref_23
        '403': *ref_24
        '404': *ref_38
        '409': *ref_47
        '429': *ref_25
        '500': *ref_26
        '503': *ref_27
